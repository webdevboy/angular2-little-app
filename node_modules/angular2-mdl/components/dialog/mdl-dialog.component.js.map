{"version":3,"file":"mdl-dialog.component.js","sourceRoot":"","sources":["../../../src/lib/components/dialog/mdl-dialog.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ViewChild,\n  TemplateRef,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\n\nimport { MdlDialogService, MdlDialogReference } from './mdl-dialog.service';\nimport { BooleanProperty } from './../common/boolean-property';\nimport { IMdlDialogConfiguration } from './mdl-dialog-configuration';\n\n\n\n\nexport class MdlDialogComponent {\n\n   private template: TemplateRef<any>;\n\n  // @deprecated use mdl-dialog-config instead (will be removed in 3.0.0)\n   @BooleanProperty() public modal;\n   public config: IMdlDialogConfiguration;\n   public showEmitter: EventEmitter<MdlDialogReference> = new EventEmitter<MdlDialogReference>();\n   public hideEmitter: EventEmitter<void> = new EventEmitter<void>();\n\n  private isShown = false;\n  private dialogRef : MdlDialogReference = null;\n\n  constructor(private dialogService: MdlDialogService) {}\n\n\n  public show(): Observable<MdlDialogReference> {\n\n    if(this.isShown){\n      throw new Error('Only one instance of an embedded mdl-dialog can exist!');\n    }\n    this.isShown = true;\n\n    let mergedConfig: IMdlDialogConfiguration = this.config || {};\n\n    // mdl-modal overwrites config.isModal if present\n    mergedConfig.isModal = typeof this.modal !== 'undefined' ? this.modal : mergedConfig.isModal;\n    // default is true\n    if (typeof mergedConfig.isModal === 'undefined'){\n      mergedConfig.isModal = true;\n    }\n\n    let result: Subject<any> = new Subject();\n\n    let p = this.dialogService.showDialogTemplate(this.template, mergedConfig);\n    p.subscribe( (dialogRef: MdlDialogReference) => {\n\n      this.dialogRef = dialogRef;\n\n      this.dialogRef.onVisible().subscribe( () => {\n        this.showEmitter.emit(dialogRef);\n\n        result.next(dialogRef);\n        result.complete();\n\n      });\n\n      this.dialogRef.onHide().subscribe( () => {\n        this.hideEmitter.emit(null);\n        this.dialogRef = null;\n        this.isShown = false;\n      });\n\n    })\n    return result.asObservable();\n  }\n\n  public close() {\n    if (this.dialogRef){\n      this.dialogRef.hide();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'mdl-dialog',\n  template: `\n    <div *dialogTemplate>\n      <ng-content></ng-content>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdlDialogService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'template': [{ type: ViewChild, args: [TemplateRef, ] },],\n'modal': [{ type: Input, args: ['mdl-modal', ] },],\n'config': [{ type: Input, args: ['mdl-dialog-config', ] },],\n'showEmitter': [{ type: Output, args: ['show', ] },],\n'hideEmitter': [{ type: Output, args: ['hide', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}