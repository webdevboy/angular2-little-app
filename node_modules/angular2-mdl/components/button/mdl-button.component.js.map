{"version":3,"file":"mdl-button.component.js","sourceRoot":"","sources":["../../../src/lib/components/button/mdl-button.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Input,\n  ElementRef,\n  OnChanges,\n  Renderer,\n  NgModule,\n  ModuleWithProviders,\n  ViewEncapsulation\n} from '@angular/core';\nimport { MdlError } from '../common/mdl-error';\nimport { BooleanProperty } from '../common/boolean-property';\n\nexport class MdlUnsupportedButtonTypeError extends MdlError {\n  constructor(type: string) {\n    super(`Button type \"${type}\" isn't supported (allowed: raised, fab, mini-fab, icon, '').`);\n  }\n}\n\nexport class MdlUnsupportedColoredTypeError extends MdlError {\n  constructor(type: string) {\n    super(`Colored type \"${type}\" isn't supported (allowed: primary, accent, '').`);\n  }\n}\n\nconst MDL_BUTTON_TYPES = [\n  'raised',\n  'fab',\n  'mini-fab',\n  'icon',\n  ''\n];\n\nconst MDL_COLORED_TYPES = [\n  'primary',\n  'accent',\n  ''\n];\n\n\n\nexport class MdlButtonComponent implements OnChanges {\n\n  private element: HTMLElement;\n\n   public mdlButtonType: 'raised' | 'fab' | 'mini-fab' | 'icon' | '' ;\n   public mdlColoredType: 'primary' | 'accent' | '';\n   @BooleanProperty() public disabled = false;\n\n  constructor(public elementRef: ElementRef, private renderer: Renderer) {\n    this.element = elementRef.nativeElement;\n  }\n\n  public ngOnChanges() {\n\n    if (this.mdlButtonType && MDL_BUTTON_TYPES.indexOf(this.mdlButtonType) === -1) {\n      throw new MdlUnsupportedButtonTypeError(this.mdlButtonType);\n    }\n\n    if ( this.mdlColoredType && MDL_COLORED_TYPES.indexOf(this.mdlColoredType) === -1) {\n      throw new MdlUnsupportedColoredTypeError(this.mdlColoredType);\n    }\n  }\n\n  public onMouseUp() {\n    this.blurIt();\n  }\n\n  public onMouseLeave() {\n    this.blurIt();\n  }\n\n  public blurIt() {\n    this.renderer.invokeElementMethod(this.element, 'blur', []);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'mdl-button, button[mdl-button], a[mdl-button]',\n  host: {\n    '[attr.disabled]': 'disabled ? \"disabled\" : null',\n    '(mouseup)': 'onMouseUp()',\n    '(mouseleave)': 'onMouseLeave()',\n    '[class.mdl-button]': 'true',\n    '[class.mdl-button--raised]':   'mdlButtonType == \"raised\"',\n    '[class.mdl-button--fab]':      'mdlButtonType == \"fab\" || mdlButtonType == \"mini-fab\"',\n    '[class.mdl-button--mini-fab]': 'mdlButtonType == \"mini-fab\"',\n    '[class.mdl-button--icon]':     'mdlButtonType == \"icon\"',\n    '[class.mdl-button--primary]' : 'mdlColoredType == \"primary\"',\n    '[class.mdl-button--accent]' :  'mdlColoredType == \"accent\"'\n  },\n  exportAs: 'mdlButton',\n  template: '<ng-content></ng-content>',\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'mdlButtonType': [{ type: Input, args: ['mdl-button-type', ] },],\n'mdlColoredType': [{ type: Input, args: ['mdl-colored', ] },],\n'disabled': [{ type: Input },],\n};\n}\n\n\nconst MDL_BUTTON_DIRECTIVES = [MdlButtonComponent];\n\n\nexport class MdlButtonModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdlButtonModule,\n      providers: []\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [],\n  exports: MDL_BUTTON_DIRECTIVES,\n  declarations: MDL_BUTTON_DIRECTIVES,\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}