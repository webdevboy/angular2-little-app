{"version":3,"file":"mdl-tooltip.directive.js","sourceRoot":"","sources":["../../../src/lib/components/tooltip/mdl-tooltip.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Directive,\n  Input,\n  OnInit,\n  ViewContainerRef,\n  Renderer,\n  ComponentRef,\n  ComponentFactoryResolver,\n  HostListener\n} from '@angular/core';\nimport { MdlSimpleTooltipComponent, MdlTooltipComponent } from './mdl-tooltip.component';\n\nexport class AbstractMdlTooltipDirective implements OnInit {\n\n  protected tooltip: string|MdlTooltipComponent;\n  protected position: 'left' | 'right' | 'top' | 'bottom';\n\n  protected tooltipComponent: MdlSimpleTooltipComponent;\n\n  constructor(\n    private vcRef: ViewContainerRef,\n    private large: boolean,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private renderer: Renderer) {\n  }\n\n\n  public ngOnInit() {\n    // if the tooltip is not an instance of MdlTooltipComponent\n    // we create a simpleTooltipComponent on the fly.\n    if (!(this.tooltip instanceof MdlTooltipComponent)) {\n\n      let cFactory = this.componentFactoryResolver.resolveComponentFactory(MdlSimpleTooltipComponent);\n      let cRef: ComponentRef<MdlSimpleTooltipComponent> = this.vcRef.createComponent(cFactory);\n\n      this.tooltipComponent = <MdlSimpleTooltipComponent> cRef.instance;\n      this.tooltipComponent.tooltipText = <string>this.tooltip;\n      this.configureTooltipComponent();\n\n    } else {\n      this.tooltipComponent = <MdlTooltipComponent>this.tooltip;\n      this.configureTooltipComponent();\n    }\n\n  }\n\n\n\n  private configureTooltipComponent() {\n    this.tooltipComponent.large = this.large;\n    this.tooltipComponent.position = this.position;\n  }\n\n  protected onMouseEnter(event) {\n    this.tooltipComponent.mouseEnter(event);\n  }\n\n  \n  protected onMouseLeave() {\n    this.tooltipComponent.mouseLeave();\n  }\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onMouseLeave': [{ type: HostListener, args: ['window:touchstart', ] },],\n};\n}\n\n\nconst host: { [key: string]: string; } = {\n  '(mouseenter)': 'onMouseEnter($event)',\n  '(touchend)': 'onMouseEnter($event)',\n  '(mouseleave)': 'onMouseLeave()'\n};\n\n\n\nexport class MdlTooltipDirective extends AbstractMdlTooltipDirective {\n\n             public tooltip: string|MdlTooltipComponent;\n    public position: 'left' | 'right' | 'top' | 'bottom';\n\n  constructor(\n    vcRef: ViewContainerRef,\n    componentFactoryResolver: ComponentFactoryResolver,\n    renderer: Renderer) {\n    super(vcRef, false, componentFactoryResolver, renderer);\n  }\n\n  public ngOnInit() { super.ngOnInit(); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdl-tooltip]',\n  host: host\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: ComponentFactoryResolver, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip': [{ type: Input, args: ['mdl-tooltip', ] },],\n'position': [{ type: Input, args: ['mdl-tooltip-position', ] },],\n};\n}\n\n\nexport class MdlTooltipLargeDirective extends AbstractMdlTooltipDirective {\n\n       public tooltip: string|MdlTooltipComponent;\n    public position: 'left' | 'right' | 'top' | 'bottom';\n\n  constructor(\n    vcRef: ViewContainerRef,\n    componentFactoryResolver: ComponentFactoryResolver,\n    renderer: Renderer) {\n    super(vcRef, true, componentFactoryResolver, renderer);\n  }\n\n  public ngOnInit() { super.ngOnInit(); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdl-tooltip-large]',\n  host: host\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: ComponentFactoryResolver, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip': [{ type: Input, args: ['mdl-tooltip-large', ] },],\n'position': [{ type: Input, args: ['mdl-tooltip-position', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}