{"version":3,"file":"mdl-switch.component.js","sourceRoot":"","sources":["../../../src/lib/components/switch/mdl-switch.component.ts"],"names":[],"mappings":";;;;;OAAO,EACL,SAAS,EACT,UAAU,EACV,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,iBAAiB,EAElB,MAAM,eAAe;OAEf,EACL,iBAAiB,EACjB,WAAW,EACZ,MAAM,gBAAgB;OAChB,EAAE,oBAAoB,EAAE,MAAM,oCAAoC;OAClE,EAAE,YAAY,EAAE,MAAM,iBAAiB;AAG9C;IAAwC,sCAAoB;IAE1D,4BAAY,UAAsB,EAAE,QAAkB;QACpD,kBAAM,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC9B,CAAC;IAEI,6BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,YAAY;oBACtB,SAAS,EAAE,CAAC;4BACV,OAAO,EAAE,iBAAiB;4BAC1B,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,kBAAkB,EAAlB,CAAkB,CAAC;4BACjD,KAAK,EAAE,IAAI;yBACZ,CAAC;oBACF,IAAI,EAAE;wBACJ,SAAS,EAAE,WAAW;wBACtB,oBAAoB,EAAE,MAAM;wBAC5B,qBAAqB,EAAE,MAAM;wBAC7B,oBAAoB,EAAE,OAAO;wBAC7B,qBAAqB,EAAE,UAAU;qBAClC;oBACD,OAAO,EAAE,CAAC,QAAQ,CAAC;oBACnB,QAAQ,EAAE,yYAST;oBACD,aAAa,EAAE,iBAAiB,CAAC,IAAI;iBACtC,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,iCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;QACpB,EAAC,IAAI,EAAE,QAAQ,GAAG;KACjB,EAH6F,CAG7F,CAAC;IACF,yBAAC;AAAD,CAAC,AAxCD,CAAwC,oBAAoB,GAwC3D;AAED,IAAM,qBAAqB,GAAG,CAAC,kBAAkB,CAAC,CAAC;AAGnD;IAAA;IAiBA,CAAC;IAhBe,uBAAO,GAArB;QACE,MAAM,CAAC;YACL,QAAQ,EAAE,eAAe;YACzB,SAAS,EAAE,EAAE;SACd,CAAC;IACJ,CAAC;IACI,0BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;oBACvB,OAAO,EAAE,CAAC,YAAY,EAAE,WAAW,CAAC;oBACpC,OAAO,EAAE,qBAAqB;oBAC9B,YAAY,EAAE,qBAAqB;iBACpC,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,8BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,sBAAC;AAAD,CAAC,AAjBD,IAiBC","sourcesContent":["import {\n  Component,\n  ElementRef,\n  Renderer,\n  forwardRef,\n  NgModule,\n  ViewEncapsulation,\n  ModuleWithProviders\n} from '@angular/core';\n\nimport {\n  NG_VALUE_ACCESSOR,\n  FormsModule\n} from '@angular/forms';\nimport { MdlCheckboxComponent } from '../checkbox/mdl-checkbox.component';\nimport { CommonModule } from '@angular/common';\n\n\nexport class MdlSwitchComponent extends MdlCheckboxComponent {\n\n  constructor(elementRef: ElementRef, renderer: Renderer) {\n    super(elementRef, renderer);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'mdl-switch',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MdlSwitchComponent),\n    multi: true\n  }],\n  host: {\n    '(click)': 'onClick()',\n    '[class.mdl-switch]': 'true',\n    '[class.is-upgraded]': 'true',\n    '[class.is-checked]': 'value',\n    '[class.is-disabled]': 'disabled'\n  },\n  outputs: ['change'],\n  template: `\n    <input type=\"checkbox\" class=\"mdl-switch__input\" \n      (focus)=\"onFocus()\" \n      (blur)=\"onBlur()\"\n      [disabled]=\"disabled\"\n      [(ngModel)]=\"value\">\n    <span class=\"mdl-switch__label\"><ng-content></ng-content></span>\n    <div class=\"mdl-switch__track\"></div>\n    <div class=\"mdl-switch__thumb\"><span class=\"mdl-switch__focus-helper\"></span></div>\n  `,\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n];\n}\n\nconst MDL_SWITCH_DIRECTIVES = [MdlSwitchComponent];\n\n\nexport class MdlSwitchModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdlSwitchModule,\n      providers: []\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule, FormsModule],\n  exports: MDL_SWITCH_DIRECTIVES,\n  declarations: MDL_SWITCH_DIRECTIVES,\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}