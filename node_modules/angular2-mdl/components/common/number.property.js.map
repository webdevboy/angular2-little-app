{"version":3,"file":"number.property.js","sourceRoot":"","sources":["../../../src/lib/components/common/number.property.ts"],"names":[],"mappings":"AAAA;IAEE,MAAM,CAAC,kCAAkC,MAAW,EAAE,GAAW;QAC/D,IAAM,YAAY,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QACjC,IAAM,QAAQ,GAAG,0BAAwB,GAAK,CAAC;QAC/C,MAAM,CAAC,QAAQ,CAAC,GAAG,YAAY,CAAC;QAEhC,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE;YACjC,GAAG,gBAAK,MAAM,CAAO,IAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACvC,GAAG,YAAC,KAAoB;gBACtB,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,WAAY,CAAC,CAAC,CAAC;oBAClC,KAAK,GAAG,IAAI,CAAC;gBACf,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAE,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;oBACtC,KAAK,GAAG,QAAQ,CAAS,KAAK,CAAC,CAAC;gBAClC,CAAC;gBACK,IAAK,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;YAChC,CAAC;SACF,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC;AAED,SAAQ,cAAc,IAAI,cAAc,GAAE","sourcesContent":["function numberProperty() {\n\n  return function numberFieldValueMetadata(target: any, key: string): void {\n    const defaultValue = target[key];\n    const localKey = `__mdl_private_symbol_${key}`;\n    target[localKey] = defaultValue;\n\n    Object.defineProperty(target, key, {\n      get() { return (<any>this)[localKey]; },\n      set(value: number|string) {\n        if (typeof value === 'undefined' ) {\n          value = null;\n        } else if ( typeof value === 'string') {\n          value = parseInt(<string>value);\n        }\n        (<any>this)[localKey] = value;\n      }\n    });\n  };\n}\n\nexport {numberProperty as NumberProperty};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}