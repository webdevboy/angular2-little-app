{"version":3,"file":"mdl-layout-header.component.js","sourceRoot":"","sources":["../../../src/lib/components/layout/mdl-layout-header.component.ts"],"names":[],"mappings":"OAAO,EACL,SAAS,EACT,UAAU,EACV,QAAQ,EACR,iBAAiB,EAEjB,MAAM,EACN,UAAU,EACX,MAAM,eAAe;OAEf,EAAE,kBAAkB,EAAE,MAAM,wBAAwB;AAI3D;IAaE,kCACU,UAAsB,EACtB,QAAkB,EACjB,SAA6B;QAF9B,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAU;QACjB,cAAS,GAAT,SAAS,CAAoB;QAXjC,cAAS,GAAG,KAAK,CAAC;QAClB,gBAAW,GAAG,KAAK,CAAC;QACpB,aAAQ,GAAG,KAAK,CAAC;QACjB,aAAQ,GAAG,IAAI,CAAC;QASrB,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,aAAa,CAAC;IACrC,CAAC;IAES,kDAAe,GAAzB;QACE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAES,0CAAO,GAAjB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC;IACH,CAAC;IACI,mCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,mBAAmB;oBAC7B,IAAI,EAAE;wBACJ,4BAA4B,EAAE,MAAM;wBACpC,2BAA2B,EAAE,gCAAgC;wBAC7D,oCAAoC,EAAE,UAAU;wBAChD,uCAAuC,EAAE,oBAAoB;wBAC7D,oCAAoC,EAAE,iBAAiB;wBACvD,oBAAoB,EAAG,WAAW;wBAClC,iBAAiB,EAAE,mBAAmB;wBACtC,SAAS,EAAE,WAAW;qBACvB;oBACD,QAAQ,EAAE,6mCAwBT;oBACD,aAAa,EAAE,iBAAiB,CAAC,IAAI;iBACtC,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,uCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;QACpB,EAAC,IAAI,EAAE,QAAQ,GAAG;QAClB,EAAC,IAAI,EAAE,kBAAkB,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,UAAU,CAAC,cAAM,OAAA,kBAAkB,EAAlB,CAAkB,CAAC,EAAG,EAAE,EAAG,EAAC;KAC3G,EAJ6F,CAI7F,CAAC;IACF,+BAAC;AAAD,CAAC,AA7ED,IA6EC","sourcesContent":["import {\n  Component,\n  ElementRef,\n  Renderer,\n  ViewEncapsulation,\n  QueryList,\n  Inject,\n  forwardRef\n} from '@angular/core';\nimport { MdlLayoutTabPanelComponent } from './mdl-layout-tab-panel.component';\nimport { MdlLayoutComponent } from './mdl-layout.component';\n\n\n\nexport class MdlLayoutHeaderComponent {\n\n  // set from MdlLayoutComponent\n  public mode: string;\n  public el: HTMLElement;\n  public isCompact = false;\n  public isAnimating = false;\n  public isSeamed = false;\n  public isRipple = true;\n\n  // will be set from mdllayoutcomponent\n  public tabs: QueryList<MdlLayoutTabPanelComponent>;\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer,\n     private mdlLayout: MdlLayoutComponent) {\n    this.el = elementRef.nativeElement;\n  }\n\n  protected onTransitionEnd() {\n    this.isAnimating = false;\n  }\n\n  protected onClick() {\n    if (this.isCompact) {\n      this.isCompact = false;\n      this.isAnimating = true;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'mdl-layout-header',\n  host: {\n    '[class.mdl-layout__header]': 'true',\n    '[class.is-casting-shadow]': 'mode===\"standard\" || isCompact',\n    '[class.mdl-layout__header--seamed]': 'isSeamed',\n    '[class.mdl-layout__header--waterfall]': 'mode===\"waterfall\"',\n    '[class.mdl-layout__header--scroll]': 'mode===\"scroll\"',\n    '[class.is-compact]' : 'isCompact',\n    '(transitionend)': 'onTransitionEnd()',\n    '(click)': 'onClick()'\n  },\n  template: `\n     <ng-content></ng-content>\n     <div *ngIf=\"tabs?.toArray()?.length > 0\" class=\"mdl-layout__tab-bar-container\">\n         <div class=\"mdl-layout__tab-bar is-casting-shadow\">\n           <div *ngFor=\"let tab of tabs.toArray()\" \n                class=\"mdl-layout__tab\" \n                [ngClass]=\"{'is-active': tab.isActive}\"\n                (mouseover)=\"mdlLayout.onTabMouseover(tab)\" \n                (mouseout)=\"mdlLayout.onTabMouseout(tab)\">\n              <div \n                *ngIf=\"tab.titleComponent\" \n                (click)=\"mdlLayout.tabSelected(tab)\"\n                [mdl-ripple]=\"isRipple\"\n                [append-view-container-ref]=\"tab.titleComponent.vcRef\"></div>\n              <a *ngIf=\"!tab.titleComponent\" \n                    href=\"javascript:void(0)\"   \n                    (click)=\"mdlLayout.tabSelected(tab)\"\n                    class=\"mdl-layout__tab\" \n                    [ngClass]=\"{'is-active': tab.isActive}\"\n                    [mdl-ripple]=\"isRipple\"\n                   >{{tab.title}}</a>\n             </div>\n         </div>\n     </div>\n  `,\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n{type: MdlLayoutComponent, decorators: [{ type: Inject, args: [forwardRef(() => MdlLayoutComponent), ] }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}