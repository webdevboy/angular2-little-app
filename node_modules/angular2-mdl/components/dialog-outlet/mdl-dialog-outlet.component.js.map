{"version":3,"file":"mdl-dialog-outlet.component.js","sourceRoot":"","sources":["../../../src/lib/components/dialog-outlet/mdl-dialog-outlet.component.ts"],"names":[],"mappings":"OAAO,EAAE,SAAS,EAAE,gBAAgB,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,eAAe;OAExE,EAAE,sBAAsB,EAAE,MAAM,6BAA6B;AAGpE,wFAAwF;AACxF,+DAA+D;AAC/D,8DAA8D;AAE9D;IAEE,kCAAoB,KAAuB;QAAvB,UAAK,GAAL,KAAK,CAAkB;IAAG,CAAC;IAE/C,sBAAW,sDAAgB;aAA3B;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;;;OAAA;IACI,mCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,eAAe;oBACzB,QAAQ,EAAE,EAAE;iBACb,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,uCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,gBAAgB,GAAG;KACzB,EAF6F,CAE7F,CAAC;IACF,+BAAC;AAAD,CAAC,AAjBD,IAiBC;AAED,qFAAqF;AACrF,8BAA8B;AAE9B;IAEE,uCACU,KAAuB,EAC9B,OAA+B;QADxB,UAAK,GAAL,KAAK,CAAkB;QAE/B,OAAO,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;IACI,wCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,eAAe;oBACzB,QAAQ,EAAE,EAAE;iBACb,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,4CAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,gBAAgB,GAAG;QAC1B,EAAC,IAAI,EAAE,sBAAsB,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,UAAU,CAAE,cAAM,OAAA,sBAAsB,EAAtB,CAAsB,CAAC,EAAG,EAAE,EAAG,EAAC;KACpH,EAH6F,CAG7F,CAAC;IACF,oCAAC;AAAD,CAAC,AAlBD,IAkBC","sourcesContent":["import { Component, ViewContainerRef, forwardRef, Inject } from '@angular/core';\n\nimport { MdlDialogOutletService } from './mdl-dialog-outlet.service';\n\n\n// the componnet is used outside the app-root. injecting MdlDialogService would not work\n// this component is not exported - needs to be instanciated by\n//    let x = this.appRef.bootstrap(MdlDialogOutletComponent);\n\nexport class MdlDialogOutletComponent {\n\n  constructor(private vCRef: ViewContainerRef) {}\n\n  public get viewContainerRef() {\n    return this.vCRef;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'dialog-outlet',\n  template: ''\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\n// the component is used inside the app-root. this is possible because this component\n// is exported from the module\n\nexport class MdlDialogInnerOutletComponent {\n\n  constructor(\n    private vCRef: ViewContainerRef,\n     service: MdlDialogOutletService) {\n    service.setDefaultViewContainerRef(vCRef);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'dialog-outlet',\n  template: ''\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: MdlDialogOutletService, decorators: [{ type: Inject, args: [forwardRef( () => MdlDialogOutletService), ] }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}