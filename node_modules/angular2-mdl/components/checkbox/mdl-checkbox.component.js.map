{"version":3,"file":"mdl-checkbox.component.js","sourceRoot":"","sources":["../../../src/lib/components/checkbox/mdl-checkbox.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Renderer,\n  forwardRef,\n  NgModule,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Input,\n  ModuleWithProviders\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n  ControlValueAccessor,\n  FormsModule\n} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { BooleanProperty } from '../common/boolean-property';\nimport { NumberProperty } from '../common/number.property';\n\nconst noop = (_?: any) => {};\nconst IS_FOCUSED = 'is-focused';\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MdlCheckboxComponent),\n  multi: true\n};\n\n\nexport class MdlCheckboxComponent implements ControlValueAccessor {\n\n   @BooleanProperty() public disabled = false;\n   @NumberProperty() public tabindex: number = 1;\n\n  public change: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  private value_: boolean = false;\n\n  private el: HTMLElement;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer) {\n    this.el = elementRef.nativeElement;\n  }\n\n  get value(): boolean { return this.value_; };\n  set value(v: boolean) {\n    this.value_ = v;\n    this.onChangeCallback(v);\n    this.change.emit(v);\n  }\n\n  public writeValue(value: any): void {\n    this.value_ = value;\n  }\n\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  public registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  protected onFocus() {\n    this.renderer.setElementClass(this.el, IS_FOCUSED, true);\n  }\n\n  protected onBlur() {\n    this.renderer.setElementClass(this.el, IS_FOCUSED, false);\n    this.onTouchedCallback();\n  }\n\n  protected onClick() {\n    if (this.disabled) {\n      return;\n    }\n    this.value = !this.value;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'mdl-checkbox',\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR],\n  host: {\n    '(click)': 'onClick()',\n    '[class.mdl-checkbox]': 'true',\n    '[class.is-upgraded]': 'true',\n    '[class.is-checked]': 'value',\n    '[class.is-disabled]': 'disabled'\n  },\n  template: `\n  <input type=\"checkbox\" class=\"mdl-checkbox__input\" \n    (focus)=\"onFocus()\" \n    (blur)=\"onBlur()\"\n    [disabled]=\"disabled\"\n    [tabindex]=\"tabindex\"\n    [ngModel]=\"value\">\n  <span class=\"mdl-checkbox__label\"><ng-content></ng-content></span>\n  <span class=\"mdl-checkbox__focus-helper\"></span>\n  <span class=\"mdl-checkbox__box-outline\">\n    <span class=\"mdl-checkbox__tick-outline\"></span>\n  </span>\n  `,\n  inputs: ['value'],\n  outputs: ['change'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'disabled': [{ type: Input },],\n'tabindex': [{ type: Input },],\n};\n}\n\n\nconst MDL_CHECKBOX_DIRECTIVES = [MdlCheckboxComponent];\n\n\nexport class MdlCheckboxModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdlCheckboxModule,\n      providers: []\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule, FormsModule],\n  exports: MDL_CHECKBOX_DIRECTIVES,\n  declarations: MDL_CHECKBOX_DIRECTIVES,\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}