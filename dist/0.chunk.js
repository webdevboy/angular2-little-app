webpackJsonp([0,4],Array(656).concat([
/* 656 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_shared_module__ = __webpack_require__(671);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__attendance_component__ = __webpack_require__(725);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_timepicker_timepicker_component__ = __webpack_require__(809);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_presence_bar_presence_bar_component__ = __webpack_require__(808);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__attendance_routing__ = __webpack_require__(807);
/* harmony export (binding) */ __webpack_require__.d(exports, "AttendanceModule", function() { return AttendanceModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var AttendanceModule = (function () {
    function AttendanceModule() {
    }
    AttendanceModule = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [
                __WEBPACK_IMPORTED_MODULE_1__shared_shared_module__["a" /* SharedModule */],
                __WEBPACK_IMPORTED_MODULE_5__attendance_routing__["a" /* routing */]
            ],
            declarations: [__WEBPACK_IMPORTED_MODULE_2__attendance_component__["a" /* AttendanceComponent */], __WEBPACK_IMPORTED_MODULE_3__components_timepicker_timepicker_component__["a" /* TimepickerComponent */], __WEBPACK_IMPORTED_MODULE_4__components_presence_bar_presence_bar_component__["a" /* PresenceBarComponent */]]
        }), 
        __metadata('design:paramtypes', [])
    ], AttendanceModule);
    return AttendanceModule;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/attendance.module.js.map

/***/ },
/* 657 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_shared_module__ = __webpack_require__(671);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dashboard_info_component__ = __webpack_require__(726);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__dashboard_info_routing__ = __webpack_require__(810);
/* harmony export (binding) */ __webpack_require__.d(exports, "DashboardInfoModule", function() { return DashboardInfoModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var DashboardInfoModule = (function () {
    function DashboardInfoModule() {
    }
    DashboardInfoModule = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [
                __WEBPACK_IMPORTED_MODULE_1__shared_shared_module__["a" /* SharedModule */],
                __WEBPACK_IMPORTED_MODULE_3__dashboard_info_routing__["a" /* routing */]
            ],
            declarations: [__WEBPACK_IMPORTED_MODULE_2__dashboard_info_component__["a" /* DashboardInfoComponent */]]
        }), 
        __metadata('design:paramtypes', [])
    ], DashboardInfoModule);
    return DashboardInfoModule;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/dashboard-info.module.js.map

/***/ },
/* 658 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_shared_module__ = __webpack_require__(671);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dashboard_component__ = __webpack_require__(727);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__dashboard_routing__ = __webpack_require__(811);
/* harmony export (binding) */ __webpack_require__.d(exports, "DashboardModule", function() { return DashboardModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var DashboardModule = (function () {
    function DashboardModule() {
    }
    DashboardModule = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [
                __WEBPACK_IMPORTED_MODULE_1__shared_shared_module__["a" /* SharedModule */],
                __WEBPACK_IMPORTED_MODULE_3__dashboard_routing__["a" /* dashboardRouting */]
            ],
            declarations: [__WEBPACK_IMPORTED_MODULE_2__dashboard_component__["a" /* DashboardComponent */]]
        }), 
        __metadata('design:paramtypes', [])
    ], DashboardModule);
    return DashboardModule;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/dashboard.module.js.map

/***/ },
/* 659 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_shared_module__ = __webpack_require__(671);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__easy_fees_component__ = __webpack_require__(732);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__easy_fees_intro_easy_fees_intro_component__ = __webpack_require__(729);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__easy_fees_setup_easy_fees_setup_component__ = __webpack_require__(731);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_choose_org_type_choose_org_type_component__ = __webpack_require__(813);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__easy_fees_manager_service__ = __webpack_require__(730);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__easy_fees_routing__ = __webpack_require__(816);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__easy_fees_dashboard_easy_fees_dashboard_component__ = __webpack_require__(728);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_accordion_payments_view_accordion_payments_view_component__ = __webpack_require__(812);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__components_popup_print_mandate_popup_print_mandate_component__ = __webpack_require__(814);
/* harmony export (binding) */ __webpack_require__.d(exports, "EasyFeesModule", function() { return EasyFeesModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var EasyFeesModule = (function () {
    function EasyFeesModule() {
    }
    EasyFeesModule = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [
                __WEBPACK_IMPORTED_MODULE_1__shared_shared_module__["a" /* SharedModule */],
                __WEBPACK_IMPORTED_MODULE_7__easy_fees_routing__["a" /* routing */]
            ],
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__easy_fees_component__["a" /* EasyFeesComponent */],
                __WEBPACK_IMPORTED_MODULE_3__easy_fees_intro_easy_fees_intro_component__["a" /* EasyFeesIntroComponent */],
                __WEBPACK_IMPORTED_MODULE_4__easy_fees_setup_easy_fees_setup_component__["a" /* EasyFeesSetupComponent */],
                __WEBPACK_IMPORTED_MODULE_5__components_choose_org_type_choose_org_type_component__["a" /* ChooseOrgTypeComponent */],
                __WEBPACK_IMPORTED_MODULE_8__easy_fees_dashboard_easy_fees_dashboard_component__["a" /* EasyFeesDashboardComponent */],
                __WEBPACK_IMPORTED_MODULE_9__components_accordion_payments_view_accordion_payments_view_component__["a" /* AccordionPaymentsViewComponent */],
                __WEBPACK_IMPORTED_MODULE_10__components_popup_print_mandate_popup_print_mandate_component__["a" /* PopupPrintMandateComponent */]
            ],
            providers: [
                __WEBPACK_IMPORTED_MODULE_6__easy_fees_manager_service__["a" /* EasyFeesManagerService */]
            ]
        }), 
        __metadata('design:paramtypes', [])
    ], EasyFeesModule);
    return EasyFeesModule;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/easy-fees.module.js.map

/***/ },
/* 660 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_shared_module__ = __webpack_require__(671);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__landing_page_component__ = __webpack_require__(733);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__login_card_login_card_component__ = __webpack_require__(818);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__register_card_register_card_component__ = __webpack_require__(819);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__landing_page_routing__ = __webpack_require__(817);
/* harmony export (binding) */ __webpack_require__.d(exports, "LandingPageModule", function() { return LandingPageModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var LandingPageModule = (function () {
    function LandingPageModule() {
    }
    LandingPageModule = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [
                __WEBPACK_IMPORTED_MODULE_1__shared_shared_module__["a" /* SharedModule */],
                __WEBPACK_IMPORTED_MODULE_5__landing_page_routing__["a" /* routing */]
            ],
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__landing_page_component__["a" /* LandingPageComponent */],
                __WEBPACK_IMPORTED_MODULE_3__login_card_login_card_component__["a" /* LoginCardComponent */],
                __WEBPACK_IMPORTED_MODULE_4__register_card_register_card_component__["a" /* RegisterCardComponent */]
            ]
        }), 
        __metadata('design:paramtypes', [])
    ], LandingPageModule);
    return LandingPageModule;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/landing-page.module.js.map

/***/ },
/* 661 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_shared_module__ = __webpack_require__(671);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__occupancy_component__ = __webpack_require__(735);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__plan_dashboard_plan_dashboard_component__ = __webpack_require__(737);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__plan_setup_plan_setup_component__ = __webpack_require__(739);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__plan_room_lists_plan_room_lists_component__ = __webpack_require__(738);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__occupancy_routing__ = __webpack_require__(827);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_room_info_accordian_room_info_accordian_component__ = __webpack_require__(825);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_move_class_move_class_component__ = __webpack_require__(821);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__components_occupancy_modal_occupancy_modal_component__ = __webpack_require__(823);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__components_add_staff_add_staff_component__ = __webpack_require__(820);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__components_remove_waiting_child_remove_waiting_child_component__ = __webpack_require__(824);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__occupancy_transitions_occupancy_transitions_component__ = __webpack_require__(734);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__components_scroll_navbar_scroll_navbar_component__ = __webpack_require__(826);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__components_occupancy_chlid_occupancy_chlid_component__ = __webpack_require__(822);
/* harmony export (binding) */ __webpack_require__.d(exports, "OccupancyModule", function() { return OccupancyModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
















var OccupancyModule = (function () {
    function OccupancyModule() {
    }
    OccupancyModule = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [
                __WEBPACK_IMPORTED_MODULE_1__angular_common__["CommonModule"],
                __WEBPACK_IMPORTED_MODULE_2__shared_shared_module__["a" /* SharedModule */],
                __WEBPACK_IMPORTED_MODULE_7__occupancy_routing__["a" /* routing */]
            ],
            declarations: [
                __WEBPACK_IMPORTED_MODULE_3__occupancy_component__["a" /* OccupancyComponent */],
                __WEBPACK_IMPORTED_MODULE_4__plan_dashboard_plan_dashboard_component__["a" /* PlanDashboardComponent */],
                __WEBPACK_IMPORTED_MODULE_5__plan_setup_plan_setup_component__["a" /* PlanSetupComponent */],
                __WEBPACK_IMPORTED_MODULE_8__components_room_info_accordian_room_info_accordian_component__["a" /* RoomInfoAccordianComponent */],
                __WEBPACK_IMPORTED_MODULE_9__components_move_class_move_class_component__["a" /* MoveClassComponent */],
                __WEBPACK_IMPORTED_MODULE_10__components_occupancy_modal_occupancy_modal_component__["a" /* OccupancyModalComponent */],
                __WEBPACK_IMPORTED_MODULE_11__components_add_staff_add_staff_component__["a" /* AddStaffComponent */],
                __WEBPACK_IMPORTED_MODULE_6__plan_room_lists_plan_room_lists_component__["a" /* PlanRoomListsComponent */],
                __WEBPACK_IMPORTED_MODULE_12__components_remove_waiting_child_remove_waiting_child_component__["a" /* RemoveWaitingChildComponent */],
                __WEBPACK_IMPORTED_MODULE_13__occupancy_transitions_occupancy_transitions_component__["a" /* OccupancyTransitionsComponent */],
                __WEBPACK_IMPORTED_MODULE_14__components_scroll_navbar_scroll_navbar_component__["a" /* ScrollNavbarComponent */],
                __WEBPACK_IMPORTED_MODULE_15__components_occupancy_chlid_occupancy_chlid_component__["a" /* OccupancyChlidComponent */]
            ]
        }), 
        __metadata('design:paramtypes', [])
    ], OccupancyModule);
    return OccupancyModule;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/occupancy.module.js.map

/***/ },
/* 662 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_shared_module__ = __webpack_require__(671);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__reports_component__ = __webpack_require__(740);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_attendance_status_attendance_status_component__ = __webpack_require__(828);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__reports_routing__ = __webpack_require__(829);
/* harmony export (binding) */ __webpack_require__.d(exports, "ReportsModule", function() { return ReportsModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var ReportsModule = (function () {
    function ReportsModule() {
    }
    ReportsModule = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [
                __WEBPACK_IMPORTED_MODULE_1__shared_shared_module__["a" /* SharedModule */],
                __WEBPACK_IMPORTED_MODULE_4__reports_routing__["a" /* routing */]
            ],
            declarations: [__WEBPACK_IMPORTED_MODULE_2__reports_component__["a" /* ReportsComponent */], __WEBPACK_IMPORTED_MODULE_3__components_attendance_status_attendance_status_component__["a" /* AttendanceStatusComponent */]]
        }), 
        __metadata('design:paramtypes', [])
    ], ReportsModule);
    return ReportsModule;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/reports.module.js.map

/***/ },
/* 663 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_shared_module__ = __webpack_require__(671);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__settings_component__ = __webpack_require__(748);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__centre_rooms_centre_rooms_component__ = __webpack_require__(746);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__centre_children_centre_children_component__ = __webpack_require__(741);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__centre_details_centre_details_component__ = __webpack_require__(742);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__centre_subventions_centre_subventions_component__ = __webpack_require__(747);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_add_room_add_room_component__ = __webpack_require__(833);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_ecce_capitations_ecce_capitations_component__ = __webpack_require__(834);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__settings_routing__ = __webpack_require__(835);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__components_add_child_add_child_component__ = __webpack_require__(832);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__centre_families_centre_families_component__ = __webpack_require__(743);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__centre_families_components_add_new_families_add_new_families_component__ = __webpack_require__(831);
/* harmony export (binding) */ __webpack_require__.d(exports, "SettingsModule", function() { return SettingsModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













var SettingsModule = (function () {
    function SettingsModule() {
    }
    SettingsModule = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [
                __WEBPACK_IMPORTED_MODULE_1__shared_shared_module__["a" /* SharedModule */],
                __WEBPACK_IMPORTED_MODULE_9__settings_routing__["a" /* routing */]
            ],
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__settings_component__["a" /* SettingsComponent */],
                __WEBPACK_IMPORTED_MODULE_3__centre_rooms_centre_rooms_component__["a" /* CentreRoomsComponent */],
                __WEBPACK_IMPORTED_MODULE_4__centre_children_centre_children_component__["a" /* CentreChildrenComponent */],
                __WEBPACK_IMPORTED_MODULE_5__centre_details_centre_details_component__["a" /* CentreDetailsComponent */],
                __WEBPACK_IMPORTED_MODULE_6__centre_subventions_centre_subventions_component__["a" /* CentreSubventionsComponent */],
                __WEBPACK_IMPORTED_MODULE_7__components_add_room_add_room_component__["a" /* AddRoomComponent */],
                __WEBPACK_IMPORTED_MODULE_8__components_ecce_capitations_ecce_capitations_component__["a" /* EcceCapitationsComponent */],
                __WEBPACK_IMPORTED_MODULE_10__components_add_child_add_child_component__["a" /* AddChildComponent */],
                __WEBPACK_IMPORTED_MODULE_11__centre_families_centre_families_component__["a" /* CentreFamiliesComponent */],
                __WEBPACK_IMPORTED_MODULE_12__centre_families_components_add_new_families_add_new_families_component__["a" /* AddNewFamiliesComponent */]
            ]
        }), 
        __metadata('design:paramtypes', [])
    ], SettingsModule);
    return SettingsModule;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/settings.module.js.map

/***/ },
/* 664 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_shared_module__ = __webpack_require__(671);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__subventions_manager_service__ = __webpack_require__(702);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__subventions_component__ = __webpack_require__(750);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_list_buttons_list_buttons_component__ = __webpack_require__(853);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_colored_button_colored_button_component__ = __webpack_require__(851);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_ecce_modal_ecce_modal_component__ = __webpack_require__(852);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__subventions_routing__ = __webpack_require__(854);
/* harmony export (binding) */ __webpack_require__.d(exports, "SubventionsModule", function() { return SubventionsModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var SubventionsModule = (function () {
    function SubventionsModule() {
    }
    SubventionsModule = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [
                __WEBPACK_IMPORTED_MODULE_1__shared_shared_module__["a" /* SharedModule */],
                __WEBPACK_IMPORTED_MODULE_7__subventions_routing__["a" /* routing */]
            ],
            declarations: [
                __WEBPACK_IMPORTED_MODULE_3__subventions_component__["a" /* SubventionsComponent */],
                __WEBPACK_IMPORTED_MODULE_4__components_list_buttons_list_buttons_component__["a" /* ListButtonsComponent */],
                __WEBPACK_IMPORTED_MODULE_5__components_colored_button_colored_button_component__["a" /* ColoredButtonComponent */],
                __WEBPACK_IMPORTED_MODULE_6__components_ecce_modal_ecce_modal_component__["a" /* EcceModalComponent */]
            ],
            providers: [
                __WEBPACK_IMPORTED_MODULE_2__subventions_manager_service__["a" /* SubventionsManagerService */]
            ]
        }), 
        __metadata('design:paramtypes', [])
    ], SubventionsModule);
    return SubventionsModule;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/subventions.module.js.map

/***/ },
/* 665 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_shared_module__ = __webpack_require__(671);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__verify_component__ = __webpack_require__(751);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__verify_routing__ = __webpack_require__(855);
/* harmony export (binding) */ __webpack_require__.d(exports, "VerifyModule", function() { return VerifyModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var VerifyModule = (function () {
    function VerifyModule() {
    }
    VerifyModule = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [
                __WEBPACK_IMPORTED_MODULE_1__shared_shared_module__["a" /* SharedModule */],
                __WEBPACK_IMPORTED_MODULE_3__verify_routing__["a" /* routing */]
            ],
            declarations: [__WEBPACK_IMPORTED_MODULE_2__verify_component__["a" /* VerifyComponent */]]
        }), 
        __metadata('design:paramtypes', [])
    ], VerifyModule);
    return VerifyModule;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/verify.module.js.map

/***/ },
/* 666 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var AsyncAction_1 = __webpack_require__(689);
var AsyncScheduler_1 = __webpack_require__(690);
exports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);
//# sourceMappingURL=async.js.map

/***/ },
/* 667 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return booleanProperty; });
function booleanProperty() {
    return function booleanFieldValueMetadata(target, key) {
        var defaultValue = target[key];
        var localKey = "__mdl_private_symbol_" + key;
        target[localKey] = defaultValue;
        Object.defineProperty(target, key, {
            get: function () { return this[localKey]; },
            set: function (value) {
                this[localKey] = value != null && "" + value !== 'false';
            }
        });
    };
}

//# sourceMappingURL=boolean-property.js.map

/***/ },
/* 668 */
/***/ function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {//! moment.js
//! version : 2.17.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

;(function (global, factory) {
     true ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, (function () { 'use strict';

var hookCallback;

function hooks () {
    return hookCallback.apply(null, arguments);
}

// This is done to register the method called with moment()
// without creating circular dependencies.
function setHookCallback (callback) {
    hookCallback = callback;
}

function isArray(input) {
    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
}

function isObject(input) {
    // IE8 will treat undefined and null as object if it wasn't for
    // input != null
    return input != null && Object.prototype.toString.call(input) === '[object Object]';
}

function isObjectEmpty(obj) {
    var k;
    for (k in obj) {
        // even if its not own property I'd still call it non-empty
        return false;
    }
    return true;
}

function isNumber(input) {
    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
}

function isDate(input) {
    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
}

function map(arr, fn) {
    var res = [], i;
    for (i = 0; i < arr.length; ++i) {
        res.push(fn(arr[i], i));
    }
    return res;
}

function hasOwnProp(a, b) {
    return Object.prototype.hasOwnProperty.call(a, b);
}

function extend(a, b) {
    for (var i in b) {
        if (hasOwnProp(b, i)) {
            a[i] = b[i];
        }
    }

    if (hasOwnProp(b, 'toString')) {
        a.toString = b.toString;
    }

    if (hasOwnProp(b, 'valueOf')) {
        a.valueOf = b.valueOf;
    }

    return a;
}

function createUTC (input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, true).utc();
}

function defaultParsingFlags() {
    // We need to deep clone this object.
    return {
        empty           : false,
        unusedTokens    : [],
        unusedInput     : [],
        overflow        : -2,
        charsLeftOver   : 0,
        nullInput       : false,
        invalidMonth    : null,
        invalidFormat   : false,
        userInvalidated : false,
        iso             : false,
        parsedDateParts : [],
        meridiem        : null
    };
}

function getParsingFlags(m) {
    if (m._pf == null) {
        m._pf = defaultParsingFlags();
    }
    return m._pf;
}

var some;
if (Array.prototype.some) {
    some = Array.prototype.some;
} else {
    some = function (fun) {
        var t = Object(this);
        var len = t.length >>> 0;

        for (var i = 0; i < len; i++) {
            if (i in t && fun.call(this, t[i], i, t)) {
                return true;
            }
        }

        return false;
    };
}

var some$1 = some;

function isValid(m) {
    if (m._isValid == null) {
        var flags = getParsingFlags(m);
        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {
            return i != null;
        });
        var isNowValid = !isNaN(m._d.getTime()) &&
            flags.overflow < 0 &&
            !flags.empty &&
            !flags.invalidMonth &&
            !flags.invalidWeekday &&
            !flags.nullInput &&
            !flags.invalidFormat &&
            !flags.userInvalidated &&
            (!flags.meridiem || (flags.meridiem && parsedParts));

        if (m._strict) {
            isNowValid = isNowValid &&
                flags.charsLeftOver === 0 &&
                flags.unusedTokens.length === 0 &&
                flags.bigHour === undefined;
        }

        if (Object.isFrozen == null || !Object.isFrozen(m)) {
            m._isValid = isNowValid;
        }
        else {
            return isNowValid;
        }
    }
    return m._isValid;
}

function createInvalid (flags) {
    var m = createUTC(NaN);
    if (flags != null) {
        extend(getParsingFlags(m), flags);
    }
    else {
        getParsingFlags(m).userInvalidated = true;
    }

    return m;
}

function isUndefined(input) {
    return input === void 0;
}

// Plugins that add properties should also add the key here (null value),
// so we can properly clone ourselves.
var momentProperties = hooks.momentProperties = [];

function copyConfig(to, from) {
    var i, prop, val;

    if (!isUndefined(from._isAMomentObject)) {
        to._isAMomentObject = from._isAMomentObject;
    }
    if (!isUndefined(from._i)) {
        to._i = from._i;
    }
    if (!isUndefined(from._f)) {
        to._f = from._f;
    }
    if (!isUndefined(from._l)) {
        to._l = from._l;
    }
    if (!isUndefined(from._strict)) {
        to._strict = from._strict;
    }
    if (!isUndefined(from._tzm)) {
        to._tzm = from._tzm;
    }
    if (!isUndefined(from._isUTC)) {
        to._isUTC = from._isUTC;
    }
    if (!isUndefined(from._offset)) {
        to._offset = from._offset;
    }
    if (!isUndefined(from._pf)) {
        to._pf = getParsingFlags(from);
    }
    if (!isUndefined(from._locale)) {
        to._locale = from._locale;
    }

    if (momentProperties.length > 0) {
        for (i in momentProperties) {
            prop = momentProperties[i];
            val = from[prop];
            if (!isUndefined(val)) {
                to[prop] = val;
            }
        }
    }

    return to;
}

var updateInProgress = false;

// Moment prototype object
function Moment(config) {
    copyConfig(this, config);
    this._d = new Date(config._d != null ? config._d.getTime() : NaN);
    if (!this.isValid()) {
        this._d = new Date(NaN);
    }
    // Prevent infinite loop in case updateOffset creates new moment
    // objects.
    if (updateInProgress === false) {
        updateInProgress = true;
        hooks.updateOffset(this);
        updateInProgress = false;
    }
}

function isMoment (obj) {
    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
}

function absFloor (number) {
    if (number < 0) {
        // -0 -> 0
        return Math.ceil(number) || 0;
    } else {
        return Math.floor(number);
    }
}

function toInt(argumentForCoercion) {
    var coercedNumber = +argumentForCoercion,
        value = 0;

    if (coercedNumber !== 0 && isFinite(coercedNumber)) {
        value = absFloor(coercedNumber);
    }

    return value;
}

// compare two arrays, return the number of differences
function compareArrays(array1, array2, dontConvert) {
    var len = Math.min(array1.length, array2.length),
        lengthDiff = Math.abs(array1.length - array2.length),
        diffs = 0,
        i;
    for (i = 0; i < len; i++) {
        if ((dontConvert && array1[i] !== array2[i]) ||
            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
            diffs++;
        }
    }
    return diffs + lengthDiff;
}

function warn(msg) {
    if (hooks.suppressDeprecationWarnings === false &&
            (typeof console !==  'undefined') && console.warn) {
        console.warn('Deprecation warning: ' + msg);
    }
}

function deprecate(msg, fn) {
    var firstTime = true;

    return extend(function () {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(null, msg);
        }
        if (firstTime) {
            var args = [];
            var arg;
            for (var i = 0; i < arguments.length; i++) {
                arg = '';
                if (typeof arguments[i] === 'object') {
                    arg += '\n[' + i + '] ';
                    for (var key in arguments[0]) {
                        arg += key + ': ' + arguments[0][key] + ', ';
                    }
                    arg = arg.slice(0, -2); // Remove trailing comma and space
                } else {
                    arg = arguments[i];
                }
                args.push(arg);
            }
            warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
            firstTime = false;
        }
        return fn.apply(this, arguments);
    }, fn);
}

var deprecations = {};

function deprecateSimple(name, msg) {
    if (hooks.deprecationHandler != null) {
        hooks.deprecationHandler(name, msg);
    }
    if (!deprecations[name]) {
        warn(msg);
        deprecations[name] = true;
    }
}

hooks.suppressDeprecationWarnings = false;
hooks.deprecationHandler = null;

function isFunction(input) {
    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
}

function set (config) {
    var prop, i;
    for (i in config) {
        prop = config[i];
        if (isFunction(prop)) {
            this[i] = prop;
        } else {
            this['_' + i] = prop;
        }
    }
    this._config = config;
    // Lenient ordinal parsing accepts just a number in addition to
    // number + (possibly) stuff coming from _ordinalParseLenient.
    this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\d{1,2}/).source);
}

function mergeConfigs(parentConfig, childConfig) {
    var res = extend({}, parentConfig), prop;
    for (prop in childConfig) {
        if (hasOwnProp(childConfig, prop)) {
            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                res[prop] = {};
                extend(res[prop], parentConfig[prop]);
                extend(res[prop], childConfig[prop]);
            } else if (childConfig[prop] != null) {
                res[prop] = childConfig[prop];
            } else {
                delete res[prop];
            }
        }
    }
    for (prop in parentConfig) {
        if (hasOwnProp(parentConfig, prop) &&
                !hasOwnProp(childConfig, prop) &&
                isObject(parentConfig[prop])) {
            // make sure changes to properties don't modify parent config
            res[prop] = extend({}, res[prop]);
        }
    }
    return res;
}

function Locale(config) {
    if (config != null) {
        this.set(config);
    }
}

var keys;

if (Object.keys) {
    keys = Object.keys;
} else {
    keys = function (obj) {
        var i, res = [];
        for (i in obj) {
            if (hasOwnProp(obj, i)) {
                res.push(i);
            }
        }
        return res;
    };
}

var keys$1 = keys;

var defaultCalendar = {
    sameDay : '[Today at] LT',
    nextDay : '[Tomorrow at] LT',
    nextWeek : 'dddd [at] LT',
    lastDay : '[Yesterday at] LT',
    lastWeek : '[Last] dddd [at] LT',
    sameElse : 'L'
};

function calendar (key, mom, now) {
    var output = this._calendar[key] || this._calendar['sameElse'];
    return isFunction(output) ? output.call(mom, now) : output;
}

var defaultLongDateFormat = {
    LTS  : 'h:mm:ss A',
    LT   : 'h:mm A',
    L    : 'MM/DD/YYYY',
    LL   : 'MMMM D, YYYY',
    LLL  : 'MMMM D, YYYY h:mm A',
    LLLL : 'dddd, MMMM D, YYYY h:mm A'
};

function longDateFormat (key) {
    var format = this._longDateFormat[key],
        formatUpper = this._longDateFormat[key.toUpperCase()];

    if (format || !formatUpper) {
        return format;
    }

    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
        return val.slice(1);
    });

    return this._longDateFormat[key];
}

var defaultInvalidDate = 'Invalid date';

function invalidDate () {
    return this._invalidDate;
}

var defaultOrdinal = '%d';
var defaultOrdinalParse = /\d{1,2}/;

function ordinal (number) {
    return this._ordinal.replace('%d', number);
}

var defaultRelativeTime = {
    future : 'in %s',
    past   : '%s ago',
    s  : 'a few seconds',
    m  : 'a minute',
    mm : '%d minutes',
    h  : 'an hour',
    hh : '%d hours',
    d  : 'a day',
    dd : '%d days',
    M  : 'a month',
    MM : '%d months',
    y  : 'a year',
    yy : '%d years'
};

function relativeTime (number, withoutSuffix, string, isFuture) {
    var output = this._relativeTime[string];
    return (isFunction(output)) ?
        output(number, withoutSuffix, string, isFuture) :
        output.replace(/%d/i, number);
}

function pastFuture (diff, output) {
    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
    return isFunction(format) ? format(output) : format.replace(/%s/i, output);
}

var aliases = {};

function addUnitAlias (unit, shorthand) {
    var lowerCase = unit.toLowerCase();
    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
}

function normalizeUnits(units) {
    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
}

function normalizeObjectUnits(inputObject) {
    var normalizedInput = {},
        normalizedProp,
        prop;

    for (prop in inputObject) {
        if (hasOwnProp(inputObject, prop)) {
            normalizedProp = normalizeUnits(prop);
            if (normalizedProp) {
                normalizedInput[normalizedProp] = inputObject[prop];
            }
        }
    }

    return normalizedInput;
}

var priorities = {};

function addUnitPriority(unit, priority) {
    priorities[unit] = priority;
}

function getPrioritizedUnits(unitsObj) {
    var units = [];
    for (var u in unitsObj) {
        units.push({unit: u, priority: priorities[u]});
    }
    units.sort(function (a, b) {
        return a.priority - b.priority;
    });
    return units;
}

function makeGetSet (unit, keepTime) {
    return function (value) {
        if (value != null) {
            set$1(this, unit, value);
            hooks.updateOffset(this, keepTime);
            return this;
        } else {
            return get(this, unit);
        }
    };
}

function get (mom, unit) {
    return mom.isValid() ?
        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
}

function set$1 (mom, unit, value) {
    if (mom.isValid()) {
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
    }
}

// MOMENTS

function stringGet (units) {
    units = normalizeUnits(units);
    if (isFunction(this[units])) {
        return this[units]();
    }
    return this;
}


function stringSet (units, value) {
    if (typeof units === 'object') {
        units = normalizeObjectUnits(units);
        var prioritized = getPrioritizedUnits(units);
        for (var i = 0; i < prioritized.length; i++) {
            this[prioritized[i].unit](units[prioritized[i].unit]);
        }
    } else {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units](value);
        }
    }
    return this;
}

function zeroFill(number, targetLength, forceSign) {
    var absNumber = '' + Math.abs(number),
        zerosToFill = targetLength - absNumber.length,
        sign = number >= 0;
    return (sign ? (forceSign ? '+' : '') : '-') +
        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
}

var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

var formatFunctions = {};

var formatTokenFunctions = {};

// token:    'M'
// padded:   ['MM', 2]
// ordinal:  'Mo'
// callback: function () { this.month() + 1 }
function addFormatToken (token, padded, ordinal, callback) {
    var func = callback;
    if (typeof callback === 'string') {
        func = function () {
            return this[callback]();
        };
    }
    if (token) {
        formatTokenFunctions[token] = func;
    }
    if (padded) {
        formatTokenFunctions[padded[0]] = function () {
            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
        };
    }
    if (ordinal) {
        formatTokenFunctions[ordinal] = function () {
            return this.localeData().ordinal(func.apply(this, arguments), token);
        };
    }
}

function removeFormattingTokens(input) {
    if (input.match(/\[[\s\S]/)) {
        return input.replace(/^\[|\]$/g, '');
    }
    return input.replace(/\\/g, '');
}

function makeFormatFunction(format) {
    var array = format.match(formattingTokens), i, length;

    for (i = 0, length = array.length; i < length; i++) {
        if (formatTokenFunctions[array[i]]) {
            array[i] = formatTokenFunctions[array[i]];
        } else {
            array[i] = removeFormattingTokens(array[i]);
        }
    }

    return function (mom) {
        var output = '', i;
        for (i = 0; i < length; i++) {
            output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
        }
        return output;
    };
}

// format date using native date object
function formatMoment(m, format) {
    if (!m.isValid()) {
        return m.localeData().invalidDate();
    }

    format = expandFormat(format, m.localeData());
    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

    return formatFunctions[format](m);
}

function expandFormat(format, locale) {
    var i = 5;

    function replaceLongDateFormatTokens(input) {
        return locale.longDateFormat(input) || input;
    }

    localFormattingTokens.lastIndex = 0;
    while (i >= 0 && localFormattingTokens.test(format)) {
        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
        localFormattingTokens.lastIndex = 0;
        i -= 1;
    }

    return format;
}

var match1         = /\d/;            //       0 - 9
var match2         = /\d\d/;          //      00 - 99
var match3         = /\d{3}/;         //     000 - 999
var match4         = /\d{4}/;         //    0000 - 9999
var match6         = /[+-]?\d{6}/;    // -999999 - 999999
var match1to2      = /\d\d?/;         //       0 - 99
var match3to4      = /\d\d\d\d?/;     //     999 - 9999
var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
var match1to3      = /\d{1,3}/;       //       0 - 999
var match1to4      = /\d{1,4}/;       //       0 - 9999
var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

var matchUnsigned  = /\d+/;           //       0 - inf
var matchSigned    = /[+-]?\d+/;      //    -inf - inf

var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

// any word (or two) characters or numbers including two/three word month in arabic.
// includes scottish gaelic two word and hyphenated months
var matchWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;


var regexes = {};

function addRegexToken (token, regex, strictRegex) {
    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
        return (isStrict && strictRegex) ? strictRegex : regex;
    };
}

function getParseRegexForToken (token, config) {
    if (!hasOwnProp(regexes, token)) {
        return new RegExp(unescapeFormat(token));
    }

    return regexes[token](config._strict, config._locale);
}

// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
function unescapeFormat(s) {
    return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
        return p1 || p2 || p3 || p4;
    }));
}

function regexEscape(s) {
    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
}

var tokens = {};

function addParseToken (token, callback) {
    var i, func = callback;
    if (typeof token === 'string') {
        token = [token];
    }
    if (isNumber(callback)) {
        func = function (input, array) {
            array[callback] = toInt(input);
        };
    }
    for (i = 0; i < token.length; i++) {
        tokens[token[i]] = func;
    }
}

function addWeekParseToken (token, callback) {
    addParseToken(token, function (input, array, config, token) {
        config._w = config._w || {};
        callback(input, config._w, config, token);
    });
}

function addTimeToArrayFromToken(token, input, config) {
    if (input != null && hasOwnProp(tokens, token)) {
        tokens[token](input, config._a, config, token);
    }
}

var YEAR = 0;
var MONTH = 1;
var DATE = 2;
var HOUR = 3;
var MINUTE = 4;
var SECOND = 5;
var MILLISECOND = 6;
var WEEK = 7;
var WEEKDAY = 8;

var indexOf;

if (Array.prototype.indexOf) {
    indexOf = Array.prototype.indexOf;
} else {
    indexOf = function (o) {
        // I know
        var i;
        for (i = 0; i < this.length; ++i) {
            if (this[i] === o) {
                return i;
            }
        }
        return -1;
    };
}

var indexOf$1 = indexOf;

function daysInMonth(year, month) {
    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
}

// FORMATTING

addFormatToken('M', ['MM', 2], 'Mo', function () {
    return this.month() + 1;
});

addFormatToken('MMM', 0, 0, function (format) {
    return this.localeData().monthsShort(this, format);
});

addFormatToken('MMMM', 0, 0, function (format) {
    return this.localeData().months(this, format);
});

// ALIASES

addUnitAlias('month', 'M');

// PRIORITY

addUnitPriority('month', 8);

// PARSING

addRegexToken('M',    match1to2);
addRegexToken('MM',   match1to2, match2);
addRegexToken('MMM',  function (isStrict, locale) {
    return locale.monthsShortRegex(isStrict);
});
addRegexToken('MMMM', function (isStrict, locale) {
    return locale.monthsRegex(isStrict);
});

addParseToken(['M', 'MM'], function (input, array) {
    array[MONTH] = toInt(input) - 1;
});

addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
    var month = config._locale.monthsParse(input, token, config._strict);
    // if we didn't find a month name, mark the date as invalid.
    if (month != null) {
        array[MONTH] = month;
    } else {
        getParsingFlags(config).invalidMonth = input;
    }
});

// LOCALES

var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
function localeMonths (m, format) {
    if (!m) {
        return this._months;
    }
    return isArray(this._months) ? this._months[m.month()] :
        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
}

var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
function localeMonthsShort (m, format) {
    if (!m) {
        return this._monthsShort;
    }
    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
}

function handleStrictParse(monthName, format, strict) {
    var i, ii, mom, llc = monthName.toLocaleLowerCase();
    if (!this._monthsParse) {
        // this is not used
        this._monthsParse = [];
        this._longMonthsParse = [];
        this._shortMonthsParse = [];
        for (i = 0; i < 12; ++i) {
            mom = createUTC([2000, i]);
            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
        }
    }

    if (strict) {
        if (format === 'MMM') {
            ii = indexOf$1.call(this._shortMonthsParse, llc);
            return ii !== -1 ? ii : null;
        } else {
            ii = indexOf$1.call(this._longMonthsParse, llc);
            return ii !== -1 ? ii : null;
        }
    } else {
        if (format === 'MMM') {
            ii = indexOf$1.call(this._shortMonthsParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf$1.call(this._longMonthsParse, llc);
            return ii !== -1 ? ii : null;
        } else {
            ii = indexOf$1.call(this._longMonthsParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf$1.call(this._shortMonthsParse, llc);
            return ii !== -1 ? ii : null;
        }
    }
}

function localeMonthsParse (monthName, format, strict) {
    var i, mom, regex;

    if (this._monthsParseExact) {
        return handleStrictParse.call(this, monthName, format, strict);
    }

    if (!this._monthsParse) {
        this._monthsParse = [];
        this._longMonthsParse = [];
        this._shortMonthsParse = [];
    }

    // TODO: add sorting
    // Sorting makes sure if one month (or abbr) is a prefix of another
    // see sorting in computeMonthsParse
    for (i = 0; i < 12; i++) {
        // make the regex if we don't have it already
        mom = createUTC([2000, i]);
        if (strict && !this._longMonthsParse[i]) {
            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
        }
        if (!strict && !this._monthsParse[i]) {
            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
        }
        // test the regex
        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
            return i;
        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
            return i;
        } else if (!strict && this._monthsParse[i].test(monthName)) {
            return i;
        }
    }
}

// MOMENTS

function setMonth (mom, value) {
    var dayOfMonth;

    if (!mom.isValid()) {
        // No op
        return mom;
    }

    if (typeof value === 'string') {
        if (/^\d+$/.test(value)) {
            value = toInt(value);
        } else {
            value = mom.localeData().monthsParse(value);
            // TODO: Another silent failure?
            if (!isNumber(value)) {
                return mom;
            }
        }
    }

    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
    return mom;
}

function getSetMonth (value) {
    if (value != null) {
        setMonth(this, value);
        hooks.updateOffset(this, true);
        return this;
    } else {
        return get(this, 'Month');
    }
}

function getDaysInMonth () {
    return daysInMonth(this.year(), this.month());
}

var defaultMonthsShortRegex = matchWord;
function monthsShortRegex (isStrict) {
    if (this._monthsParseExact) {
        if (!hasOwnProp(this, '_monthsRegex')) {
            computeMonthsParse.call(this);
        }
        if (isStrict) {
            return this._monthsShortStrictRegex;
        } else {
            return this._monthsShortRegex;
        }
    } else {
        if (!hasOwnProp(this, '_monthsShortRegex')) {
            this._monthsShortRegex = defaultMonthsShortRegex;
        }
        return this._monthsShortStrictRegex && isStrict ?
            this._monthsShortStrictRegex : this._monthsShortRegex;
    }
}

var defaultMonthsRegex = matchWord;
function monthsRegex (isStrict) {
    if (this._monthsParseExact) {
        if (!hasOwnProp(this, '_monthsRegex')) {
            computeMonthsParse.call(this);
        }
        if (isStrict) {
            return this._monthsStrictRegex;
        } else {
            return this._monthsRegex;
        }
    } else {
        if (!hasOwnProp(this, '_monthsRegex')) {
            this._monthsRegex = defaultMonthsRegex;
        }
        return this._monthsStrictRegex && isStrict ?
            this._monthsStrictRegex : this._monthsRegex;
    }
}

function computeMonthsParse () {
    function cmpLenRev(a, b) {
        return b.length - a.length;
    }

    var shortPieces = [], longPieces = [], mixedPieces = [],
        i, mom;
    for (i = 0; i < 12; i++) {
        // make the regex if we don't have it already
        mom = createUTC([2000, i]);
        shortPieces.push(this.monthsShort(mom, ''));
        longPieces.push(this.months(mom, ''));
        mixedPieces.push(this.months(mom, ''));
        mixedPieces.push(this.monthsShort(mom, ''));
    }
    // Sorting makes sure if one month (or abbr) is a prefix of another it
    // will match the longer piece.
    shortPieces.sort(cmpLenRev);
    longPieces.sort(cmpLenRev);
    mixedPieces.sort(cmpLenRev);
    for (i = 0; i < 12; i++) {
        shortPieces[i] = regexEscape(shortPieces[i]);
        longPieces[i] = regexEscape(longPieces[i]);
    }
    for (i = 0; i < 24; i++) {
        mixedPieces[i] = regexEscape(mixedPieces[i]);
    }

    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
    this._monthsShortRegex = this._monthsRegex;
    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
}

// FORMATTING

addFormatToken('Y', 0, 0, function () {
    var y = this.year();
    return y <= 9999 ? '' + y : '+' + y;
});

addFormatToken(0, ['YY', 2], 0, function () {
    return this.year() % 100;
});

addFormatToken(0, ['YYYY',   4],       0, 'year');
addFormatToken(0, ['YYYYY',  5],       0, 'year');
addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

// ALIASES

addUnitAlias('year', 'y');

// PRIORITIES

addUnitPriority('year', 1);

// PARSING

addRegexToken('Y',      matchSigned);
addRegexToken('YY',     match1to2, match2);
addRegexToken('YYYY',   match1to4, match4);
addRegexToken('YYYYY',  match1to6, match6);
addRegexToken('YYYYYY', match1to6, match6);

addParseToken(['YYYYY', 'YYYYYY'], YEAR);
addParseToken('YYYY', function (input, array) {
    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
});
addParseToken('YY', function (input, array) {
    array[YEAR] = hooks.parseTwoDigitYear(input);
});
addParseToken('Y', function (input, array) {
    array[YEAR] = parseInt(input, 10);
});

// HELPERS

function daysInYear(year) {
    return isLeapYear(year) ? 366 : 365;
}

function isLeapYear(year) {
    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
}

// HOOKS

hooks.parseTwoDigitYear = function (input) {
    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
};

// MOMENTS

var getSetYear = makeGetSet('FullYear', true);

function getIsLeapYear () {
    return isLeapYear(this.year());
}

function createDate (y, m, d, h, M, s, ms) {
    //can't just apply() to create a date:
    //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
    var date = new Date(y, m, d, h, M, s, ms);

    //the date constructor remaps years 0-99 to 1900-1999
    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
        date.setFullYear(y);
    }
    return date;
}

function createUTCDate (y) {
    var date = new Date(Date.UTC.apply(null, arguments));

    //the Date.UTC function remaps years 0-99 to 1900-1999
    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
        date.setUTCFullYear(y);
    }
    return date;
}

// start-of-first-week - start-of-year
function firstWeekOffset(year, dow, doy) {
    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
        fwd = 7 + dow - doy,
        // first-week day local weekday -- which local weekday is fwd
        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

    return -fwdlw + fwd - 1;
}

//http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
    var localWeekday = (7 + weekday - dow) % 7,
        weekOffset = firstWeekOffset(year, dow, doy),
        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
        resYear, resDayOfYear;

    if (dayOfYear <= 0) {
        resYear = year - 1;
        resDayOfYear = daysInYear(resYear) + dayOfYear;
    } else if (dayOfYear > daysInYear(year)) {
        resYear = year + 1;
        resDayOfYear = dayOfYear - daysInYear(year);
    } else {
        resYear = year;
        resDayOfYear = dayOfYear;
    }

    return {
        year: resYear,
        dayOfYear: resDayOfYear
    };
}

function weekOfYear(mom, dow, doy) {
    var weekOffset = firstWeekOffset(mom.year(), dow, doy),
        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
        resWeek, resYear;

    if (week < 1) {
        resYear = mom.year() - 1;
        resWeek = week + weeksInYear(resYear, dow, doy);
    } else if (week > weeksInYear(mom.year(), dow, doy)) {
        resWeek = week - weeksInYear(mom.year(), dow, doy);
        resYear = mom.year() + 1;
    } else {
        resYear = mom.year();
        resWeek = week;
    }

    return {
        week: resWeek,
        year: resYear
    };
}

function weeksInYear(year, dow, doy) {
    var weekOffset = firstWeekOffset(year, dow, doy),
        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
}

// FORMATTING

addFormatToken('w', ['ww', 2], 'wo', 'week');
addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

// ALIASES

addUnitAlias('week', 'w');
addUnitAlias('isoWeek', 'W');

// PRIORITIES

addUnitPriority('week', 5);
addUnitPriority('isoWeek', 5);

// PARSING

addRegexToken('w',  match1to2);
addRegexToken('ww', match1to2, match2);
addRegexToken('W',  match1to2);
addRegexToken('WW', match1to2, match2);

addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
    week[token.substr(0, 1)] = toInt(input);
});

// HELPERS

// LOCALES

function localeWeek (mom) {
    return weekOfYear(mom, this._week.dow, this._week.doy).week;
}

var defaultLocaleWeek = {
    dow : 0, // Sunday is the first day of the week.
    doy : 6  // The week that contains Jan 1st is the first week of the year.
};

function localeFirstDayOfWeek () {
    return this._week.dow;
}

function localeFirstDayOfYear () {
    return this._week.doy;
}

// MOMENTS

function getSetWeek (input) {
    var week = this.localeData().week(this);
    return input == null ? week : this.add((input - week) * 7, 'd');
}

function getSetISOWeek (input) {
    var week = weekOfYear(this, 1, 4).week;
    return input == null ? week : this.add((input - week) * 7, 'd');
}

// FORMATTING

addFormatToken('d', 0, 'do', 'day');

addFormatToken('dd', 0, 0, function (format) {
    return this.localeData().weekdaysMin(this, format);
});

addFormatToken('ddd', 0, 0, function (format) {
    return this.localeData().weekdaysShort(this, format);
});

addFormatToken('dddd', 0, 0, function (format) {
    return this.localeData().weekdays(this, format);
});

addFormatToken('e', 0, 0, 'weekday');
addFormatToken('E', 0, 0, 'isoWeekday');

// ALIASES

addUnitAlias('day', 'd');
addUnitAlias('weekday', 'e');
addUnitAlias('isoWeekday', 'E');

// PRIORITY
addUnitPriority('day', 11);
addUnitPriority('weekday', 11);
addUnitPriority('isoWeekday', 11);

// PARSING

addRegexToken('d',    match1to2);
addRegexToken('e',    match1to2);
addRegexToken('E',    match1to2);
addRegexToken('dd',   function (isStrict, locale) {
    return locale.weekdaysMinRegex(isStrict);
});
addRegexToken('ddd',   function (isStrict, locale) {
    return locale.weekdaysShortRegex(isStrict);
});
addRegexToken('dddd',   function (isStrict, locale) {
    return locale.weekdaysRegex(isStrict);
});

addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
    var weekday = config._locale.weekdaysParse(input, token, config._strict);
    // if we didn't get a weekday name, mark the date as invalid
    if (weekday != null) {
        week.d = weekday;
    } else {
        getParsingFlags(config).invalidWeekday = input;
    }
});

addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
    week[token] = toInt(input);
});

// HELPERS

function parseWeekday(input, locale) {
    if (typeof input !== 'string') {
        return input;
    }

    if (!isNaN(input)) {
        return parseInt(input, 10);
    }

    input = locale.weekdaysParse(input);
    if (typeof input === 'number') {
        return input;
    }

    return null;
}

function parseIsoWeekday(input, locale) {
    if (typeof input === 'string') {
        return locale.weekdaysParse(input) % 7 || 7;
    }
    return isNaN(input) ? null : input;
}

// LOCALES

var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
function localeWeekdays (m, format) {
    if (!m) {
        return this._weekdays;
    }
    return isArray(this._weekdays) ? this._weekdays[m.day()] :
        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
}

var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
function localeWeekdaysShort (m) {
    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
}

var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
function localeWeekdaysMin (m) {
    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
}

function handleStrictParse$1(weekdayName, format, strict) {
    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
    if (!this._weekdaysParse) {
        this._weekdaysParse = [];
        this._shortWeekdaysParse = [];
        this._minWeekdaysParse = [];

        for (i = 0; i < 7; ++i) {
            mom = createUTC([2000, 1]).day(i);
            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
        }
    }

    if (strict) {
        if (format === 'dddd') {
            ii = indexOf$1.call(this._weekdaysParse, llc);
            return ii !== -1 ? ii : null;
        } else if (format === 'ddd') {
            ii = indexOf$1.call(this._shortWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        } else {
            ii = indexOf$1.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        }
    } else {
        if (format === 'dddd') {
            ii = indexOf$1.call(this._weekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf$1.call(this._shortWeekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf$1.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        } else if (format === 'ddd') {
            ii = indexOf$1.call(this._shortWeekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf$1.call(this._weekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf$1.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        } else {
            ii = indexOf$1.call(this._minWeekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf$1.call(this._weekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf$1.call(this._shortWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        }
    }
}

function localeWeekdaysParse (weekdayName, format, strict) {
    var i, mom, regex;

    if (this._weekdaysParseExact) {
        return handleStrictParse$1.call(this, weekdayName, format, strict);
    }

    if (!this._weekdaysParse) {
        this._weekdaysParse = [];
        this._minWeekdaysParse = [];
        this._shortWeekdaysParse = [];
        this._fullWeekdaysParse = [];
    }

    for (i = 0; i < 7; i++) {
        // make the regex if we don't have it already

        mom = createUTC([2000, 1]).day(i);
        if (strict && !this._fullWeekdaysParse[i]) {
            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\.?') + '$', 'i');
            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\.?') + '$', 'i');
            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\.?') + '$', 'i');
        }
        if (!this._weekdaysParse[i]) {
            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
        }
        // test the regex
        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
            return i;
        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
            return i;
        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
            return i;
        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
            return i;
        }
    }
}

// MOMENTS

function getSetDayOfWeek (input) {
    if (!this.isValid()) {
        return input != null ? this : NaN;
    }
    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
    if (input != null) {
        input = parseWeekday(input, this.localeData());
        return this.add(input - day, 'd');
    } else {
        return day;
    }
}

function getSetLocaleDayOfWeek (input) {
    if (!this.isValid()) {
        return input != null ? this : NaN;
    }
    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
    return input == null ? weekday : this.add(input - weekday, 'd');
}

function getSetISODayOfWeek (input) {
    if (!this.isValid()) {
        return input != null ? this : NaN;
    }

    // behaves the same as moment#day except
    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
    // as a setter, sunday should belong to the previous week.

    if (input != null) {
        var weekday = parseIsoWeekday(input, this.localeData());
        return this.day(this.day() % 7 ? weekday : weekday - 7);
    } else {
        return this.day() || 7;
    }
}

var defaultWeekdaysRegex = matchWord;
function weekdaysRegex (isStrict) {
    if (this._weekdaysParseExact) {
        if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
        }
        if (isStrict) {
            return this._weekdaysStrictRegex;
        } else {
            return this._weekdaysRegex;
        }
    } else {
        if (!hasOwnProp(this, '_weekdaysRegex')) {
            this._weekdaysRegex = defaultWeekdaysRegex;
        }
        return this._weekdaysStrictRegex && isStrict ?
            this._weekdaysStrictRegex : this._weekdaysRegex;
    }
}

var defaultWeekdaysShortRegex = matchWord;
function weekdaysShortRegex (isStrict) {
    if (this._weekdaysParseExact) {
        if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
        }
        if (isStrict) {
            return this._weekdaysShortStrictRegex;
        } else {
            return this._weekdaysShortRegex;
        }
    } else {
        if (!hasOwnProp(this, '_weekdaysShortRegex')) {
            this._weekdaysShortRegex = defaultWeekdaysShortRegex;
        }
        return this._weekdaysShortStrictRegex && isStrict ?
            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
    }
}

var defaultWeekdaysMinRegex = matchWord;
function weekdaysMinRegex (isStrict) {
    if (this._weekdaysParseExact) {
        if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
        }
        if (isStrict) {
            return this._weekdaysMinStrictRegex;
        } else {
            return this._weekdaysMinRegex;
        }
    } else {
        if (!hasOwnProp(this, '_weekdaysMinRegex')) {
            this._weekdaysMinRegex = defaultWeekdaysMinRegex;
        }
        return this._weekdaysMinStrictRegex && isStrict ?
            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
    }
}


function computeWeekdaysParse () {
    function cmpLenRev(a, b) {
        return b.length - a.length;
    }

    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
        i, mom, minp, shortp, longp;
    for (i = 0; i < 7; i++) {
        // make the regex if we don't have it already
        mom = createUTC([2000, 1]).day(i);
        minp = this.weekdaysMin(mom, '');
        shortp = this.weekdaysShort(mom, '');
        longp = this.weekdays(mom, '');
        minPieces.push(minp);
        shortPieces.push(shortp);
        longPieces.push(longp);
        mixedPieces.push(minp);
        mixedPieces.push(shortp);
        mixedPieces.push(longp);
    }
    // Sorting makes sure if one weekday (or abbr) is a prefix of another it
    // will match the longer piece.
    minPieces.sort(cmpLenRev);
    shortPieces.sort(cmpLenRev);
    longPieces.sort(cmpLenRev);
    mixedPieces.sort(cmpLenRev);
    for (i = 0; i < 7; i++) {
        shortPieces[i] = regexEscape(shortPieces[i]);
        longPieces[i] = regexEscape(longPieces[i]);
        mixedPieces[i] = regexEscape(mixedPieces[i]);
    }

    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
    this._weekdaysShortRegex = this._weekdaysRegex;
    this._weekdaysMinRegex = this._weekdaysRegex;

    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
}

// FORMATTING

function hFormat() {
    return this.hours() % 12 || 12;
}

function kFormat() {
    return this.hours() || 24;
}

addFormatToken('H', ['HH', 2], 0, 'hour');
addFormatToken('h', ['hh', 2], 0, hFormat);
addFormatToken('k', ['kk', 2], 0, kFormat);

addFormatToken('hmm', 0, 0, function () {
    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
});

addFormatToken('hmmss', 0, 0, function () {
    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
        zeroFill(this.seconds(), 2);
});

addFormatToken('Hmm', 0, 0, function () {
    return '' + this.hours() + zeroFill(this.minutes(), 2);
});

addFormatToken('Hmmss', 0, 0, function () {
    return '' + this.hours() + zeroFill(this.minutes(), 2) +
        zeroFill(this.seconds(), 2);
});

function meridiem (token, lowercase) {
    addFormatToken(token, 0, 0, function () {
        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
    });
}

meridiem('a', true);
meridiem('A', false);

// ALIASES

addUnitAlias('hour', 'h');

// PRIORITY
addUnitPriority('hour', 13);

// PARSING

function matchMeridiem (isStrict, locale) {
    return locale._meridiemParse;
}

addRegexToken('a',  matchMeridiem);
addRegexToken('A',  matchMeridiem);
addRegexToken('H',  match1to2);
addRegexToken('h',  match1to2);
addRegexToken('HH', match1to2, match2);
addRegexToken('hh', match1to2, match2);

addRegexToken('hmm', match3to4);
addRegexToken('hmmss', match5to6);
addRegexToken('Hmm', match3to4);
addRegexToken('Hmmss', match5to6);

addParseToken(['H', 'HH'], HOUR);
addParseToken(['a', 'A'], function (input, array, config) {
    config._isPm = config._locale.isPM(input);
    config._meridiem = input;
});
addParseToken(['h', 'hh'], function (input, array, config) {
    array[HOUR] = toInt(input);
    getParsingFlags(config).bigHour = true;
});
addParseToken('hmm', function (input, array, config) {
    var pos = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos));
    array[MINUTE] = toInt(input.substr(pos));
    getParsingFlags(config).bigHour = true;
});
addParseToken('hmmss', function (input, array, config) {
    var pos1 = input.length - 4;
    var pos2 = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos1));
    array[MINUTE] = toInt(input.substr(pos1, 2));
    array[SECOND] = toInt(input.substr(pos2));
    getParsingFlags(config).bigHour = true;
});
addParseToken('Hmm', function (input, array, config) {
    var pos = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos));
    array[MINUTE] = toInt(input.substr(pos));
});
addParseToken('Hmmss', function (input, array, config) {
    var pos1 = input.length - 4;
    var pos2 = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos1));
    array[MINUTE] = toInt(input.substr(pos1, 2));
    array[SECOND] = toInt(input.substr(pos2));
});

// LOCALES

function localeIsPM (input) {
    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
    // Using charAt should be more compatible.
    return ((input + '').toLowerCase().charAt(0) === 'p');
}

var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
function localeMeridiem (hours, minutes, isLower) {
    if (hours > 11) {
        return isLower ? 'pm' : 'PM';
    } else {
        return isLower ? 'am' : 'AM';
    }
}


// MOMENTS

// Setting the hour should keep the time, because the user explicitly
// specified which hour he wants. So trying to maintain the same hour (in
// a new timezone) makes sense. Adding/subtracting hours does not follow
// this rule.
var getSetHour = makeGetSet('Hours', true);

// months
// week
// weekdays
// meridiem
var baseConfig = {
    calendar: defaultCalendar,
    longDateFormat: defaultLongDateFormat,
    invalidDate: defaultInvalidDate,
    ordinal: defaultOrdinal,
    ordinalParse: defaultOrdinalParse,
    relativeTime: defaultRelativeTime,

    months: defaultLocaleMonths,
    monthsShort: defaultLocaleMonthsShort,

    week: defaultLocaleWeek,

    weekdays: defaultLocaleWeekdays,
    weekdaysMin: defaultLocaleWeekdaysMin,
    weekdaysShort: defaultLocaleWeekdaysShort,

    meridiemParse: defaultLocaleMeridiemParse
};

// internal storage for locale config files
var locales = {};
var localeFamilies = {};
var globalLocale;

function normalizeLocale(key) {
    return key ? key.toLowerCase().replace('_', '-') : key;
}

// pick the locale from the array
// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
function chooseLocale(names) {
    var i = 0, j, next, locale, split;

    while (i < names.length) {
        split = normalizeLocale(names[i]).split('-');
        j = split.length;
        next = normalizeLocale(names[i + 1]);
        next = next ? next.split('-') : null;
        while (j > 0) {
            locale = loadLocale(split.slice(0, j).join('-'));
            if (locale) {
                return locale;
            }
            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                //the next array item is better than a shallower substring of this one
                break;
            }
            j--;
        }
        i++;
    }
    return null;
}

function loadLocale(name) {
    var oldLocale = null;
    // TODO: Find a better way to register and load all the locales in Node
    if (!locales[name] && (typeof module !== 'undefined') &&
            module && module.exports) {
        try {
            oldLocale = globalLocale._abbr;
            __webpack_require__(1222)("./" + name);
            // because defineLocale currently also sets the global locale, we
            // want to undo that for lazy loaded locales
            getSetGlobalLocale(oldLocale);
        } catch (e) { }
    }
    return locales[name];
}

// This function will load locale and then set the global locale.  If
// no arguments are passed in, it will simply return the current global
// locale key.
function getSetGlobalLocale (key, values) {
    var data;
    if (key) {
        if (isUndefined(values)) {
            data = getLocale(key);
        }
        else {
            data = defineLocale(key, values);
        }

        if (data) {
            // moment.duration._locale = moment._locale = data;
            globalLocale = data;
        }
    }

    return globalLocale._abbr;
}

function defineLocale (name, config) {
    if (config !== null) {
        var parentConfig = baseConfig;
        config.abbr = name;
        if (locales[name] != null) {
            deprecateSimple('defineLocaleOverride',
                    'use moment.updateLocale(localeName, config) to change ' +
                    'an existing locale. moment.defineLocale(localeName, ' +
                    'config) should only be used for creating a new locale ' +
                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
            parentConfig = locales[name]._config;
        } else if (config.parentLocale != null) {
            if (locales[config.parentLocale] != null) {
                parentConfig = locales[config.parentLocale]._config;
            } else {
                if (!localeFamilies[config.parentLocale]) {
                    localeFamilies[config.parentLocale] = [];
                }
                localeFamilies[config.parentLocale].push({
                    name: name,
                    config: config
                });
                return null;
            }
        }
        locales[name] = new Locale(mergeConfigs(parentConfig, config));

        if (localeFamilies[name]) {
            localeFamilies[name].forEach(function (x) {
                defineLocale(x.name, x.config);
            });
        }

        // backwards compat for now: also set the locale
        // make sure we set the locale AFTER all child locales have been
        // created, so we won't end up with the child locale set.
        getSetGlobalLocale(name);


        return locales[name];
    } else {
        // useful for testing
        delete locales[name];
        return null;
    }
}

function updateLocale(name, config) {
    if (config != null) {
        var locale, parentConfig = baseConfig;
        // MERGE
        if (locales[name] != null) {
            parentConfig = locales[name]._config;
        }
        config = mergeConfigs(parentConfig, config);
        locale = new Locale(config);
        locale.parentLocale = locales[name];
        locales[name] = locale;

        // backwards compat for now: also set the locale
        getSetGlobalLocale(name);
    } else {
        // pass null for config to unupdate, useful for tests
        if (locales[name] != null) {
            if (locales[name].parentLocale != null) {
                locales[name] = locales[name].parentLocale;
            } else if (locales[name] != null) {
                delete locales[name];
            }
        }
    }
    return locales[name];
}

// returns locale data
function getLocale (key) {
    var locale;

    if (key && key._locale && key._locale._abbr) {
        key = key._locale._abbr;
    }

    if (!key) {
        return globalLocale;
    }

    if (!isArray(key)) {
        //short-circuit everything else
        locale = loadLocale(key);
        if (locale) {
            return locale;
        }
        key = [key];
    }

    return chooseLocale(key);
}

function listLocales() {
    return keys$1(locales);
}

function checkOverflow (m) {
    var overflow;
    var a = m._a;

    if (a && getParsingFlags(m).overflow === -2) {
        overflow =
            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
            -1;

        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
            overflow = DATE;
        }
        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
            overflow = WEEK;
        }
        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
            overflow = WEEKDAY;
        }

        getParsingFlags(m).overflow = overflow;
    }

    return m;
}

// iso 8601 regex
// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

var isoDates = [
    ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
    ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
    ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
    ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
    ['YYYY-DDD', /\d{4}-\d{3}/],
    ['YYYY-MM', /\d{4}-\d\d/, false],
    ['YYYYYYMMDD', /[+-]\d{10}/],
    ['YYYYMMDD', /\d{8}/],
    // YYYYMM is NOT allowed by the standard
    ['GGGG[W]WWE', /\d{4}W\d{3}/],
    ['GGGG[W]WW', /\d{4}W\d{2}/, false],
    ['YYYYDDD', /\d{7}/]
];

// iso time formats and regexes
var isoTimes = [
    ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
    ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
    ['HH:mm:ss', /\d\d:\d\d:\d\d/],
    ['HH:mm', /\d\d:\d\d/],
    ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
    ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
    ['HHmmss', /\d\d\d\d\d\d/],
    ['HHmm', /\d\d\d\d/],
    ['HH', /\d\d/]
];

var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

// date from iso format
function configFromISO(config) {
    var i, l,
        string = config._i,
        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
        allowTime, dateFormat, timeFormat, tzFormat;

    if (match) {
        getParsingFlags(config).iso = true;

        for (i = 0, l = isoDates.length; i < l; i++) {
            if (isoDates[i][1].exec(match[1])) {
                dateFormat = isoDates[i][0];
                allowTime = isoDates[i][2] !== false;
                break;
            }
        }
        if (dateFormat == null) {
            config._isValid = false;
            return;
        }
        if (match[3]) {
            for (i = 0, l = isoTimes.length; i < l; i++) {
                if (isoTimes[i][1].exec(match[3])) {
                    // match[2] should be 'T' or space
                    timeFormat = (match[2] || ' ') + isoTimes[i][0];
                    break;
                }
            }
            if (timeFormat == null) {
                config._isValid = false;
                return;
            }
        }
        if (!allowTime && timeFormat != null) {
            config._isValid = false;
            return;
        }
        if (match[4]) {
            if (tzRegex.exec(match[4])) {
                tzFormat = 'Z';
            } else {
                config._isValid = false;
                return;
            }
        }
        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
        configFromStringAndFormat(config);
    } else {
        config._isValid = false;
    }
}

// date from iso format or fallback
function configFromString(config) {
    var matched = aspNetJsonRegex.exec(config._i);

    if (matched !== null) {
        config._d = new Date(+matched[1]);
        return;
    }

    configFromISO(config);
    if (config._isValid === false) {
        delete config._isValid;
        hooks.createFromInputFallback(config);
    }
}

hooks.createFromInputFallback = deprecate(
    'value provided is not in a recognized ISO format. moment construction falls back to js Date(), ' +
    'which is not reliable across all browsers and versions. Non ISO date formats are ' +
    'discouraged and will be removed in an upcoming major release. Please refer to ' +
    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
    function (config) {
        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
    }
);

// Pick the first defined of two or three arguments.
function defaults(a, b, c) {
    if (a != null) {
        return a;
    }
    if (b != null) {
        return b;
    }
    return c;
}

function currentDateArray(config) {
    // hooks is actually the exported moment object
    var nowValue = new Date(hooks.now());
    if (config._useUTC) {
        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
    }
    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
}

// convert an array to a date.
// the array should mirror the parameters below
// note: all values past the year are optional and will default to the lowest possible value.
// [year, month, day , hour, minute, second, millisecond]
function configFromArray (config) {
    var i, date, input = [], currentDate, yearToUse;

    if (config._d) {
        return;
    }

    currentDate = currentDateArray(config);

    //compute day of the year from weeks and weekdays
    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
        dayOfYearFromWeekInfo(config);
    }

    //if the day of the year is set, figure out what it is
    if (config._dayOfYear) {
        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

        if (config._dayOfYear > daysInYear(yearToUse)) {
            getParsingFlags(config)._overflowDayOfYear = true;
        }

        date = createUTCDate(yearToUse, 0, config._dayOfYear);
        config._a[MONTH] = date.getUTCMonth();
        config._a[DATE] = date.getUTCDate();
    }

    // Default to current date.
    // * if no year, month, day of month are given, default to today
    // * if day of month is given, default month and year
    // * if month is given, default only year
    // * if year is given, don't default anything
    for (i = 0; i < 3 && config._a[i] == null; ++i) {
        config._a[i] = input[i] = currentDate[i];
    }

    // Zero out whatever was not defaulted, including time
    for (; i < 7; i++) {
        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
    }

    // Check for 24:00:00.000
    if (config._a[HOUR] === 24 &&
            config._a[MINUTE] === 0 &&
            config._a[SECOND] === 0 &&
            config._a[MILLISECOND] === 0) {
        config._nextDay = true;
        config._a[HOUR] = 0;
    }

    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
    // Apply timezone offset from input. The actual utcOffset can be changed
    // with parseZone.
    if (config._tzm != null) {
        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
    }

    if (config._nextDay) {
        config._a[HOUR] = 24;
    }
}

function dayOfYearFromWeekInfo(config) {
    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

    w = config._w;
    if (w.GG != null || w.W != null || w.E != null) {
        dow = 1;
        doy = 4;

        // TODO: We need to take the current isoWeekYear, but that depends on
        // how we interpret now (local, utc, fixed offset). So create
        // a now version of current config (take local/utc/offset flags, and
        // create now).
        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
        week = defaults(w.W, 1);
        weekday = defaults(w.E, 1);
        if (weekday < 1 || weekday > 7) {
            weekdayOverflow = true;
        }
    } else {
        dow = config._locale._week.dow;
        doy = config._locale._week.doy;

        var curWeek = weekOfYear(createLocal(), dow, doy);

        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

        // Default to current week.
        week = defaults(w.w, curWeek.week);

        if (w.d != null) {
            // weekday -- low day numbers are considered next week
            weekday = w.d;
            if (weekday < 0 || weekday > 6) {
                weekdayOverflow = true;
            }
        } else if (w.e != null) {
            // local weekday -- counting starts from begining of week
            weekday = w.e + dow;
            if (w.e < 0 || w.e > 6) {
                weekdayOverflow = true;
            }
        } else {
            // default to begining of week
            weekday = dow;
        }
    }
    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
        getParsingFlags(config)._overflowWeeks = true;
    } else if (weekdayOverflow != null) {
        getParsingFlags(config)._overflowWeekday = true;
    } else {
        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
        config._a[YEAR] = temp.year;
        config._dayOfYear = temp.dayOfYear;
    }
}

// constant that refers to the ISO standard
hooks.ISO_8601 = function () {};

// date from string and format string
function configFromStringAndFormat(config) {
    // TODO: Move this to another part of the creation flow to prevent circular deps
    if (config._f === hooks.ISO_8601) {
        configFromISO(config);
        return;
    }

    config._a = [];
    getParsingFlags(config).empty = true;

    // This array is used to make a Date, either with `new Date` or `Date.UTC`
    var string = '' + config._i,
        i, parsedInput, tokens, token, skipped,
        stringLength = string.length,
        totalParsedInputLength = 0;

    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

    for (i = 0; i < tokens.length; i++) {
        token = tokens[i];
        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
        // console.log('token', token, 'parsedInput', parsedInput,
        //         'regex', getParseRegexForToken(token, config));
        if (parsedInput) {
            skipped = string.substr(0, string.indexOf(parsedInput));
            if (skipped.length > 0) {
                getParsingFlags(config).unusedInput.push(skipped);
            }
            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
            totalParsedInputLength += parsedInput.length;
        }
        // don't parse if it's not a known token
        if (formatTokenFunctions[token]) {
            if (parsedInput) {
                getParsingFlags(config).empty = false;
            }
            else {
                getParsingFlags(config).unusedTokens.push(token);
            }
            addTimeToArrayFromToken(token, parsedInput, config);
        }
        else if (config._strict && !parsedInput) {
            getParsingFlags(config).unusedTokens.push(token);
        }
    }

    // add remaining unparsed input length to the string
    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
    if (string.length > 0) {
        getParsingFlags(config).unusedInput.push(string);
    }

    // clear _12h flag if hour is <= 12
    if (config._a[HOUR] <= 12 &&
        getParsingFlags(config).bigHour === true &&
        config._a[HOUR] > 0) {
        getParsingFlags(config).bigHour = undefined;
    }

    getParsingFlags(config).parsedDateParts = config._a.slice(0);
    getParsingFlags(config).meridiem = config._meridiem;
    // handle meridiem
    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

    configFromArray(config);
    checkOverflow(config);
}


function meridiemFixWrap (locale, hour, meridiem) {
    var isPm;

    if (meridiem == null) {
        // nothing to do
        return hour;
    }
    if (locale.meridiemHour != null) {
        return locale.meridiemHour(hour, meridiem);
    } else if (locale.isPM != null) {
        // Fallback
        isPm = locale.isPM(meridiem);
        if (isPm && hour < 12) {
            hour += 12;
        }
        if (!isPm && hour === 12) {
            hour = 0;
        }
        return hour;
    } else {
        // this is not supposed to happen
        return hour;
    }
}

// date from string and array of format strings
function configFromStringAndArray(config) {
    var tempConfig,
        bestMoment,

        scoreToBeat,
        i,
        currentScore;

    if (config._f.length === 0) {
        getParsingFlags(config).invalidFormat = true;
        config._d = new Date(NaN);
        return;
    }

    for (i = 0; i < config._f.length; i++) {
        currentScore = 0;
        tempConfig = copyConfig({}, config);
        if (config._useUTC != null) {
            tempConfig._useUTC = config._useUTC;
        }
        tempConfig._f = config._f[i];
        configFromStringAndFormat(tempConfig);

        if (!isValid(tempConfig)) {
            continue;
        }

        // if there is any input that was not parsed add a penalty for that format
        currentScore += getParsingFlags(tempConfig).charsLeftOver;

        //or tokens
        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

        getParsingFlags(tempConfig).score = currentScore;

        if (scoreToBeat == null || currentScore < scoreToBeat) {
            scoreToBeat = currentScore;
            bestMoment = tempConfig;
        }
    }

    extend(config, bestMoment || tempConfig);
}

function configFromObject(config) {
    if (config._d) {
        return;
    }

    var i = normalizeObjectUnits(config._i);
    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
        return obj && parseInt(obj, 10);
    });

    configFromArray(config);
}

function createFromConfig (config) {
    var res = new Moment(checkOverflow(prepareConfig(config)));
    if (res._nextDay) {
        // Adding is smart enough around DST
        res.add(1, 'd');
        res._nextDay = undefined;
    }

    return res;
}

function prepareConfig (config) {
    var input = config._i,
        format = config._f;

    config._locale = config._locale || getLocale(config._l);

    if (input === null || (format === undefined && input === '')) {
        return createInvalid({nullInput: true});
    }

    if (typeof input === 'string') {
        config._i = input = config._locale.preparse(input);
    }

    if (isMoment(input)) {
        return new Moment(checkOverflow(input));
    } else if (isDate(input)) {
        config._d = input;
    } else if (isArray(format)) {
        configFromStringAndArray(config);
    } else if (format) {
        configFromStringAndFormat(config);
    }  else {
        configFromInput(config);
    }

    if (!isValid(config)) {
        config._d = null;
    }

    return config;
}

function configFromInput(config) {
    var input = config._i;
    if (input === undefined) {
        config._d = new Date(hooks.now());
    } else if (isDate(input)) {
        config._d = new Date(input.valueOf());
    } else if (typeof input === 'string') {
        configFromString(config);
    } else if (isArray(input)) {
        config._a = map(input.slice(0), function (obj) {
            return parseInt(obj, 10);
        });
        configFromArray(config);
    } else if (typeof(input) === 'object') {
        configFromObject(config);
    } else if (isNumber(input)) {
        // from milliseconds
        config._d = new Date(input);
    } else {
        hooks.createFromInputFallback(config);
    }
}

function createLocalOrUTC (input, format, locale, strict, isUTC) {
    var c = {};

    if (locale === true || locale === false) {
        strict = locale;
        locale = undefined;
    }

    if ((isObject(input) && isObjectEmpty(input)) ||
            (isArray(input) && input.length === 0)) {
        input = undefined;
    }
    // object construction must be done this way.
    // https://github.com/moment/moment/issues/1423
    c._isAMomentObject = true;
    c._useUTC = c._isUTC = isUTC;
    c._l = locale;
    c._i = input;
    c._f = format;
    c._strict = strict;

    return createFromConfig(c);
}

function createLocal (input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, false);
}

var prototypeMin = deprecate(
    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
    function () {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
            return other < this ? this : other;
        } else {
            return createInvalid();
        }
    }
);

var prototypeMax = deprecate(
    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
    function () {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
            return other > this ? this : other;
        } else {
            return createInvalid();
        }
    }
);

// Pick a moment m from moments so that m[fn](other) is true for all
// other. This relies on the function fn to be transitive.
//
// moments should either be an array of moment objects or an array, whose
// first element is an array of moment objects.
function pickBy(fn, moments) {
    var res, i;
    if (moments.length === 1 && isArray(moments[0])) {
        moments = moments[0];
    }
    if (!moments.length) {
        return createLocal();
    }
    res = moments[0];
    for (i = 1; i < moments.length; ++i) {
        if (!moments[i].isValid() || moments[i][fn](res)) {
            res = moments[i];
        }
    }
    return res;
}

// TODO: Use [].sort instead?
function min () {
    var args = [].slice.call(arguments, 0);

    return pickBy('isBefore', args);
}

function max () {
    var args = [].slice.call(arguments, 0);

    return pickBy('isAfter', args);
}

var now = function () {
    return Date.now ? Date.now() : +(new Date());
};

function Duration (duration) {
    var normalizedInput = normalizeObjectUnits(duration),
        years = normalizedInput.year || 0,
        quarters = normalizedInput.quarter || 0,
        months = normalizedInput.month || 0,
        weeks = normalizedInput.week || 0,
        days = normalizedInput.day || 0,
        hours = normalizedInput.hour || 0,
        minutes = normalizedInput.minute || 0,
        seconds = normalizedInput.second || 0,
        milliseconds = normalizedInput.millisecond || 0;

    // representation for dateAddRemove
    this._milliseconds = +milliseconds +
        seconds * 1e3 + // 1000
        minutes * 6e4 + // 1000 * 60
        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
    // Because of dateAddRemove treats 24 hours as different from a
    // day when working around DST, we need to store them separately
    this._days = +days +
        weeks * 7;
    // It is impossible translate months into days without knowing
    // which months you are are talking about, so we have to store
    // it separately.
    this._months = +months +
        quarters * 3 +
        years * 12;

    this._data = {};

    this._locale = getLocale();

    this._bubble();
}

function isDuration (obj) {
    return obj instanceof Duration;
}

function absRound (number) {
    if (number < 0) {
        return Math.round(-1 * number) * -1;
    } else {
        return Math.round(number);
    }
}

// FORMATTING

function offset (token, separator) {
    addFormatToken(token, 0, 0, function () {
        var offset = this.utcOffset();
        var sign = '+';
        if (offset < 0) {
            offset = -offset;
            sign = '-';
        }
        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
    });
}

offset('Z', ':');
offset('ZZ', '');

// PARSING

addRegexToken('Z',  matchShortOffset);
addRegexToken('ZZ', matchShortOffset);
addParseToken(['Z', 'ZZ'], function (input, array, config) {
    config._useUTC = true;
    config._tzm = offsetFromString(matchShortOffset, input);
});

// HELPERS

// timezone chunker
// '+10:00' > ['10',  '00']
// '-1530'  > ['-15', '30']
var chunkOffset = /([\+\-]|\d\d)/gi;

function offsetFromString(matcher, string) {
    var matches = (string || '').match(matcher);

    if (matches === null) {
        return null;
    }

    var chunk   = matches[matches.length - 1] || [];
    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
    var minutes = +(parts[1] * 60) + toInt(parts[2]);

    return minutes === 0 ?
      0 :
      parts[0] === '+' ? minutes : -minutes;
}

// Return a moment from input, that is local/utc/zone equivalent to model.
function cloneWithOffset(input, model) {
    var res, diff;
    if (model._isUTC) {
        res = model.clone();
        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
        // Use low-level api, because this fn is low-level api.
        res._d.setTime(res._d.valueOf() + diff);
        hooks.updateOffset(res, false);
        return res;
    } else {
        return createLocal(input).local();
    }
}

function getDateOffset (m) {
    // On Firefox.24 Date#getTimezoneOffset returns a floating point.
    // https://github.com/moment/moment/pull/1871
    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
}

// HOOKS

// This function will be called whenever a moment is mutated.
// It is intended to keep the offset in sync with the timezone.
hooks.updateOffset = function () {};

// MOMENTS

// keepLocalTime = true means only change the timezone, without
// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
// +0200, so we adjust the time as needed, to be valid.
//
// Keeping the time actually adds/subtracts (one hour)
// from the actual represented time. That is why we call updateOffset
// a second time. In case it wants us to change the offset again
// _changeInProgress == true case, then we have to adjust, because
// there is no such time in the given timezone.
function getSetOffset (input, keepLocalTime) {
    var offset = this._offset || 0,
        localAdjust;
    if (!this.isValid()) {
        return input != null ? this : NaN;
    }
    if (input != null) {
        if (typeof input === 'string') {
            input = offsetFromString(matchShortOffset, input);
            if (input === null) {
                return this;
            }
        } else if (Math.abs(input) < 16) {
            input = input * 60;
        }
        if (!this._isUTC && keepLocalTime) {
            localAdjust = getDateOffset(this);
        }
        this._offset = input;
        this._isUTC = true;
        if (localAdjust != null) {
            this.add(localAdjust, 'm');
        }
        if (offset !== input) {
            if (!keepLocalTime || this._changeInProgress) {
                addSubtract(this, createDuration(input - offset, 'm'), 1, false);
            } else if (!this._changeInProgress) {
                this._changeInProgress = true;
                hooks.updateOffset(this, true);
                this._changeInProgress = null;
            }
        }
        return this;
    } else {
        return this._isUTC ? offset : getDateOffset(this);
    }
}

function getSetZone (input, keepLocalTime) {
    if (input != null) {
        if (typeof input !== 'string') {
            input = -input;
        }

        this.utcOffset(input, keepLocalTime);

        return this;
    } else {
        return -this.utcOffset();
    }
}

function setOffsetToUTC (keepLocalTime) {
    return this.utcOffset(0, keepLocalTime);
}

function setOffsetToLocal (keepLocalTime) {
    if (this._isUTC) {
        this.utcOffset(0, keepLocalTime);
        this._isUTC = false;

        if (keepLocalTime) {
            this.subtract(getDateOffset(this), 'm');
        }
    }
    return this;
}

function setOffsetToParsedOffset () {
    if (this._tzm != null) {
        this.utcOffset(this._tzm);
    } else if (typeof this._i === 'string') {
        var tZone = offsetFromString(matchOffset, this._i);
        if (tZone != null) {
            this.utcOffset(tZone);
        }
        else {
            this.utcOffset(0, true);
        }
    }
    return this;
}

function hasAlignedHourOffset (input) {
    if (!this.isValid()) {
        return false;
    }
    input = input ? createLocal(input).utcOffset() : 0;

    return (this.utcOffset() - input) % 60 === 0;
}

function isDaylightSavingTime () {
    return (
        this.utcOffset() > this.clone().month(0).utcOffset() ||
        this.utcOffset() > this.clone().month(5).utcOffset()
    );
}

function isDaylightSavingTimeShifted () {
    if (!isUndefined(this._isDSTShifted)) {
        return this._isDSTShifted;
    }

    var c = {};

    copyConfig(c, this);
    c = prepareConfig(c);

    if (c._a) {
        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
        this._isDSTShifted = this.isValid() &&
            compareArrays(c._a, other.toArray()) > 0;
    } else {
        this._isDSTShifted = false;
    }

    return this._isDSTShifted;
}

function isLocal () {
    return this.isValid() ? !this._isUTC : false;
}

function isUtcOffset () {
    return this.isValid() ? this._isUTC : false;
}

function isUtc () {
    return this.isValid() ? this._isUTC && this._offset === 0 : false;
}

// ASP.NET json date format regex
var aspNetRegex = /^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
// and further modified to allow for strings containing both week and day
var isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;

function createDuration (input, key) {
    var duration = input,
        // matching against regexp is expensive, do it on demand
        match = null,
        sign,
        ret,
        diffRes;

    if (isDuration(input)) {
        duration = {
            ms : input._milliseconds,
            d  : input._days,
            M  : input._months
        };
    } else if (isNumber(input)) {
        duration = {};
        if (key) {
            duration[key] = input;
        } else {
            duration.milliseconds = input;
        }
    } else if (!!(match = aspNetRegex.exec(input))) {
        sign = (match[1] === '-') ? -1 : 1;
        duration = {
            y  : 0,
            d  : toInt(match[DATE])                         * sign,
            h  : toInt(match[HOUR])                         * sign,
            m  : toInt(match[MINUTE])                       * sign,
            s  : toInt(match[SECOND])                       * sign,
            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
        };
    } else if (!!(match = isoRegex.exec(input))) {
        sign = (match[1] === '-') ? -1 : 1;
        duration = {
            y : parseIso(match[2], sign),
            M : parseIso(match[3], sign),
            w : parseIso(match[4], sign),
            d : parseIso(match[5], sign),
            h : parseIso(match[6], sign),
            m : parseIso(match[7], sign),
            s : parseIso(match[8], sign)
        };
    } else if (duration == null) {// checks for null or undefined
        duration = {};
    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

        duration = {};
        duration.ms = diffRes.milliseconds;
        duration.M = diffRes.months;
    }

    ret = new Duration(duration);

    if (isDuration(input) && hasOwnProp(input, '_locale')) {
        ret._locale = input._locale;
    }

    return ret;
}

createDuration.fn = Duration.prototype;

function parseIso (inp, sign) {
    // We'd normally use ~~inp for this, but unfortunately it also
    // converts floats to ints.
    // inp may be undefined, so careful calling replace on it.
    var res = inp && parseFloat(inp.replace(',', '.'));
    // apply sign while we're at it
    return (isNaN(res) ? 0 : res) * sign;
}

function positiveMomentsDifference(base, other) {
    var res = {milliseconds: 0, months: 0};

    res.months = other.month() - base.month() +
        (other.year() - base.year()) * 12;
    if (base.clone().add(res.months, 'M').isAfter(other)) {
        --res.months;
    }

    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

    return res;
}

function momentsDifference(base, other) {
    var res;
    if (!(base.isValid() && other.isValid())) {
        return {milliseconds: 0, months: 0};
    }

    other = cloneWithOffset(other, base);
    if (base.isBefore(other)) {
        res = positiveMomentsDifference(base, other);
    } else {
        res = positiveMomentsDifference(other, base);
        res.milliseconds = -res.milliseconds;
        res.months = -res.months;
    }

    return res;
}

// TODO: remove 'name' arg after deprecation is removed
function createAdder(direction, name) {
    return function (val, period) {
        var dur, tmp;
        //invert the arguments, but complain about it
        if (period !== null && !isNaN(+period)) {
            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
            tmp = val; val = period; period = tmp;
        }

        val = typeof val === 'string' ? +val : val;
        dur = createDuration(val, period);
        addSubtract(this, dur, direction);
        return this;
    };
}

function addSubtract (mom, duration, isAdding, updateOffset) {
    var milliseconds = duration._milliseconds,
        days = absRound(duration._days),
        months = absRound(duration._months);

    if (!mom.isValid()) {
        // No op
        return;
    }

    updateOffset = updateOffset == null ? true : updateOffset;

    if (milliseconds) {
        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
    }
    if (days) {
        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
    }
    if (months) {
        setMonth(mom, get(mom, 'Month') + months * isAdding);
    }
    if (updateOffset) {
        hooks.updateOffset(mom, days || months);
    }
}

var add      = createAdder(1, 'add');
var subtract = createAdder(-1, 'subtract');

function getCalendarFormat(myMoment, now) {
    var diff = myMoment.diff(now, 'days', true);
    return diff < -6 ? 'sameElse' :
            diff < -1 ? 'lastWeek' :
            diff < 0 ? 'lastDay' :
            diff < 1 ? 'sameDay' :
            diff < 2 ? 'nextDay' :
            diff < 7 ? 'nextWeek' : 'sameElse';
}

function calendar$1 (time, formats) {
    // We want to compare the start of today, vs this.
    // Getting start-of-today depends on whether we're local/utc/offset or not.
    var now = time || createLocal(),
        sod = cloneWithOffset(now, this).startOf('day'),
        format = hooks.calendarFormat(this, sod) || 'sameElse';

    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
}

function clone () {
    return new Moment(this);
}

function isAfter (input, units) {
    var localInput = isMoment(input) ? input : createLocal(input);
    if (!(this.isValid() && localInput.isValid())) {
        return false;
    }
    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
    if (units === 'millisecond') {
        return this.valueOf() > localInput.valueOf();
    } else {
        return localInput.valueOf() < this.clone().startOf(units).valueOf();
    }
}

function isBefore (input, units) {
    var localInput = isMoment(input) ? input : createLocal(input);
    if (!(this.isValid() && localInput.isValid())) {
        return false;
    }
    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
    if (units === 'millisecond') {
        return this.valueOf() < localInput.valueOf();
    } else {
        return this.clone().endOf(units).valueOf() < localInput.valueOf();
    }
}

function isBetween (from, to, units, inclusivity) {
    inclusivity = inclusivity || '()';
    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&
        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
}

function isSame (input, units) {
    var localInput = isMoment(input) ? input : createLocal(input),
        inputMs;
    if (!(this.isValid() && localInput.isValid())) {
        return false;
    }
    units = normalizeUnits(units || 'millisecond');
    if (units === 'millisecond') {
        return this.valueOf() === localInput.valueOf();
    } else {
        inputMs = localInput.valueOf();
        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
    }
}

function isSameOrAfter (input, units) {
    return this.isSame(input, units) || this.isAfter(input,units);
}

function isSameOrBefore (input, units) {
    return this.isSame(input, units) || this.isBefore(input,units);
}

function diff (input, units, asFloat) {
    var that,
        zoneDelta,
        delta, output;

    if (!this.isValid()) {
        return NaN;
    }

    that = cloneWithOffset(input, this);

    if (!that.isValid()) {
        return NaN;
    }

    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

    units = normalizeUnits(units);

    if (units === 'year' || units === 'month' || units === 'quarter') {
        output = monthDiff(this, that);
        if (units === 'quarter') {
            output = output / 3;
        } else if (units === 'year') {
            output = output / 12;
        }
    } else {
        delta = this - that;
        output = units === 'second' ? delta / 1e3 : // 1000
            units === 'minute' ? delta / 6e4 : // 1000 * 60
            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60
            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
            delta;
    }
    return asFloat ? output : absFloor(output);
}

function monthDiff (a, b) {
    // difference in months
    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
        // b is in (anchor - 1 month, anchor + 1 month)
        anchor = a.clone().add(wholeMonthDiff, 'months'),
        anchor2, adjust;

    if (b - anchor < 0) {
        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
        // linear across the month
        adjust = (b - anchor) / (anchor - anchor2);
    } else {
        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
        // linear across the month
        adjust = (b - anchor) / (anchor2 - anchor);
    }

    //check for negative zero, return zero if negative zero
    return -(wholeMonthDiff + adjust) || 0;
}

hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

function toString () {
    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
}

function toISOString () {
    var m = this.clone().utc();
    if (0 < m.year() && m.year() <= 9999) {
        if (isFunction(Date.prototype.toISOString)) {
            // native implementation is ~50x faster, use it when we can
            return this.toDate().toISOString();
        } else {
            return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
        }
    } else {
        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
    }
}

/**
 * Return a human readable representation of a moment that can
 * also be evaluated to get a new moment which is the same
 *
 * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
 */
function inspect () {
    if (!this.isValid()) {
        return 'moment.invalid(/* ' + this._i + ' */)';
    }
    var func = 'moment';
    var zone = '';
    if (!this.isLocal()) {
        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
        zone = 'Z';
    }
    var prefix = '[' + func + '("]';
    var year = (0 < this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
    var datetime = '-MM-DD[T]HH:mm:ss.SSS';
    var suffix = zone + '[")]';

    return this.format(prefix + year + datetime + suffix);
}

function format (inputString) {
    if (!inputString) {
        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
    }
    var output = formatMoment(this, inputString);
    return this.localeData().postformat(output);
}

function from (time, withoutSuffix) {
    if (this.isValid() &&
            ((isMoment(time) && time.isValid()) ||
             createLocal(time).isValid())) {
        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
    } else {
        return this.localeData().invalidDate();
    }
}

function fromNow (withoutSuffix) {
    return this.from(createLocal(), withoutSuffix);
}

function to (time, withoutSuffix) {
    if (this.isValid() &&
            ((isMoment(time) && time.isValid()) ||
             createLocal(time).isValid())) {
        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
    } else {
        return this.localeData().invalidDate();
    }
}

function toNow (withoutSuffix) {
    return this.to(createLocal(), withoutSuffix);
}

// If passed a locale key, it will set the locale for this
// instance.  Otherwise, it will return the locale configuration
// variables for this instance.
function locale (key) {
    var newLocaleData;

    if (key === undefined) {
        return this._locale._abbr;
    } else {
        newLocaleData = getLocale(key);
        if (newLocaleData != null) {
            this._locale = newLocaleData;
        }
        return this;
    }
}

var lang = deprecate(
    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
    function (key) {
        if (key === undefined) {
            return this.localeData();
        } else {
            return this.locale(key);
        }
    }
);

function localeData () {
    return this._locale;
}

function startOf (units) {
    units = normalizeUnits(units);
    // the following switch intentionally omits break keywords
    // to utilize falling through the cases.
    switch (units) {
        case 'year':
            this.month(0);
            /* falls through */
        case 'quarter':
        case 'month':
            this.date(1);
            /* falls through */
        case 'week':
        case 'isoWeek':
        case 'day':
        case 'date':
            this.hours(0);
            /* falls through */
        case 'hour':
            this.minutes(0);
            /* falls through */
        case 'minute':
            this.seconds(0);
            /* falls through */
        case 'second':
            this.milliseconds(0);
    }

    // weeks are a special case
    if (units === 'week') {
        this.weekday(0);
    }
    if (units === 'isoWeek') {
        this.isoWeekday(1);
    }

    // quarters are also special
    if (units === 'quarter') {
        this.month(Math.floor(this.month() / 3) * 3);
    }

    return this;
}

function endOf (units) {
    units = normalizeUnits(units);
    if (units === undefined || units === 'millisecond') {
        return this;
    }

    // 'date' is an alias for 'day', so it should be considered as such.
    if (units === 'date') {
        units = 'day';
    }

    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
}

function valueOf () {
    return this._d.valueOf() - ((this._offset || 0) * 60000);
}

function unix () {
    return Math.floor(this.valueOf() / 1000);
}

function toDate () {
    return new Date(this.valueOf());
}

function toArray () {
    var m = this;
    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
}

function toObject () {
    var m = this;
    return {
        years: m.year(),
        months: m.month(),
        date: m.date(),
        hours: m.hours(),
        minutes: m.minutes(),
        seconds: m.seconds(),
        milliseconds: m.milliseconds()
    };
}

function toJSON () {
    // new Date(NaN).toJSON() === null
    return this.isValid() ? this.toISOString() : null;
}

function isValid$1 () {
    return isValid(this);
}

function parsingFlags () {
    return extend({}, getParsingFlags(this));
}

function invalidAt () {
    return getParsingFlags(this).overflow;
}

function creationData() {
    return {
        input: this._i,
        format: this._f,
        locale: this._locale,
        isUTC: this._isUTC,
        strict: this._strict
    };
}

// FORMATTING

addFormatToken(0, ['gg', 2], 0, function () {
    return this.weekYear() % 100;
});

addFormatToken(0, ['GG', 2], 0, function () {
    return this.isoWeekYear() % 100;
});

function addWeekYearFormatToken (token, getter) {
    addFormatToken(0, [token, token.length], 0, getter);
}

addWeekYearFormatToken('gggg',     'weekYear');
addWeekYearFormatToken('ggggg',    'weekYear');
addWeekYearFormatToken('GGGG',  'isoWeekYear');
addWeekYearFormatToken('GGGGG', 'isoWeekYear');

// ALIASES

addUnitAlias('weekYear', 'gg');
addUnitAlias('isoWeekYear', 'GG');

// PRIORITY

addUnitPriority('weekYear', 1);
addUnitPriority('isoWeekYear', 1);


// PARSING

addRegexToken('G',      matchSigned);
addRegexToken('g',      matchSigned);
addRegexToken('GG',     match1to2, match2);
addRegexToken('gg',     match1to2, match2);
addRegexToken('GGGG',   match1to4, match4);
addRegexToken('gggg',   match1to4, match4);
addRegexToken('GGGGG',  match1to6, match6);
addRegexToken('ggggg',  match1to6, match6);

addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
    week[token.substr(0, 2)] = toInt(input);
});

addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
    week[token] = hooks.parseTwoDigitYear(input);
});

// MOMENTS

function getSetWeekYear (input) {
    return getSetWeekYearHelper.call(this,
            input,
            this.week(),
            this.weekday(),
            this.localeData()._week.dow,
            this.localeData()._week.doy);
}

function getSetISOWeekYear (input) {
    return getSetWeekYearHelper.call(this,
            input, this.isoWeek(), this.isoWeekday(), 1, 4);
}

function getISOWeeksInYear () {
    return weeksInYear(this.year(), 1, 4);
}

function getWeeksInYear () {
    var weekInfo = this.localeData()._week;
    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
}

function getSetWeekYearHelper(input, week, weekday, dow, doy) {
    var weeksTarget;
    if (input == null) {
        return weekOfYear(this, dow, doy).year;
    } else {
        weeksTarget = weeksInYear(input, dow, doy);
        if (week > weeksTarget) {
            week = weeksTarget;
        }
        return setWeekAll.call(this, input, week, weekday, dow, doy);
    }
}

function setWeekAll(weekYear, week, weekday, dow, doy) {
    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

    this.year(date.getUTCFullYear());
    this.month(date.getUTCMonth());
    this.date(date.getUTCDate());
    return this;
}

// FORMATTING

addFormatToken('Q', 0, 'Qo', 'quarter');

// ALIASES

addUnitAlias('quarter', 'Q');

// PRIORITY

addUnitPriority('quarter', 7);

// PARSING

addRegexToken('Q', match1);
addParseToken('Q', function (input, array) {
    array[MONTH] = (toInt(input) - 1) * 3;
});

// MOMENTS

function getSetQuarter (input) {
    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
}

// FORMATTING

addFormatToken('D', ['DD', 2], 'Do', 'date');

// ALIASES

addUnitAlias('date', 'D');

// PRIOROITY
addUnitPriority('date', 9);

// PARSING

addRegexToken('D',  match1to2);
addRegexToken('DD', match1to2, match2);
addRegexToken('Do', function (isStrict, locale) {
    return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;
});

addParseToken(['D', 'DD'], DATE);
addParseToken('Do', function (input, array) {
    array[DATE] = toInt(input.match(match1to2)[0], 10);
});

// MOMENTS

var getSetDayOfMonth = makeGetSet('Date', true);

// FORMATTING

addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

// ALIASES

addUnitAlias('dayOfYear', 'DDD');

// PRIORITY
addUnitPriority('dayOfYear', 4);

// PARSING

addRegexToken('DDD',  match1to3);
addRegexToken('DDDD', match3);
addParseToken(['DDD', 'DDDD'], function (input, array, config) {
    config._dayOfYear = toInt(input);
});

// HELPERS

// MOMENTS

function getSetDayOfYear (input) {
    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
}

// FORMATTING

addFormatToken('m', ['mm', 2], 0, 'minute');

// ALIASES

addUnitAlias('minute', 'm');

// PRIORITY

addUnitPriority('minute', 14);

// PARSING

addRegexToken('m',  match1to2);
addRegexToken('mm', match1to2, match2);
addParseToken(['m', 'mm'], MINUTE);

// MOMENTS

var getSetMinute = makeGetSet('Minutes', false);

// FORMATTING

addFormatToken('s', ['ss', 2], 0, 'second');

// ALIASES

addUnitAlias('second', 's');

// PRIORITY

addUnitPriority('second', 15);

// PARSING

addRegexToken('s',  match1to2);
addRegexToken('ss', match1to2, match2);
addParseToken(['s', 'ss'], SECOND);

// MOMENTS

var getSetSecond = makeGetSet('Seconds', false);

// FORMATTING

addFormatToken('S', 0, 0, function () {
    return ~~(this.millisecond() / 100);
});

addFormatToken(0, ['SS', 2], 0, function () {
    return ~~(this.millisecond() / 10);
});

addFormatToken(0, ['SSS', 3], 0, 'millisecond');
addFormatToken(0, ['SSSS', 4], 0, function () {
    return this.millisecond() * 10;
});
addFormatToken(0, ['SSSSS', 5], 0, function () {
    return this.millisecond() * 100;
});
addFormatToken(0, ['SSSSSS', 6], 0, function () {
    return this.millisecond() * 1000;
});
addFormatToken(0, ['SSSSSSS', 7], 0, function () {
    return this.millisecond() * 10000;
});
addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
    return this.millisecond() * 100000;
});
addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
    return this.millisecond() * 1000000;
});


// ALIASES

addUnitAlias('millisecond', 'ms');

// PRIORITY

addUnitPriority('millisecond', 16);

// PARSING

addRegexToken('S',    match1to3, match1);
addRegexToken('SS',   match1to3, match2);
addRegexToken('SSS',  match1to3, match3);

var token;
for (token = 'SSSS'; token.length <= 9; token += 'S') {
    addRegexToken(token, matchUnsigned);
}

function parseMs(input, array) {
    array[MILLISECOND] = toInt(('0.' + input) * 1000);
}

for (token = 'S'; token.length <= 9; token += 'S') {
    addParseToken(token, parseMs);
}
// MOMENTS

var getSetMillisecond = makeGetSet('Milliseconds', false);

// FORMATTING

addFormatToken('z',  0, 0, 'zoneAbbr');
addFormatToken('zz', 0, 0, 'zoneName');

// MOMENTS

function getZoneAbbr () {
    return this._isUTC ? 'UTC' : '';
}

function getZoneName () {
    return this._isUTC ? 'Coordinated Universal Time' : '';
}

var proto = Moment.prototype;

proto.add               = add;
proto.calendar          = calendar$1;
proto.clone             = clone;
proto.diff              = diff;
proto.endOf             = endOf;
proto.format            = format;
proto.from              = from;
proto.fromNow           = fromNow;
proto.to                = to;
proto.toNow             = toNow;
proto.get               = stringGet;
proto.invalidAt         = invalidAt;
proto.isAfter           = isAfter;
proto.isBefore          = isBefore;
proto.isBetween         = isBetween;
proto.isSame            = isSame;
proto.isSameOrAfter     = isSameOrAfter;
proto.isSameOrBefore    = isSameOrBefore;
proto.isValid           = isValid$1;
proto.lang              = lang;
proto.locale            = locale;
proto.localeData        = localeData;
proto.max               = prototypeMax;
proto.min               = prototypeMin;
proto.parsingFlags      = parsingFlags;
proto.set               = stringSet;
proto.startOf           = startOf;
proto.subtract          = subtract;
proto.toArray           = toArray;
proto.toObject          = toObject;
proto.toDate            = toDate;
proto.toISOString       = toISOString;
proto.inspect           = inspect;
proto.toJSON            = toJSON;
proto.toString          = toString;
proto.unix              = unix;
proto.valueOf           = valueOf;
proto.creationData      = creationData;

// Year
proto.year       = getSetYear;
proto.isLeapYear = getIsLeapYear;

// Week Year
proto.weekYear    = getSetWeekYear;
proto.isoWeekYear = getSetISOWeekYear;

// Quarter
proto.quarter = proto.quarters = getSetQuarter;

// Month
proto.month       = getSetMonth;
proto.daysInMonth = getDaysInMonth;

// Week
proto.week           = proto.weeks        = getSetWeek;
proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
proto.weeksInYear    = getWeeksInYear;
proto.isoWeeksInYear = getISOWeeksInYear;

// Day
proto.date       = getSetDayOfMonth;
proto.day        = proto.days             = getSetDayOfWeek;
proto.weekday    = getSetLocaleDayOfWeek;
proto.isoWeekday = getSetISODayOfWeek;
proto.dayOfYear  = getSetDayOfYear;

// Hour
proto.hour = proto.hours = getSetHour;

// Minute
proto.minute = proto.minutes = getSetMinute;

// Second
proto.second = proto.seconds = getSetSecond;

// Millisecond
proto.millisecond = proto.milliseconds = getSetMillisecond;

// Offset
proto.utcOffset            = getSetOffset;
proto.utc                  = setOffsetToUTC;
proto.local                = setOffsetToLocal;
proto.parseZone            = setOffsetToParsedOffset;
proto.hasAlignedHourOffset = hasAlignedHourOffset;
proto.isDST                = isDaylightSavingTime;
proto.isLocal              = isLocal;
proto.isUtcOffset          = isUtcOffset;
proto.isUtc                = isUtc;
proto.isUTC                = isUtc;

// Timezone
proto.zoneAbbr = getZoneAbbr;
proto.zoneName = getZoneName;

// Deprecations
proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

function createUnix (input) {
    return createLocal(input * 1000);
}

function createInZone () {
    return createLocal.apply(null, arguments).parseZone();
}

function preParsePostFormat (string) {
    return string;
}

var proto$1 = Locale.prototype;

proto$1.calendar        = calendar;
proto$1.longDateFormat  = longDateFormat;
proto$1.invalidDate     = invalidDate;
proto$1.ordinal         = ordinal;
proto$1.preparse        = preParsePostFormat;
proto$1.postformat      = preParsePostFormat;
proto$1.relativeTime    = relativeTime;
proto$1.pastFuture      = pastFuture;
proto$1.set             = set;

// Month
proto$1.months            =        localeMonths;
proto$1.monthsShort       =        localeMonthsShort;
proto$1.monthsParse       =        localeMonthsParse;
proto$1.monthsRegex       = monthsRegex;
proto$1.monthsShortRegex  = monthsShortRegex;

// Week
proto$1.week = localeWeek;
proto$1.firstDayOfYear = localeFirstDayOfYear;
proto$1.firstDayOfWeek = localeFirstDayOfWeek;

// Day of Week
proto$1.weekdays       =        localeWeekdays;
proto$1.weekdaysMin    =        localeWeekdaysMin;
proto$1.weekdaysShort  =        localeWeekdaysShort;
proto$1.weekdaysParse  =        localeWeekdaysParse;

proto$1.weekdaysRegex       =        weekdaysRegex;
proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
proto$1.weekdaysMinRegex    =        weekdaysMinRegex;

// Hours
proto$1.isPM = localeIsPM;
proto$1.meridiem = localeMeridiem;

function get$1 (format, index, field, setter) {
    var locale = getLocale();
    var utc = createUTC().set(setter, index);
    return locale[field](utc, format);
}

function listMonthsImpl (format, index, field) {
    if (isNumber(format)) {
        index = format;
        format = undefined;
    }

    format = format || '';

    if (index != null) {
        return get$1(format, index, field, 'month');
    }

    var i;
    var out = [];
    for (i = 0; i < 12; i++) {
        out[i] = get$1(format, i, field, 'month');
    }
    return out;
}

// ()
// (5)
// (fmt, 5)
// (fmt)
// (true)
// (true, 5)
// (true, fmt, 5)
// (true, fmt)
function listWeekdaysImpl (localeSorted, format, index, field) {
    if (typeof localeSorted === 'boolean') {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';
    } else {
        format = localeSorted;
        index = format;
        localeSorted = false;

        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';
    }

    var locale = getLocale(),
        shift = localeSorted ? locale._week.dow : 0;

    if (index != null) {
        return get$1(format, (index + shift) % 7, field, 'day');
    }

    var i;
    var out = [];
    for (i = 0; i < 7; i++) {
        out[i] = get$1(format, (i + shift) % 7, field, 'day');
    }
    return out;
}

function listMonths (format, index) {
    return listMonthsImpl(format, index, 'months');
}

function listMonthsShort (format, index) {
    return listMonthsImpl(format, index, 'monthsShort');
}

function listWeekdays (localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
}

function listWeekdaysShort (localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
}

function listWeekdaysMin (localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
}

getSetGlobalLocale('en', {
    ordinalParse: /\d{1,2}(th|st|nd|rd)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (toInt(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    }
});

// Side effect imports
hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

var mathAbs = Math.abs;

function abs () {
    var data           = this._data;

    this._milliseconds = mathAbs(this._milliseconds);
    this._days         = mathAbs(this._days);
    this._months       = mathAbs(this._months);

    data.milliseconds  = mathAbs(data.milliseconds);
    data.seconds       = mathAbs(data.seconds);
    data.minutes       = mathAbs(data.minutes);
    data.hours         = mathAbs(data.hours);
    data.months        = mathAbs(data.months);
    data.years         = mathAbs(data.years);

    return this;
}

function addSubtract$1 (duration, input, value, direction) {
    var other = createDuration(input, value);

    duration._milliseconds += direction * other._milliseconds;
    duration._days         += direction * other._days;
    duration._months       += direction * other._months;

    return duration._bubble();
}

// supports only 2.0-style add(1, 's') or add(duration)
function add$1 (input, value) {
    return addSubtract$1(this, input, value, 1);
}

// supports only 2.0-style subtract(1, 's') or subtract(duration)
function subtract$1 (input, value) {
    return addSubtract$1(this, input, value, -1);
}

function absCeil (number) {
    if (number < 0) {
        return Math.floor(number);
    } else {
        return Math.ceil(number);
    }
}

function bubble () {
    var milliseconds = this._milliseconds;
    var days         = this._days;
    var months       = this._months;
    var data         = this._data;
    var seconds, minutes, hours, years, monthsFromDays;

    // if we have a mix of positive and negative values, bubble down first
    // check: https://github.com/moment/moment/issues/2166
    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
            (milliseconds <= 0 && days <= 0 && months <= 0))) {
        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
        days = 0;
        months = 0;
    }

    // The following code bubbles up values, see the tests for
    // examples of what that means.
    data.milliseconds = milliseconds % 1000;

    seconds           = absFloor(milliseconds / 1000);
    data.seconds      = seconds % 60;

    minutes           = absFloor(seconds / 60);
    data.minutes      = minutes % 60;

    hours             = absFloor(minutes / 60);
    data.hours        = hours % 24;

    days += absFloor(hours / 24);

    // convert days to months
    monthsFromDays = absFloor(daysToMonths(days));
    months += monthsFromDays;
    days -= absCeil(monthsToDays(monthsFromDays));

    // 12 months -> 1 year
    years = absFloor(months / 12);
    months %= 12;

    data.days   = days;
    data.months = months;
    data.years  = years;

    return this;
}

function daysToMonths (days) {
    // 400 years have 146097 days (taking into account leap year rules)
    // 400 years have 12 months === 4800
    return days * 4800 / 146097;
}

function monthsToDays (months) {
    // the reverse of daysToMonths
    return months * 146097 / 4800;
}

function as (units) {
    var days;
    var months;
    var milliseconds = this._milliseconds;

    units = normalizeUnits(units);

    if (units === 'month' || units === 'year') {
        days   = this._days   + milliseconds / 864e5;
        months = this._months + daysToMonths(days);
        return units === 'month' ? months : months / 12;
    } else {
        // handle milliseconds separately because of floating point math errors (issue #1867)
        days = this._days + Math.round(monthsToDays(this._months));
        switch (units) {
            case 'week'   : return days / 7     + milliseconds / 6048e5;
            case 'day'    : return days         + milliseconds / 864e5;
            case 'hour'   : return days * 24    + milliseconds / 36e5;
            case 'minute' : return days * 1440  + milliseconds / 6e4;
            case 'second' : return days * 86400 + milliseconds / 1000;
            // Math.floor prevents floating point math errors here
            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
            default: throw new Error('Unknown unit ' + units);
        }
    }
}

// TODO: Use this.as('ms')?
function valueOf$1 () {
    return (
        this._milliseconds +
        this._days * 864e5 +
        (this._months % 12) * 2592e6 +
        toInt(this._months / 12) * 31536e6
    );
}

function makeAs (alias) {
    return function () {
        return this.as(alias);
    };
}

var asMilliseconds = makeAs('ms');
var asSeconds      = makeAs('s');
var asMinutes      = makeAs('m');
var asHours        = makeAs('h');
var asDays         = makeAs('d');
var asWeeks        = makeAs('w');
var asMonths       = makeAs('M');
var asYears        = makeAs('y');

function get$2 (units) {
    units = normalizeUnits(units);
    return this[units + 's']();
}

function makeGetter(name) {
    return function () {
        return this._data[name];
    };
}

var milliseconds = makeGetter('milliseconds');
var seconds      = makeGetter('seconds');
var minutes      = makeGetter('minutes');
var hours        = makeGetter('hours');
var days         = makeGetter('days');
var months       = makeGetter('months');
var years        = makeGetter('years');

function weeks () {
    return absFloor(this.days() / 7);
}

var round = Math.round;
var thresholds = {
    s: 45,  // seconds to minute
    m: 45,  // minutes to hour
    h: 22,  // hours to day
    d: 26,  // days to month
    M: 11   // months to year
};

// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
}

function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
    var duration = createDuration(posNegDuration).abs();
    var seconds  = round(duration.as('s'));
    var minutes  = round(duration.as('m'));
    var hours    = round(duration.as('h'));
    var days     = round(duration.as('d'));
    var months   = round(duration.as('M'));
    var years    = round(duration.as('y'));

    var a = seconds < thresholds.s && ['s', seconds]  ||
            minutes <= 1           && ['m']           ||
            minutes < thresholds.m && ['mm', minutes] ||
            hours   <= 1           && ['h']           ||
            hours   < thresholds.h && ['hh', hours]   ||
            days    <= 1           && ['d']           ||
            days    < thresholds.d && ['dd', days]    ||
            months  <= 1           && ['M']           ||
            months  < thresholds.M && ['MM', months]  ||
            years   <= 1           && ['y']           || ['yy', years];

    a[2] = withoutSuffix;
    a[3] = +posNegDuration > 0;
    a[4] = locale;
    return substituteTimeAgo.apply(null, a);
}

// This function allows you to set the rounding function for relative time strings
function getSetRelativeTimeRounding (roundingFunction) {
    if (roundingFunction === undefined) {
        return round;
    }
    if (typeof(roundingFunction) === 'function') {
        round = roundingFunction;
        return true;
    }
    return false;
}

// This function allows you to set a threshold for relative time strings
function getSetRelativeTimeThreshold (threshold, limit) {
    if (thresholds[threshold] === undefined) {
        return false;
    }
    if (limit === undefined) {
        return thresholds[threshold];
    }
    thresholds[threshold] = limit;
    return true;
}

function humanize (withSuffix) {
    var locale = this.localeData();
    var output = relativeTime$1(this, !withSuffix, locale);

    if (withSuffix) {
        output = locale.pastFuture(+this, output);
    }

    return locale.postformat(output);
}

var abs$1 = Math.abs;

function toISOString$1() {
    // for ISO strings we do not use the normal bubbling rules:
    //  * milliseconds bubble up until they become hours
    //  * days do not bubble at all
    //  * months bubble up until they become years
    // This is because there is no context-free conversion between hours and days
    // (think of clock changes)
    // and also not between days and months (28-31 days per month)
    var seconds = abs$1(this._milliseconds) / 1000;
    var days         = abs$1(this._days);
    var months       = abs$1(this._months);
    var minutes, hours, years;

    // 3600 seconds -> 60 minutes -> 1 hour
    minutes           = absFloor(seconds / 60);
    hours             = absFloor(minutes / 60);
    seconds %= 60;
    minutes %= 60;

    // 12 months -> 1 year
    years  = absFloor(months / 12);
    months %= 12;


    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
    var Y = years;
    var M = months;
    var D = days;
    var h = hours;
    var m = minutes;
    var s = seconds;
    var total = this.asSeconds();

    if (!total) {
        // this is the same as C#'s (Noda) and python (isodate)...
        // but not other JS (goog.date)
        return 'P0D';
    }

    return (total < 0 ? '-' : '') +
        'P' +
        (Y ? Y + 'Y' : '') +
        (M ? M + 'M' : '') +
        (D ? D + 'D' : '') +
        ((h || m || s) ? 'T' : '') +
        (h ? h + 'H' : '') +
        (m ? m + 'M' : '') +
        (s ? s + 'S' : '');
}

var proto$2 = Duration.prototype;

proto$2.abs            = abs;
proto$2.add            = add$1;
proto$2.subtract       = subtract$1;
proto$2.as             = as;
proto$2.asMilliseconds = asMilliseconds;
proto$2.asSeconds      = asSeconds;
proto$2.asMinutes      = asMinutes;
proto$2.asHours        = asHours;
proto$2.asDays         = asDays;
proto$2.asWeeks        = asWeeks;
proto$2.asMonths       = asMonths;
proto$2.asYears        = asYears;
proto$2.valueOf        = valueOf$1;
proto$2._bubble        = bubble;
proto$2.get            = get$2;
proto$2.milliseconds   = milliseconds;
proto$2.seconds        = seconds;
proto$2.minutes        = minutes;
proto$2.hours          = hours;
proto$2.days           = days;
proto$2.weeks          = weeks;
proto$2.months         = months;
proto$2.years          = years;
proto$2.humanize       = humanize;
proto$2.toISOString    = toISOString$1;
proto$2.toString       = toISOString$1;
proto$2.toJSON         = toISOString$1;
proto$2.locale         = locale;
proto$2.localeData     = localeData;

// Deprecations
proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
proto$2.lang = lang;

// Side effect imports

// FORMATTING

addFormatToken('X', 0, 0, 'unix');
addFormatToken('x', 0, 0, 'valueOf');

// PARSING

addRegexToken('x', matchSigned);
addRegexToken('X', matchTimestamp);
addParseToken('X', function (input, array, config) {
    config._d = new Date(parseFloat(input, 10) * 1000);
});
addParseToken('x', function (input, array, config) {
    config._d = new Date(toInt(input));
});

// Side effect imports


hooks.version = '2.17.1';

setHookCallback(createLocal);

hooks.fn                    = proto;
hooks.min                   = min;
hooks.max                   = max;
hooks.now                   = now;
hooks.utc                   = createUTC;
hooks.unix                  = createUnix;
hooks.months                = listMonths;
hooks.isDate                = isDate;
hooks.locale                = getSetGlobalLocale;
hooks.invalid               = createInvalid;
hooks.duration              = createDuration;
hooks.isMoment              = isMoment;
hooks.weekdays              = listWeekdays;
hooks.parseZone             = createInZone;
hooks.localeData            = getLocale;
hooks.isDuration            = isDuration;
hooks.monthsShort           = listMonthsShort;
hooks.weekdaysMin           = listWeekdaysMin;
hooks.defineLocale          = defineLocale;
hooks.updateLocale          = updateLocale;
hooks.locales               = listLocales;
hooks.weekdaysShort         = listWeekdaysShort;
hooks.normalizeUnits        = normalizeUnits;
hooks.relativeTimeRounding = getSetRelativeTimeRounding;
hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
hooks.calendarFormat        = getCalendarFormat;
hooks.prototype             = proto;

return hooks;

})));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1221)(module)))

/***/ },
/* 669 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(377);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__session_manager_service__ = __webpack_require__(691);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lite_app_api__ = __webpack_require__(670);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return HttpClientService; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var HttpClientService = (function () {
    function HttpClientService(http, sessionManager) {
        var _this = this;
        this.http = http;
        this.sessionManager = sessionManager;
        this.headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]({
            'Content-Type': 'application/json'
        });
        this.sessionManager.session$.subscribe(function (authState) {
            if (authState.authorized) {
                _this.currentToken = authState.token;
                _this.headers.set('x-auth-token', authState.token);
            }
            else {
                _this.currentToken = null;
                _this.headers.delete('x-auth-token');
            }
        });
    }
    HttpClientService.prototype.requestLogin = function (username, password) {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]({
            'Content-Type': 'application/json'
        });
        return this.http.post(__WEBPACK_IMPORTED_MODULE_3__lite_app_api__["a" /* LiteAppAPI */].AUTH_ENDPOINT, JSON.stringify({ username: username, password: password }), { headers: headers });
    };
    HttpClientService.prototype.requestRegister = function (email, password, name, businessName) {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]({
            'Content-Type': 'application/json'
        });
        return this.http.post(__WEBPACK_IMPORTED_MODULE_3__lite_app_api__["a" /* LiteAppAPI */].REGISTER_ENDPOINT, JSON.stringify({ email: email, password: password, name: name, businessName: businessName }), { headers: headers });
    };
    HttpClientService.prototype.requestVerification = function (token) {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]({
            'Content-Type': 'application/json'
        });
        return this.http.post(__WEBPACK_IMPORTED_MODULE_3__lite_app_api__["a" /* LiteAppAPI */].VERIFICATION_ENDPOINT + ("/" + token), null, { headers: headers });
    };
    HttpClientService.prototype.post = function (url, data) {
        return this.http.post(url, JSON.stringify(data), { headers: this.headers });
    };
    HttpClientService.prototype.postMultipart = function (url, data) {
        var multipartHeaders = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]({});
        if (this.currentToken) {
            multipartHeaders.append('x-auth-token', this.currentToken);
        }
        return this.http.post(url, data, { headers: multipartHeaders });
    };
    HttpClientService.prototype.get = function (url) {
        return this.http.get(url, { headers: this.headers });
    };
    HttpClientService.prototype.put = function (url, data) {
        return this.http.put(url, JSON.stringify(data), { headers: this.headers });
    };
    HttpClientService.prototype.delete = function (url) {
        return this.http.delete(url, { headers: this.headers });
    };
    HttpClientService = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__session_manager_service__["a" /* SessionManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__session_manager_service__["a" /* SessionManagerService */]) === 'function' && _b) || Object])
    ], HttpClientService);
    return HttpClientService;
    var _a, _b;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/http-client.service.js.map

/***/ },
/* 670 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__environments_environment__ = __webpack_require__(378);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return LiteAppAPI; });

/**
 * List all the API endpoints, to be used by the services.
 */
var LiteAppAPI = (function () {
    function LiteAppAPI() {
    }
    Object.defineProperty(LiteAppAPI, "API_BASE_LOCAL", {
        get: function () { return 'http://localhost:8080'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LiteAppAPI, "API_BASE", {
        get: function () {
            return __WEBPACK_IMPORTED_MODULE_0__environments_environment__["a" /* environment */].local ? LiteAppAPI.API_BASE_LOCAL : 'https://legapi.littlevista.net';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LiteAppAPI, "PARENT_APP_BASE", {
        get: function () { return LiteAppAPI.API_BASE + '/lite'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LiteAppAPI, "AUTH_ENDPOINT", {
        get: function () { return LiteAppAPI.API_BASE + '/auth'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LiteAppAPI, "REGISTER_ENDPOINT", {
        get: function () { return LiteAppAPI.API_BASE + '/register'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LiteAppAPI, "VERIFICATION_ENDPOINT", {
        get: function () { return LiteAppAPI.API_BASE + '/register/confirm'; },
        enumerable: true,
        configurable: true
    });
    LiteAppAPI.UPDATE_SUBVENTION = function (id) { return LiteAppAPI.PARENT_APP_BASE + '/subvention/child/' + id; };
    Object.defineProperty(LiteAppAPI, "ECCE_CHILDREN_ENDPOINT", {
        get: function () { return LiteAppAPI.PARENT_APP_BASE + '/ecce/children/'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LiteAppAPI, "UPDATE_ECCE_STATUS_ENDPOINT", {
        get: function () { return LiteAppAPI.PARENT_APP_BASE + '/ecce/status/'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LiteAppAPI, "UPDATE_ECCE_DAYS_ENDPOINT", {
        get: function () { return LiteAppAPI.PARENT_APP_BASE + '/ecce/days/'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LiteAppAPI, "UPDATE_ECCE_START_ENDPOINT", {
        get: function () { return LiteAppAPI.PARENT_APP_BASE + '/ecce/start/'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LiteAppAPI, "UPDATE_ECCE_EXTRAS_ENDPOINT", {
        get: function () { return LiteAppAPI.PARENT_APP_BASE + '/ecce/extras/'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LiteAppAPI, "ECCE_ATTENDANCE_ENDPOINT", {
        get: function () { return LiteAppAPI.PARENT_APP_BASE + '/ecce/attendance/'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LiteAppAPI, "IMAGE_ENDPOINT", {
        get: function () { return 'https://littlevista.net/app/image'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LiteAppAPI, "FACILITY_ENDPOINT", {
        get: function () { return LiteAppAPI.PARENT_APP_BASE; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LiteAppAPI, "FACILITY_PROFILE_ENDPOINT", {
        get: function () { return LiteAppAPI.PARENT_APP_BASE + '/centre'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LiteAppAPI, "ROOMS_ENDPOINT", {
        get: function () { return LiteAppAPI.PARENT_APP_BASE + '/rooms'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LiteAppAPI, "CHILDREN_ENDPOINT", {
        get: function () { return LiteAppAPI.PARENT_APP_BASE + '/children'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LiteAppAPI, "FAMILY_ENDPOINT", {
        get: function () { return LiteAppAPI.PARENT_APP_BASE + '/family'; },
        enumerable: true,
        configurable: true
    });
    LiteAppAPI.ATTENDANCE_CHECK = function (id) { return LiteAppAPI.PARENT_APP_BASE + '/attendance/' + id; };
    Object.defineProperty(LiteAppAPI, "ATTENDANCE_REPORT", {
        get: function () { return LiteAppAPI.PARENT_APP_BASE + '/attendance/report'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LiteAppAPI, "MERCHANT_SIGNUP", {
        get: function () { return LiteAppAPI.PARENT_APP_BASE + '/payments/merchant/signup'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LiteAppAPI, "MERCHANT_FORM", {
        get: function () { return LiteAppAPI.MERCHANT_SIGNUP + '/form'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LiteAppAPI, "MERCHANT_STATUS", {
        get: function () { return LiteAppAPI.MERCHANT_SIGNUP + '/status'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LiteAppAPI, "MERCHANT_CURRENCY", {
        get: function () { return LiteAppAPI.PARENT_APP_BASE + '/payments/config/currencies'; },
        enumerable: true,
        configurable: true
    });
    return LiteAppAPI;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/lite-app-api.js.map

/***/ },
/* 671 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(371);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_angular2_mdl__ = __webpack_require__(693);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular2_mdl_ext_select__ = __webpack_require__(805);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__http_client_service__ = __webpack_require__(669);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__session_manager_service__ = __webpack_require__(691);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__profile_manager_service__ = __webpack_require__(679);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__children_manager_service__ = __webpack_require__(684);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__rooms_manager_service__ = __webpack_require__(674);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__reports_manager_service__ = __webpack_require__(701);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_angular2_cookie_core__ = __webpack_require__(752);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_angular2_cookie_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_angular2_cookie_core__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__components_navbar___ = __webpack_require__(845);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__components_navbar_small___ = __webpack_require__(843);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__components_modal___ = __webpack_require__(840);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__components_searchbar___ = __webpack_require__(847);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__components_confirm_dialog___ = __webpack_require__(837);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__components_datepicker_datepicker_component__ = __webpack_require__(838);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__components_flex_card_flex_card_component__ = __webpack_require__(839);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return SharedModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




















var sharedProviders = [
    __WEBPACK_IMPORTED_MODULE_6__http_client_service__["a" /* HttpClientService */],
    __WEBPACK_IMPORTED_MODULE_7__session_manager_service__["a" /* SessionManagerService */],
    __WEBPACK_IMPORTED_MODULE_8__profile_manager_service__["a" /* ProfileManagerService */],
    __WEBPACK_IMPORTED_MODULE_9__children_manager_service__["a" /* ChildrenManagerService */],
    __WEBPACK_IMPORTED_MODULE_10__rooms_manager_service__["a" /* RoomsManagerService */],
    __WEBPACK_IMPORTED_MODULE_11__reports_manager_service__["a" /* ReportsManagerService */],
    __WEBPACK_IMPORTED_MODULE_12_angular2_cookie_core__["CookieService"]
];
var sharedComponents = [
    __WEBPACK_IMPORTED_MODULE_13__components_navbar___["a" /* NavbarComponent */],
    __WEBPACK_IMPORTED_MODULE_14__components_navbar_small___["a" /* NavbarSmallComponent */],
    __WEBPACK_IMPORTED_MODULE_15__components_modal___["a" /* ModalComponent */],
    __WEBPACK_IMPORTED_MODULE_16__components_searchbar___["a" /* SearchbarComponent */],
    __WEBPACK_IMPORTED_MODULE_17__components_confirm_dialog___["a" /* ConfirmDialogComponent */],
    __WEBPACK_IMPORTED_MODULE_18__components_datepicker_datepicker_component__["a" /* DatepickerComponent */],
    __WEBPACK_IMPORTED_MODULE_19__components_flex_card_flex_card_component__["a" /* FlexCardComponent */]
];
var SharedModule = (function () {
    function SharedModule() {
    }
    SharedModule = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [
                __WEBPACK_IMPORTED_MODULE_1__angular_common__["CommonModule"],
                __WEBPACK_IMPORTED_MODULE_4_angular2_mdl__["MdlModule"],
                __WEBPACK_IMPORTED_MODULE_2__angular_forms__["b" /* FormsModule */],
                __WEBPACK_IMPORTED_MODULE_3__angular_router__["b" /* RouterModule */],
                __WEBPACK_IMPORTED_MODULE_2__angular_forms__["e" /* ReactiveFormsModule */]
            ],
            declarations: sharedComponents.slice(),
            exports: [
                __WEBPACK_IMPORTED_MODULE_1__angular_common__["CommonModule"],
                __WEBPACK_IMPORTED_MODULE_4_angular2_mdl__["MdlModule"],
                __WEBPACK_IMPORTED_MODULE_5__angular2_mdl_ext_select__["a" /* MdlSelectModule */],
                __WEBPACK_IMPORTED_MODULE_2__angular_forms__["b" /* FormsModule */],
                __WEBPACK_IMPORTED_MODULE_2__angular_forms__["e" /* ReactiveFormsModule */]
            ].concat(sharedComponents),
            providers: sharedProviders.slice()
        }), 
        __metadata('design:paramtypes', [])
    ], SharedModule);
    return SharedModule;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/shared.module.js.map

/***/ },
/* 672 */
/***/ function(module, exports) {

module.exports = ".flex {\n  width: 100%;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex; }\n\n.column {\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column; }\n\n.panel {\n  border-radius: 5px; }\n\n.flex1 {\n  -webkit-box-flex: 1;\n      -ms-flex: 1;\n          flex: 1; }\n\n.flex2 {\n  -webkit-box-flex: 2;\n      -ms-flex: 2;\n          flex: 2; }\n\n.flex3 {\n  -webkit-box-flex: 3;\n      -ms-flex: 3;\n          flex: 3; }\n\n.flex4 {\n  -webkit-box-flex: 4;\n      -ms-flex: 4;\n          flex: 4; }\n\n.flex5 {\n  -webkit-box-flex: 5;\n      -ms-flex: 5;\n          flex: 5; }\n\n.flex6 {\n  -webkit-box-flex: 6;\n      -ms-flex: 6;\n          flex: 6; }\n\n.flex7 {\n  -webkit-box-flex: 7;\n      -ms-flex: 7;\n          flex: 7; }\n\n.flex8 {\n  -webkit-box-flex: 8;\n      -ms-flex: 8;\n          flex: 8; }\n\n.justify-content-start {\n  -webkit-box-pack: start;\n      -ms-flex-pack: start;\n          justify-content: flex-start; }\n\n.justify-content-end {\n  -webkit-box-pack: end;\n      -ms-flex-pack: end;\n          justify-content: flex-end; }\n\n.justify-content-center {\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center; }\n\n.justify-content-between {\n  -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n          justify-content: space-between; }\n\n.justify-content-around {\n  -ms-flex-pack: distribute;\n      justify-content: space-around; }\n\n.align-items-start {\n  -webkit-box-align: start;\n      -ms-flex-align: start;\n          align-items: flex-start; }\n\n.align-items-end {\n  -webkit-box-align: end;\n      -ms-flex-align: end;\n          align-items: flex-end; }\n\n.align-items-center {\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center; }\n\n.align-items-stretch {\n  -webkit-box-align: stretch;\n      -ms-flex-align: stretch;\n          align-items: stretch; }\n\n.align-items-baseline {\n  -webkit-box-align: baseline;\n      -ms-flex-align: baseline;\n          align-items: baseline; }\n\n.bottom-border {\n  border-bottom: 1px #cdcecf solid; }\n\n.top-border {\n  border-top: 1px #cdcecf solid; }\n\n.strong-text {\n  font-weight: bold;\n  color: #999; }\n\n.text-center {\n  text-align: center; }\n\n.text-right {\n  text-align: right; }\n\n.no-padding {\n  padding: 0px !important; }\n\n.padding-bottom10 {\n  padding-bottom: 10px; }\n\n.padding-bottom20 {\n  padding-bottom: 20px; }\n\n.padding-bottom30 {\n  padding-bottom: 30px; }\n\n.padding-top-bottom-5 {\n  padding: 5px 0px !important; }\n\n.padding-top-bottom-10 {\n  padding: 10px 0px !important; }\n\n.padding-top-bottom-15 {\n  padding: 15px 0px !important; }\n\n.padding-top-bottom-20 {\n  padding: 17px 0px !important; }\n\n.text-indent10 {\n  text-indent: 10px; }\n\n.text-indent20 {\n  text-indent: 20px; }\n\n.text-indent30 {\n  text-indent: 30px; }\n"

/***/ },
/* 673 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
/* tslint:disable:no-unused-variable */
// Subject imported before Observable to bypass circular dependency issue since
// Subject extends Observable and Observable references Subject in it's
// definition
var Subject_1 = __webpack_require__(64);
exports.Subject = Subject_1.Subject;
/* tslint:enable:no-unused-variable */
var Observable_1 = __webpack_require__(13);
exports.Observable = Observable_1.Observable;
// statics
/* tslint:disable:no-use-before-declare */
__webpack_require__(960);
__webpack_require__(961);
__webpack_require__(962);
__webpack_require__(963);
__webpack_require__(964);
__webpack_require__(967);
__webpack_require__(968);
__webpack_require__(969);
__webpack_require__(970);
__webpack_require__(971);
__webpack_require__(972);
__webpack_require__(973);
__webpack_require__(974);
__webpack_require__(975);
__webpack_require__(976);
__webpack_require__(981);
__webpack_require__(977);
__webpack_require__(978);
__webpack_require__(979);
__webpack_require__(980);
__webpack_require__(982);
__webpack_require__(985);
__webpack_require__(983);
__webpack_require__(984);
__webpack_require__(986);
//dom
__webpack_require__(965);
__webpack_require__(966);
//operators
__webpack_require__(989);
__webpack_require__(990);
__webpack_require__(991);
__webpack_require__(992);
__webpack_require__(993);
__webpack_require__(994);
__webpack_require__(995);
__webpack_require__(996);
__webpack_require__(997);
__webpack_require__(998);
__webpack_require__(999);
__webpack_require__(1000);
__webpack_require__(1001);
__webpack_require__(1002);
__webpack_require__(1008);
__webpack_require__(1003);
__webpack_require__(1004);
__webpack_require__(1005);
__webpack_require__(1006);
__webpack_require__(1007);
__webpack_require__(1009);
__webpack_require__(1010);
__webpack_require__(1011);
__webpack_require__(1012);
__webpack_require__(1013);
__webpack_require__(1016);
__webpack_require__(1017);
__webpack_require__(1018);
__webpack_require__(1014);
__webpack_require__(1019);
__webpack_require__(1020);
__webpack_require__(1021);
__webpack_require__(1022);
__webpack_require__(1023);
__webpack_require__(1024);
__webpack_require__(1025);
__webpack_require__(1026);
__webpack_require__(987);
__webpack_require__(988);
__webpack_require__(1027);
__webpack_require__(1028);
__webpack_require__(1015);
__webpack_require__(1029);
__webpack_require__(1030);
__webpack_require__(1031);
__webpack_require__(1032);
__webpack_require__(1033);
__webpack_require__(1034);
__webpack_require__(1035);
__webpack_require__(1036);
__webpack_require__(1037);
__webpack_require__(1038);
__webpack_require__(1039);
__webpack_require__(1040);
__webpack_require__(1041);
__webpack_require__(1042);
__webpack_require__(1043);
__webpack_require__(1044);
__webpack_require__(1045);
__webpack_require__(1046);
__webpack_require__(1048);
__webpack_require__(1047);
__webpack_require__(1049);
__webpack_require__(1050);
__webpack_require__(1051);
__webpack_require__(1052);
__webpack_require__(1053);
__webpack_require__(1054);
__webpack_require__(1055);
__webpack_require__(1056);
__webpack_require__(1057);
__webpack_require__(1058);
__webpack_require__(1059);
__webpack_require__(1060);
__webpack_require__(1061);
__webpack_require__(1062);
__webpack_require__(1063);
__webpack_require__(1064);
__webpack_require__(1065);
__webpack_require__(1066);
__webpack_require__(1067);
__webpack_require__(1068);
__webpack_require__(1069);
__webpack_require__(1070);
__webpack_require__(1071);
__webpack_require__(1072);
__webpack_require__(1073);
__webpack_require__(1074);
__webpack_require__(1075);
__webpack_require__(1076);
__webpack_require__(1077);
__webpack_require__(1078);
__webpack_require__(1079);
__webpack_require__(1080);
__webpack_require__(1081);
__webpack_require__(1082);
__webpack_require__(1083);
__webpack_require__(1084);
__webpack_require__(1085);
__webpack_require__(1086);
__webpack_require__(1087);
__webpack_require__(1088);
/* tslint:disable:no-unused-variable */
var Subscription_1 = __webpack_require__(145);
exports.Subscription = Subscription_1.Subscription;
var Subscriber_1 = __webpack_require__(24);
exports.Subscriber = Subscriber_1.Subscriber;
var AsyncSubject_1 = __webpack_require__(697);
exports.AsyncSubject = AsyncSubject_1.AsyncSubject;
var ReplaySubject_1 = __webpack_require__(698);
exports.ReplaySubject = ReplaySubject_1.ReplaySubject;
var BehaviorSubject_1 = __webpack_require__(148);
exports.BehaviorSubject = BehaviorSubject_1.BehaviorSubject;
var MulticastObservable_1 = __webpack_require__(785);
exports.MulticastObservable = MulticastObservable_1.MulticastObservable;
var ConnectableObservable_1 = __webpack_require__(719);
exports.ConnectableObservable = ConnectableObservable_1.ConnectableObservable;
var Notification_1 = __webpack_require__(373);
exports.Notification = Notification_1.Notification;
var EmptyError_1 = __webpack_require__(150);
exports.EmptyError = EmptyError_1.EmptyError;
var ArgumentOutOfRangeError_1 = __webpack_require__(699);
exports.ArgumentOutOfRangeError = ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
var ObjectUnsubscribedError_1 = __webpack_require__(240);
exports.ObjectUnsubscribedError = ObjectUnsubscribedError_1.ObjectUnsubscribedError;
var UnsubscriptionError_1 = __webpack_require__(382);
exports.UnsubscriptionError = UnsubscriptionError_1.UnsubscriptionError;
var timeInterval_1 = __webpack_require__(794);
exports.TimeInterval = timeInterval_1.TimeInterval;
var timestamp_1 = __webpack_require__(795);
exports.Timestamp = timestamp_1.Timestamp;
var TestScheduler_1 = __webpack_require__(1213);
exports.TestScheduler = TestScheduler_1.TestScheduler;
var VirtualTimeScheduler_1 = __webpack_require__(796);
exports.VirtualTimeScheduler = VirtualTimeScheduler_1.VirtualTimeScheduler;
var AjaxObservable_1 = __webpack_require__(786);
exports.AjaxResponse = AjaxObservable_1.AjaxResponse;
exports.AjaxError = AjaxObservable_1.AjaxError;
exports.AjaxTimeoutError = AjaxObservable_1.AjaxTimeoutError;
var asap_1 = __webpack_require__(797);
var async_1 = __webpack_require__(666);
var queue_1 = __webpack_require__(798);
var animationFrame_1 = __webpack_require__(1210);
var rxSubscriber_1 = __webpack_require__(154);
var iterator_1 = __webpack_require__(149);
var observable_1 = __webpack_require__(153);
/* tslint:enable:no-unused-variable */
/**
 * @typedef {Object} Rx.Scheduler
 * @property {Scheduler} queue Schedules on a queue in the current event frame
 * (trampoline scheduler). Use this for iteration operations.
 * @property {Scheduler} asap Schedules on the micro task queue, which uses the
 * fastest transport mechanism available, either Node.js' `process.nextTick()`
 * or Web Worker MessageChannel or setTimeout or others. Use this for
 * asynchronous conversions.
 * @property {Scheduler} async Schedules work with `setInterval`. Use this for
 * time-based operations.
 * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.
 * Use this for synchronizing with the platform's painting
 */
var Scheduler = {
    asap: asap_1.asap,
    queue: queue_1.queue,
    animationFrame: animationFrame_1.animationFrame,
    async: async_1.async
};
exports.Scheduler = Scheduler;
/**
 * @typedef {Object} Rx.Symbol
 * @property {Symbol|string} rxSubscriber A symbol to use as a property name to
 * retrieve an "Rx safe" Observer from an object. "Rx safety" can be defined as
 * an object that has all of the traits of an Rx Subscriber, including the
 * ability to add and remove subscriptions to the subscription chain and
 * guarantees involving event triggering (can't "next" after unsubscription,
 * etc).
 * @property {Symbol|string} observable A symbol to use as a property name to
 * retrieve an Observable as defined by the [ECMAScript "Observable" spec](https://github.com/zenparsing/es-observable).
 * @property {Symbol|string} iterator The ES6 symbol to use as a property name
 * to retrieve an iterator from an object.
 */
var Symbol = {
    rxSubscriber: rxSubscriber_1.$$rxSubscriber,
    observable: observable_1.$$observable,
    iterator: iterator_1.$$iterator
};
exports.Symbol = Symbol;
//# sourceMappingURL=Rx.js.map

/***/ },
/* 674 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs__ = __webpack_require__(673);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__http_client_service__ = __webpack_require__(669);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lite_app_api__ = __webpack_require__(670);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return RoomsManagerService; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var AGES_FROM = ['0', '12 months', '18 months', '2 years', '3 years', '4 years', '5 years'];
var AGES_TO = ['12 months', '18 months', '2 years', '3 years', '4 years', '5 years', '6 years'];
var RoomsManagerService = (function () {
    function RoomsManagerService(http) {
        var _this = this;
        this.http = http;
        this.rooms = [];
        this.store = new __WEBPACK_IMPORTED_MODULE_1_rxjs__["BehaviorSubject"]([]);
        this.loadRooms().map(function (res) { return res.json(); }).subscribe(function (rooms) {
            _this.rooms = rooms;
            _this.store.next(_this.rooms);
        }, function (error) {
            console.error('Error loading rooms', error);
        });
    }
    Object.defineProperty(RoomsManagerService.prototype, "store$", {
        get: function () {
            return this.store.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    RoomsManagerService.prototype.getRoomById = function (id) {
        return this.rooms.find(function (room) { return room.id === id; });
    };
    RoomsManagerService.prototype.getAll = function () {
        return this.rooms;
    };
    RoomsManagerService.prototype.removeRoom = function (room) {
        var _this = this;
        this.http.delete(__WEBPACK_IMPORTED_MODULE_3__lite_app_api__["a" /* LiteAppAPI */].ROOMS_ENDPOINT + '/' + room.id).subscribe(function (res) {
            var index = _this.rooms.findIndex(function (_room) { return _room.id === room.id; });
            if (index !== -1) {
                _this.rooms.splice(index, 1);
                _this.store.next(_this.rooms);
            }
            else {
                console.error('Room was not found');
            }
        }, function (err) {
            console.log("Error Deleting Room " + room.name + " " + err);
        });
        return this.rooms;
    };
    RoomsManagerService.prototype.addRoom = function (room) {
        var _this = this;
        return this.http.post(__WEBPACK_IMPORTED_MODULE_3__lite_app_api__["a" /* LiteAppAPI */].ROOMS_ENDPOINT, room).flatMap(function (res) {
            _this.rooms.push(res.json());
            _this.store.next(_this.rooms);
            return _this.rooms;
        });
    };
    RoomsManagerService.prototype.updateRoom = function (room) {
        var _this = this;
        return this.http.put(__WEBPACK_IMPORTED_MODULE_3__lite_app_api__["a" /* LiteAppAPI */].ROOMS_ENDPOINT + ("/" + room.id), room).flatMap(function (res) {
            _this.rooms = _this.rooms.map(function (_room) {
                if (_room.id === res.json().id) {
                    return res.json();
                }
                else {
                    return _room;
                }
            });
            _this.store.next(_this.rooms);
            return _this.rooms;
        });
    };
    RoomsManagerService.prototype.loadRooms = function () {
        return this.http.get(__WEBPACK_IMPORTED_MODULE_3__lite_app_api__["a" /* LiteAppAPI */].ROOMS_ENDPOINT);
    };
    Object.defineProperty(RoomsManagerService.prototype, "AGES_FROM", {
        get: function () {
            return AGES_FROM.slice();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RoomsManagerService.prototype, "AGES_TO", {
        get: function () {
            return AGES_TO.slice();
        },
        enumerable: true,
        configurable: true
    });
    RoomsManagerService = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__http_client_service__["a" /* HttpClientService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__http_client_service__["a" /* HttpClientService */]) === 'function' && _a) || Object])
    ], RoomsManagerService);
    return RoomsManagerService;
    var _a;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/rooms-manager.service.js.map

/***/ },
/* 675 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlError; });
/* harmony export (binding) */ __webpack_require__.d(exports, "b", function() { return MdlStructureError; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * Wrapper for mdl error messages.
 */
var MdlError = (function (_super) {
    __extends(MdlError, _super);
    function MdlError(value) {
        _super.call(this);
        _super.prototype.message = value;
    }
    return MdlError;
}(Error));
var MdlStructureError = (function (_super) {
    __extends(MdlStructureError, _super);
    function MdlStructureError(child, requiredParent) {
        _super.call(this, "\"" + child + "\" requires \"" + requiredParent + "\" as a parent.");
    }
    return MdlStructureError;
}(MdlError));
//# sourceMappingURL=mdl-error.js.map

/***/ },
/* 676 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return numberProperty; });
function numberProperty() {
    return function numberFieldValueMetadata(target, key) {
        var defaultValue = target[key];
        var localKey = "__mdl_private_symbol_" + key;
        target[localKey] = defaultValue;
        Object.defineProperty(target, key, {
            get: function () { return this[localKey]; },
            set: function (value) {
                if (typeof value === 'undefined') {
                    value = null;
                }
                else if (typeof value === 'string') {
                    value = parseInt(value);
                }
                this[localKey] = value;
            }
        });
    };
}

//# sourceMappingURL=number.property.js.map

/***/ },
/* 677 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__ = __webpack_require__(102);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_Subject__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_Subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_Subject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mdl_simple_dialog_component__ = __webpack_require__(709);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mdl_dialog_host_component__ = __webpack_require__(708);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__internal_dialog_reference__ = __webpack_require__(760);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__dialog_outlet_mdl_dialog_outlet_service__ = __webpack_require__(688);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MDL_CONFIGUARTION; });
/* harmony export (binding) */ __webpack_require__.d(exports, "c", function() { return MIN_DIALOG_Z_INDEX; });
/* harmony export (binding) */ __webpack_require__.d(exports, "b", function() { return MdlDialogReference; });
/* harmony export (binding) */ __webpack_require__.d(exports, "d", function() { return MdlDialogService; });







var MDL_CONFIGUARTION = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["OpaqueToken"]('MDL_CONFIGUARTION');
var MIN_DIALOG_Z_INDEX = 100000;
/**
 * The reference to the created and displayed dialog.
 */
var MdlDialogReference = (function () {
    function MdlDialogReference(internaleRef) {
        this.internaleRef = internaleRef;
        internaleRef.dialogRef = this;
    }
    /**
     * closes the dialog
     */
    MdlDialogReference.prototype.hide = function (data) {
        this.internaleRef.hide(data);
    };
    /**
     * Observable that emits, if the dialog was closed.
     * @returns {Observable<void>}
     */
    MdlDialogReference.prototype.onHide = function () {
        return this.internaleRef.onHide();
    };
    /**
     * Observable that emits, if the dialog is really visible and not only created.
     * @returns {Observable<void>}
     */
    MdlDialogReference.prototype.onVisible = function () {
        return this.internaleRef.onVisible();
    };
    return MdlDialogReference;
}());
/**
 * The MdlDialogService is used to open different kind of dialogs. SimpleDialogs and Custom Dialogs.
 * @experimental
  */
var MdlDialogService = (function () {
    function MdlDialogService(componentFactoryResolver, doc, appRef, mdlDialogOutletService) {
        var _this = this;
        this.componentFactoryResolver = componentFactoryResolver;
        this.doc = doc;
        this.appRef = appRef;
        this.mdlDialogOutletService = mdlDialogOutletService;
        this.openDialogs = new Array();
        this.mdlDialogOutletService.backdropClickEmitter.subscribe(function () {
            _this.onBackdropClick();
        });
    }
    /**
     * Shows a dialog that is just an alert - e.g. with one button.
     * @param alertMessage The message that should be displayed.
     * @param okTex The text that the button should have
     * @param title The optional title of the dialog
     * @returns An Observable that is called if the user hits the Ok button.
     */
    MdlDialogService.prototype.alert = function (alertMessage, okText, title) {
        if (okText === void 0) { okText = 'Ok'; }
        var result = new __WEBPACK_IMPORTED_MODULE_2_rxjs_Subject__["Subject"]();
        this.showDialog({
            title: title,
            message: alertMessage,
            actions: [
                { handler: function () {
                        result.next(null);
                        result.complete();
                    }, text: okText }
            ],
            isModal: true
        });
        return result;
    };
    /**
     * Shows a dialog that is just a confirm message - e.g. with two button.
     * @param question The question that should be displayed.
     * @param title The title that should be displayed on top of Question.
     * @param declineText The text for decline button. defaults to Cancel
     * @param confirmText The text for the confirm button . defaults to Ok
     * @returns An Observable that is called if the user hits the Ok button.
     */
    MdlDialogService.prototype.confirm = function (question, declineText, confirmText, title) {
        if (declineText === void 0) { declineText = 'Cancel'; }
        if (confirmText === void 0) { confirmText = 'Ok'; }
        var result = new __WEBPACK_IMPORTED_MODULE_2_rxjs_Subject__["Subject"]();
        this.showDialog({
            title: title,
            message: question,
            actions: [
                {
                    handler: function () {
                        result.next(null);
                        result.complete();
                    }, text: confirmText
                },
                {
                    handler: function () {
                        result.error(null);
                    }, text: declineText, isClosingAction: true
                }
            ],
            isModal: true
        });
        return result.asObservable();
    };
    /**
     * Shows a dialog that is specified by the provided configuration.
     * @param config The simple dialog configuration.
     * @returns An Observable that returns the MdlDialogReference.
     */
    MdlDialogService.prototype.showDialog = function (config) {
        if (config.actions.length === 0) {
            throw new Error('a dialog mus have at least one action');
        }
        var internalDialogRef = new __WEBPACK_IMPORTED_MODULE_5__internal_dialog_reference__["a" /* InternalMdlDialogReference */](config);
        var providers = [
            { provide: MdlDialogReference, useValue: new MdlDialogReference(internalDialogRef) },
            { provide: MDL_CONFIGUARTION, useValue: config }
        ];
        var hostComponentRef = this.createHostDialog(internalDialogRef, config);
        var cRef = this.createComponentInstance(hostComponentRef.instance.dialogTarget, providers, __WEBPACK_IMPORTED_MODULE_3__mdl_simple_dialog_component__["a" /* MdlSimpleDialogComponent */]);
        return this.showHostDialog(internalDialogRef.dialogRef, hostComponentRef);
    };
    /**
     * Shows a dialog that is specified by the provided configuration.
     * @param config The custom dialog configuration.
     * @returns An Observable that returns the MdlDialogReference.
     */
    MdlDialogService.prototype.showCustomDialog = function (config) {
        var internalDialogRef = new __WEBPACK_IMPORTED_MODULE_5__internal_dialog_reference__["a" /* InternalMdlDialogReference */](config);
        var providers = [
            { provide: MdlDialogReference, useValue: new MdlDialogReference(internalDialogRef) }
        ];
        if (config.providers) {
            providers.push.apply(providers, config.providers);
        }
        var hostComponentRef = this.createHostDialog(internalDialogRef, config);
        this.createComponentInstance(hostComponentRef.instance.dialogTarget, providers, config.component);
        return this.showHostDialog(internalDialogRef.dialogRef, hostComponentRef);
    };
    MdlDialogService.prototype.showDialogTemplate = function (template, config) {
        var internalDialogRef = new __WEBPACK_IMPORTED_MODULE_5__internal_dialog_reference__["a" /* InternalMdlDialogReference */](config);
        var hostComponentRef = this.createHostDialog(internalDialogRef, config);
        hostComponentRef.instance.dialogTarget.createEmbeddedView(template);
        return this.showHostDialog(internalDialogRef.dialogRef, hostComponentRef);
    };
    MdlDialogService.prototype.showHostDialog = function (dialogRef, hostComponentRef) {
        var result = new __WEBPACK_IMPORTED_MODULE_2_rxjs_Subject__["Subject"]();
        setTimeout(function () {
            result.next(dialogRef);
            result.complete();
            hostComponentRef.instance.show();
        });
        return result.asObservable();
    };
    MdlDialogService.prototype.createHostDialog = function (internalDialogRef, dialogConfig) {
        var _this = this;
        var viewContainerRef = this.mdlDialogOutletService.viewContainerRef;
        if (!viewContainerRef) {
            throw new Error('You did not provide a ViewContainerRef. ' +
                'Please see https://github.com/mseemann/angular2-mdl/wiki/How-to-use-the-MdlDialogService');
        }
        var providers = [
            { provide: MDL_CONFIGUARTION, useValue: dialogConfig },
            { provide: __WEBPACK_IMPORTED_MODULE_5__internal_dialog_reference__["a" /* InternalMdlDialogReference */], useValue: internalDialogRef }
        ];
        var hostDialogComponent = this.createComponentInstance(viewContainerRef, providers, __WEBPACK_IMPORTED_MODULE_4__mdl_dialog_host_component__["a" /* MdlDialogHostComponent */]);
        internalDialogRef.hostDialogComponentRef = hostDialogComponent;
        internalDialogRef.isModal = dialogConfig.isModal;
        internalDialogRef.closeCallback = function () {
            _this.popDialog(internalDialogRef);
            hostDialogComponent.instance.hide(hostDialogComponent);
        };
        this.pushDialog(internalDialogRef);
        return hostDialogComponent;
    };
    MdlDialogService.prototype.pushDialog = function (dialogRef) {
        this.openDialogs.push(dialogRef);
        this.orderDialogStack();
    };
    MdlDialogService.prototype.popDialog = function (dialogRef) {
        this.openDialogs.splice(this.openDialogs.indexOf(dialogRef), 1);
        this.orderDialogStack();
    };
    MdlDialogService.prototype.orderDialogStack = function () {
        // +1 because the overlay may have MIN_DIALOG_Z_INDEX if the dialog is modal.
        var zIndex = MIN_DIALOG_Z_INDEX + 1;
        this.openDialogs.forEach(function (iDialogRef) {
            iDialogRef.hostDialog.zIndex = zIndex;
            // +2 to make room for the overlay if a dialog is modal
            zIndex += 2;
        });
        this.mdlDialogOutletService.hideBackdrop();
        // if there is a modal dialog append the overloay to the dom - if not remove the overlay from the body
        var topMostModalDialog = this.getTopMostInternalDialogRef();
        if (topMostModalDialog) {
            // move the overlay diredct under the topmos modal dialog
            this.mdlDialogOutletService.showBackdropWithZIndex(topMostModalDialog.hostDialog.zIndex - 1);
        }
    };
    MdlDialogService.prototype.getTopMostInternalDialogRef = function () {
        var topMostModalDialog = null;
        for (var i = (this.openDialogs.length - 1); i >= 0; i--) {
            if (this.openDialogs[i].isModal) {
                topMostModalDialog = this.openDialogs[i];
                break;
            }
        }
        return topMostModalDialog;
    };
    MdlDialogService.prototype.onBackdropClick = function () {
        var topMostModalDialog = this.getTopMostInternalDialogRef();
        if (topMostModalDialog.config.clickOutsideToClose) {
            topMostModalDialog.hide();
        }
    };
    MdlDialogService.prototype.createComponentInstance = function (viewContainerRef, providers, component) {
        var cFactory = this.componentFactoryResolver.resolveComponentFactory(component);
        var resolvedProviders = __WEBPACK_IMPORTED_MODULE_0__angular_core__["ReflectiveInjector"].resolve(providers);
        var parentInjector = viewContainerRef.parentInjector;
        var childInjector = __WEBPACK_IMPORTED_MODULE_0__angular_core__["ReflectiveInjector"].fromResolvedProviders(resolvedProviders, parentInjector);
        return viewContainerRef.createComponent(cFactory, viewContainerRef.length, childInjector);
    };
    MdlDialogService.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"] },
    ];
    /** @nocollapse */
    MdlDialogService.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ComponentFactoryResolver"], },
        { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Inject"], args: [__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__["b" /* DOCUMENT */],] },] },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ApplicationRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_6__dialog_outlet_mdl_dialog_outlet_service__["a" /* MdlDialogOutletService */], },
    ]; };
    return MdlDialogService;
}());
//# sourceMappingURL=mdl-dialog.service.js.map

/***/ },
/* 678 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* unused harmony export Rooms */
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return Staff; });
/* harmony export (binding) */ __webpack_require__.d(exports, "c", function() { return Child; });
/* unused harmony export DashBoardRoomInfo */
/* harmony export (binding) */ __webpack_require__.d(exports, "b", function() { return RoomInfo; });
//room model(fake model for testing)
var Rooms = (function () {
    function Rooms(data) {
        Object.assign(this, data);
    }
    return Rooms;
}());
//staff model
var Staff = (function () {
    function Staff(data) {
        Object.assign(this, data);
    }
    return Staff;
}());
//child model
var Child = (function () {
    function Child(data) {
        Object.assign(this, data);
    }
    return Child;
}());
//dashboard room information model
var DashBoardRoomInfo = (function () {
    function DashBoardRoomInfo(data) {
        Object.assign(this, data);
    }
    return DashBoardRoomInfo;
}());
//roomInfo type
var RoomInfo = (function () {
    function RoomInfo(data) {
        Object.assign(this, data);
    }
    return RoomInfo;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/occupancy.model.js.map

/***/ },
/* 679 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs__ = __webpack_require__(673);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__models_profile_model__ = __webpack_require__(849);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__http_client_service__ = __webpack_require__(669);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lite_app_api__ = __webpack_require__(670);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__session_manager_service__ = __webpack_require__(691);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return ProfileManagerService; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var ProfileManagerService = (function () {
    function ProfileManagerService(http, sessionManager) {
        var _this = this;
        this.http = http;
        this.sessionManager = sessionManager;
        this.store = new __WEBPACK_IMPORTED_MODULE_1_rxjs__["Subject"]();
        this.sessionManager.session$.filter(function (state) { return state.authorized; }).flatMap(function () {
            return _this.loadProfile();
        }).subscribe(function (profile) {
            _this.createProfileFromAuth(profile);
        });
    }
    ProfileManagerService.prototype.login = function (username, password) {
        var _this = this;
        return this.http.requestLogin(username, password).flatMap(function (res) {
            var token = res.headers.get('x-auth-token');
            _this.sessionManager.saveSession(token);
            return _this.store$;
        });
    };
    ProfileManagerService.prototype.loadProfile = function () {
        return this.http.get(__WEBPACK_IMPORTED_MODULE_4__lite_app_api__["a" /* LiteAppAPI */].AUTH_ENDPOINT + '/profile').map(function (res) {
            return res.json();
        });
    };
    ProfileManagerService.prototype.loadCrecheProfile = function () {
        return this.http
            .get(__WEBPACK_IMPORTED_MODULE_4__lite_app_api__["a" /* LiteAppAPI */].FACILITY_PROFILE_ENDPOINT)
            .map(function (res) { return res.json(); });
    };
    ProfileManagerService.prototype.updateCrecheProfile = function (centreData) {
        var _this = this;
        return this.http
            .put(__WEBPACK_IMPORTED_MODULE_4__lite_app_api__["a" /* LiteAppAPI */].FACILITY_PROFILE_ENDPOINT, centreData)
            .map(function (res) {
            var crecheProfile = res.json();
            _this.profile.additional = crecheProfile;
            _this.store.next(_this.profile);
            return res.json();
        });
    };
    Object.defineProperty(ProfileManagerService.prototype, "store$", {
        get: function () {
            return this.store.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    ProfileManagerService.prototype.getProfile = function () {
        return this.profile;
    };
    ProfileManagerService.prototype.createProfileFromAuth = function (profile) {
        var _this = this;
        this.profile = new __WEBPACK_IMPORTED_MODULE_2__models_profile_model__["a" /* Profile */](profile);
        this.loadCrecheProfile().toPromise().then(function (crecheProfile) {
            _this.profile.additional = crecheProfile;
            _this.store.next(_this.profile);
        }, console.error);
        return this.store$;
    };
    ProfileManagerService.prototype.verifyProfile = function (code) {
        var _this = this;
        return this.http.requestVerification(code).switchMap(function (res) {
            var token = res.headers.get('x-auth-token');
            _this.sessionManager.saveSession(token);
            return _this.store$;
        });
    };
    ProfileManagerService.prototype.updateFirstLogin = function () {
        return this.http.post(__WEBPACK_IMPORTED_MODULE_4__lite_app_api__["a" /* LiteAppAPI */].AUTH_ENDPOINT + '/' + this.profile.email, null);
    };
    ProfileManagerService = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_3__http_client_service__["a" /* HttpClientService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__http_client_service__["a" /* HttpClientService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_5__session_manager_service__["a" /* SessionManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_5__session_manager_service__["a" /* SessionManagerService */]) === 'function' && _b) || Object])
    ], ProfileManagerService);
    return ProfileManagerService;
    var _a, _b;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/profile-manager.service.js.map

/***/ },
/* 680 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_mdl_error__ = __webpack_require__(675);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_boolean_property__ = __webpack_require__(667);
/* unused harmony export MdlUnsupportedButtonTypeError */
/* unused harmony export MdlUnsupportedColoredTypeError */
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlButtonComponent; });
/* harmony export (binding) */ __webpack_require__.d(exports, "b", function() { return MdlButtonModule; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var MdlUnsupportedButtonTypeError = (function (_super) {
    __extends(MdlUnsupportedButtonTypeError, _super);
    function MdlUnsupportedButtonTypeError(type) {
        _super.call(this, "Button type \"" + type + "\" isn't supported (allowed: raised, fab, mini-fab, icon, '').");
    }
    return MdlUnsupportedButtonTypeError;
}(__WEBPACK_IMPORTED_MODULE_1__common_mdl_error__["a" /* MdlError */]));
var MdlUnsupportedColoredTypeError = (function (_super) {
    __extends(MdlUnsupportedColoredTypeError, _super);
    function MdlUnsupportedColoredTypeError(type) {
        _super.call(this, "Colored type \"" + type + "\" isn't supported (allowed: primary, accent, '').");
    }
    return MdlUnsupportedColoredTypeError;
}(__WEBPACK_IMPORTED_MODULE_1__common_mdl_error__["a" /* MdlError */]));
var MDL_BUTTON_TYPES = [
    'raised',
    'fab',
    'mini-fab',
    'icon',
    ''
];
var MDL_COLORED_TYPES = [
    'primary',
    'accent',
    ''
];
var MdlButtonComponent = (function () {
    function MdlButtonComponent(elementRef, renderer) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.disabled = false;
        this.element = elementRef.nativeElement;
    }
    MdlButtonComponent.prototype.ngOnChanges = function () {
        if (this.mdlButtonType && MDL_BUTTON_TYPES.indexOf(this.mdlButtonType) === -1) {
            throw new MdlUnsupportedButtonTypeError(this.mdlButtonType);
        }
        if (this.mdlColoredType && MDL_COLORED_TYPES.indexOf(this.mdlColoredType) === -1) {
            throw new MdlUnsupportedColoredTypeError(this.mdlColoredType);
        }
    };
    MdlButtonComponent.prototype.onMouseUp = function () {
        this.blurIt();
    };
    MdlButtonComponent.prototype.onMouseLeave = function () {
        this.blurIt();
    };
    MdlButtonComponent.prototype.blurIt = function () {
        this.renderer.invokeElementMethod(this.element, 'blur', []);
    };
    MdlButtonComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-button, button[mdl-button], a[mdl-button]',
                    host: {
                        '[attr.disabled]': 'disabled ? "disabled" : null',
                        '(mouseup)': 'onMouseUp()',
                        '(mouseleave)': 'onMouseLeave()',
                        '[class.mdl-button]': 'true',
                        '[class.mdl-button--raised]': 'mdlButtonType == "raised"',
                        '[class.mdl-button--fab]': 'mdlButtonType == "fab" || mdlButtonType == "mini-fab"',
                        '[class.mdl-button--mini-fab]': 'mdlButtonType == "mini-fab"',
                        '[class.mdl-button--icon]': 'mdlButtonType == "icon"',
                        '[class.mdl-button--primary]': 'mdlColoredType == "primary"',
                        '[class.mdl-button--accent]': 'mdlColoredType == "accent"'
                    },
                    exportAs: 'mdlButton',
                    template: '<ng-content></ng-content>',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlButtonComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
    ]; };
    MdlButtonComponent.propDecorators = {
        'mdlButtonType': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-button-type',] },],
        'mdlColoredType': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-colored',] },],
        'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlButtonComponent.prototype, "disabled", void 0);
    return MdlButtonComponent;
}());
var MDL_BUTTON_DIRECTIVES = [MdlButtonComponent];
var MdlButtonModule = (function () {
    function MdlButtonModule() {
    }
    MdlButtonModule.forRoot = function () {
        return {
            ngModule: MdlButtonModule,
            providers: []
        };
    };
    MdlButtonModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [],
                    exports: MDL_BUTTON_DIRECTIVES,
                    declarations: MDL_BUTTON_DIRECTIVES,
                },] },
    ];
    /** @nocollapse */
    MdlButtonModule.ctorParameters = function () { return []; };
    return MdlButtonModule;
}());
//# sourceMappingURL=mdl-button.component.js.map

/***/ },
/* 681 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* unused harmony export MdlIconComponent */
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlIconModule; });

var MdlIconComponent = (function () {
    function MdlIconComponent() {
    }
    MdlIconComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-icon',
                    host: {
                        '[class.material-icons]': 'true'
                    },
                    template: '<ng-content></ng-content>',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlIconComponent.ctorParameters = function () { return []; };
    return MdlIconComponent;
}());
var MDL_ICON_DIRECTIVES = [MdlIconComponent];
var MdlIconModule = (function () {
    function MdlIconModule() {
    }
    MdlIconModule.forRoot = function () {
        return {
            ngModule: MdlIconModule,
            providers: []
        };
    };
    MdlIconModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [],
                    exports: MDL_ICON_DIRECTIVES,
                    declarations: MDL_ICON_DIRECTIVES,
                },] },
    ];
    /** @nocollapse */
    MdlIconModule.ctorParameters = function () { return []; };
    return MdlIconModule;
}());
//# sourceMappingURL=mdl-icon.component.js.map

/***/ },
/* 682 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var MulticastObservable_1 = __webpack_require__(785);
var ConnectableObservable_1 = __webpack_require__(719);
/**
 * Returns an Observable that emits the results of invoking a specified selector on items
 * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.
 *
 * <img src="./img/multicast.png" width="100%">
 *
 * @param {Function|Subject} Factory function to create an intermediate subject through
 * which the source sequence's elements will be multicast to the selector function
 * or Subject to push source elements into.
 * @param {Function} Optional selector function that can use the multicasted source stream
 * as many times as needed, without causing multiple subscriptions to the source stream.
 * Subscribers to the given source will receive all notifications of the source from the
 * time of the subscription forward.
 * @return {Observable} an Observable that emits the results of invoking the selector
 * on the items emitted by a `ConnectableObservable` that shares a single subscription to
 * the underlying stream.
 * @method multicast
 * @owner Observable
 */
function multicast(subjectOrSubjectFactory, selector) {
    var subjectFactory;
    if (typeof subjectOrSubjectFactory === 'function') {
        subjectFactory = subjectOrSubjectFactory;
    }
    else {
        subjectFactory = function subjectFactory() {
            return subjectOrSubjectFactory;
        };
    }
    return !selector ?
        new ConnectableObservable_1.ConnectableObservable(this, subjectFactory) :
        new MulticastObservable_1.MulticastObservable(this, subjectFactory, selector);
}
exports.multicast = multicast;
//# sourceMappingURL=multicast.js.map

/***/ },
/* 683 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return occupancyModalAnimations; });

var animationCurve = 'cubic-bezier(0.47,0,0.745,0.715)';
var timingCurve = function (time) {
    if (time === void 0) { time = .2; }
    return time + 's ' + animationCurve;
};
var occupancyModalAnimations = [
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["trigger"])('modal', [
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["state"])('true', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ transform: 'none' })),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["state"])('false', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ transform: 'translateY(-80vh)' })),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["transition"])('0 => 1', [
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["animate"])(timingCurve(0.3), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ transform: 'none', opacity: 1 }))
        ]),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["transition"])('1 => 0', [
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ opacity: 0.3 }),
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["animate"])(timingCurve(), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ transform: 'translateY(-80vh)', opacity: 0 }))
        ])
    ]),
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["trigger"])('backdrop', [
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["state"])('true', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ visibility: 'visible' })),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["state"])('false', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ visibility: 'hidden' })),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["transition"])('0 => 1', [
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["animate"])(timingCurve(), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ opacity: 1 }))
        ]),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["transition"])('1 => 0', [
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["animate"])(timingCurve(), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ opacity: 0 }))
        ])
    ])
];
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/occupancy-modal.animations.js.map

/***/ },
/* 684 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__models_child_model__ = __webpack_require__(685);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__models_general_model__ = __webpack_require__(749);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs__ = __webpack_require__(673);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__http_client_service__ = __webpack_require__(669);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__lite_app_api__ = __webpack_require__(670);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return ChildrenManagerService; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var ChildrenManagerService = (function () {
    function ChildrenManagerService(http) {
        var _this = this;
        this.http = http;
        this.children = [];
        this.store = new __WEBPACK_IMPORTED_MODULE_3_rxjs__["BehaviorSubject"]([]);
        this.loadChildren().subscribe(function (children) {
            _this.children = children;
            _this.store.next(_this.children);
        }, function (error) {
            console.error('Error loading children', error);
        });
    }
    Object.defineProperty(ChildrenManagerService.prototype, "store$", {
        get: function () {
            return this.store.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    ChildrenManagerService.prototype.getChildById = function (id) {
        return this.children.find(function (child) { return child.id === id; });
    };
    ChildrenManagerService.prototype.getAll = function () {
        return this.children;
    };
    ChildrenManagerService.prototype.moveChild = function (child, roomId) {
        var _child = this.getChildById(child.id);
        _child.roomId = roomId;
        this.store.next(this.children);
        return _child;
    };
    ChildrenManagerService.prototype.removeChild = function (child) {
        var _this = this;
        //
        // RIDA: I think remove child API should return current child list for the room
        // if, others delete children at the same time, you'd be out of synch.
        //
        this.http.delete(__WEBPACK_IMPORTED_MODULE_5__lite_app_api__["a" /* LiteAppAPI */].CHILDREN_ENDPOINT + '/' + child.id).subscribe(function (res) {
            console.log("DELETE returned " + res.json);
            var index = _this.children.findIndex(function (_child) { return _child.id === child.id; });
            if (index !== -1) {
                _this.children.splice(index, 1);
                _this.store.next(_this.children);
            }
            else {
                console.error('Child was not found');
            }
        }, function (err) {
            console.log("Error Deleting Child " + child.name + " " + err);
        });
        return this.children;
    };
    ChildrenManagerService.prototype.addChild = function (child) {
        var _this = this;
        return this.http.post(__WEBPACK_IMPORTED_MODULE_5__lite_app_api__["a" /* LiteAppAPI */].CHILDREN_ENDPOINT, child).map(function (res) {
            var _child = new __WEBPACK_IMPORTED_MODULE_1__models_child_model__["a" /* Child */](res.json());
            _this.children.push(_child);
            _this.store.next(_this.children);
            return _child;
        });
    };
    ChildrenManagerService.prototype.updateChild = function (child) {
        var _this = this;
        child = child.toAPIFormat();
        return this.http.put(__WEBPACK_IMPORTED_MODULE_5__lite_app_api__["a" /* LiteAppAPI */].CHILDREN_ENDPOINT + '/' + child.id, child).map(function (res) {
            var response = new __WEBPACK_IMPORTED_MODULE_1__models_child_model__["a" /* Child */](res.json());
            _this.children = _this.children.map(function (_child) {
                return _child.id === child.id ? response : _child;
            });
            _this.store.next(_this.children);
            return response;
        });
    };
    ChildrenManagerService.prototype.updateAttendance = function (child, action, timestamp) {
        var roomId;
        switch (action) {
            case __WEBPACK_IMPORTED_MODULE_2__models_general_model__["a" /* AttendanceStates */].IN:
            case 'IN':
                roomId = child.roomId;
                break;
            case __WEBPACK_IMPORTED_MODULE_2__models_general_model__["a" /* AttendanceStates */].ABSENT:
            case 'ABSENT':
                roomId = 'ABSENT';
                break;
            case __WEBPACK_IMPORTED_MODULE_2__models_general_model__["a" /* AttendanceStates */].OUT:
            case 'OUT':
            default:
                roomId = '';
                break;
        }
        return this.http.put(__WEBPACK_IMPORTED_MODULE_5__lite_app_api__["a" /* LiteAppAPI */].ATTENDANCE_CHECK(child.id), {
            time: timestamp,
            roomId: roomId,
            comment: ''
        });
    };
    ChildrenManagerService.prototype.loadChildren = function () {
        return this.http.get(__WEBPACK_IMPORTED_MODULE_5__lite_app_api__["a" /* LiteAppAPI */].CHILDREN_ENDPOINT).map(function (response) {
            return response.json().map(function (child) { return new __WEBPACK_IMPORTED_MODULE_1__models_child_model__["a" /* Child */](child); });
        });
    };
    ChildrenManagerService = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_4__http_client_service__["a" /* HttpClientService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_4__http_client_service__["a" /* HttpClientService */]) === 'function' && _a) || Object])
    ], ChildrenManagerService);
    return ChildrenManagerService;
    var _a;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/children-manager.service.js.map

/***/ },
/* 685 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lite_app_api__ = __webpack_require__(670);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return Child; });

// REVIEW
var Child = (function () {
    function Child(data) {
        Object.assign(this, data);
        this.picture = __WEBPACK_IMPORTED_MODULE_0__lite_app_api__["a" /* LiteAppAPI */].IMAGE_ENDPOINT + '/' + this.picture;
    }
    Child.prototype.toAPIFormat = function () {
        // Object assign to create a new object, in order not to mutate current
        // Child Object. Otherwise it triggers view render.
        return Object.assign({}, this, {
            picture: this.picture.replace(__WEBPACK_IMPORTED_MODULE_0__lite_app_api__["a" /* LiteAppAPI */].IMAGE_ENDPOINT + '/', '')
        });
    };
    return Child;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/child.model.js.map

/***/ },
/* 686 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(371);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_boolean_property__ = __webpack_require__(667);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_number_property__ = __webpack_require__(676);
/* unused harmony export CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR */
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlCheckboxComponent; });
/* harmony export (binding) */ __webpack_require__.d(exports, "b", function() { return MdlCheckboxModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var noop = function (_) { };
var IS_FOCUSED = 'is-focused';
var CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR = {
    provide: __WEBPACK_IMPORTED_MODULE_1__angular_forms__["a" /* NG_VALUE_ACCESSOR */],
    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["forwardRef"])(function () { return MdlCheckboxComponent; }),
    multi: true
};
var MdlCheckboxComponent = (function () {
    function MdlCheckboxComponent(elementRef, renderer) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.disabled = false;
        this.tabindex = 1;
        this.change = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.value_ = false;
        this.onTouchedCallback = noop;
        this.onChangeCallback = noop;
        this.el = elementRef.nativeElement;
    }
    Object.defineProperty(MdlCheckboxComponent.prototype, "value", {
        get: function () { return this.value_; },
        set: function (v) {
            this.value_ = v;
            this.onChangeCallback(v);
            this.change.emit(v);
        },
        enumerable: true,
        configurable: true
    });
    ;
    MdlCheckboxComponent.prototype.writeValue = function (value) {
        this.value_ = value;
    };
    MdlCheckboxComponent.prototype.registerOnChange = function (fn) {
        this.onChangeCallback = fn;
    };
    MdlCheckboxComponent.prototype.registerOnTouched = function (fn) {
        this.onTouchedCallback = fn;
    };
    MdlCheckboxComponent.prototype.setDisabledState = function (isDisabled) {
        this.disabled = isDisabled;
    };
    MdlCheckboxComponent.prototype.onFocus = function () {
        this.renderer.setElementClass(this.el, IS_FOCUSED, true);
    };
    MdlCheckboxComponent.prototype.onBlur = function () {
        this.renderer.setElementClass(this.el, IS_FOCUSED, false);
        this.onTouchedCallback();
    };
    MdlCheckboxComponent.prototype.onClick = function () {
        if (this.disabled) {
            return;
        }
        this.value = !this.value;
    };
    MdlCheckboxComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-checkbox',
                    providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR],
                    host: {
                        '(click)': 'onClick()',
                        '[class.mdl-checkbox]': 'true',
                        '[class.is-upgraded]': 'true',
                        '[class.is-checked]': 'value',
                        '[class.is-disabled]': 'disabled'
                    },
                    template: "\n  <input type=\"checkbox\" class=\"mdl-checkbox__input\" \n    (focus)=\"onFocus()\" \n    (blur)=\"onBlur()\"\n    [disabled]=\"disabled\"\n    [tabindex]=\"tabindex\"\n    [ngModel]=\"value\">\n  <span class=\"mdl-checkbox__label\"><ng-content></ng-content></span>\n  <span class=\"mdl-checkbox__focus-helper\"></span>\n  <span class=\"mdl-checkbox__box-outline\">\n    <span class=\"mdl-checkbox__tick-outline\"></span>\n  </span>\n  ",
                    inputs: ['value'],
                    outputs: ['change'],
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None,
                    changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ChangeDetectionStrategy"].OnPush
                },] },
    ];
    /** @nocollapse */
    MdlCheckboxComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
    ]; };
    MdlCheckboxComponent.propDecorators = {
        'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'tabindex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlCheckboxComponent.prototype, "disabled", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__common_number_property__["a" /* NumberProperty */])()
    ], MdlCheckboxComponent.prototype, "tabindex", void 0);
    return MdlCheckboxComponent;
}());
var MDL_CHECKBOX_DIRECTIVES = [MdlCheckboxComponent];
var MdlCheckboxModule = (function () {
    function MdlCheckboxModule() {
    }
    MdlCheckboxModule.forRoot = function () {
        return {
            ngModule: MdlCheckboxModule,
            providers: []
        };
    };
    MdlCheckboxModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [__WEBPACK_IMPORTED_MODULE_2__angular_common__["CommonModule"], __WEBPACK_IMPORTED_MODULE_1__angular_forms__["b" /* FormsModule */]],
                    exports: MDL_CHECKBOX_DIRECTIVES,
                    declarations: MDL_CHECKBOX_DIRECTIVES,
                },] },
    ];
    /** @nocollapse */
    MdlCheckboxModule.ctorParameters = function () { return []; };
    return MdlCheckboxModule;
}());
//# sourceMappingURL=mdl-checkbox.component.js.map

/***/ },
/* 687 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ripple_vendor__ = __webpack_require__(857);
/* unused harmony export MdlRippleDirective */
/* unused harmony export MdlButtonRippleDirective */
/* unused harmony export MdlCheckboxRippleDirective */
/* unused harmony export MdlRadioRippleDirective */
/* unused harmony export MdlIconToggleRippleDirective */
/* unused harmony export MdlSwitchRippleDirective */
/* unused harmony export MdlMenuItemRippleDirective */
/* unused harmony export MdlAnchorRippleDirective */
/* unused harmony export MdlListItemRippleDirective */
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlRippleModule; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};


// known bugs: https://github.com/google/material-design-lite/issues/4215
var MdlRippleDirective = (function () {
    function MdlRippleDirective(elementRef, renderer, cssContainerClasses) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.cssContainerClasses = cssContainerClasses;
        this.RIPPLE = 'mdl-ripple';
        this.rippleActive = true;
        this.el = elementRef.nativeElement;
    }
    MdlRippleDirective.prototype.ngOnChanges = function () {
        var _this = this;
        // remove any existing ripple container
        if (this.rippleContainer) {
            this.el.removeChild(this.rippleContainer);
            delete this.rippleContainer;
            delete this.ripple;
        }
        // if used as mdl-ripple without property binding it is an empty string
        // otherwise (e.g. [mdl-ripple] it is a boolean - may be with the default value true.
        if (this.rippleActive === '' || this.rippleActive) {
            this.rippleContainer = this.renderer.createElement(null, 'span');
            this.cssContainerClasses.forEach(function (cssClass) {
                _this.renderer.setElementClass(_this.rippleContainer, cssClass, true);
            });
            var rippleElement = this.renderer.createElement(null, 'span');
            this.renderer.setElementClass(rippleElement, this.RIPPLE, true);
            this.rippleContainer.appendChild(rippleElement);
            this.el.appendChild(this.rippleContainer);
            this.ripple = new __WEBPACK_IMPORTED_MODULE_1__ripple_vendor__["a" /* MaterialRipple */](this.renderer, this.el);
        }
    };
    return MdlRippleDirective;
}());
var MdlButtonRippleDirective = (function (_super) {
    __extends(MdlButtonRippleDirective, _super);
    function MdlButtonRippleDirective(elementRef, renderer) {
        _super.call(this, elementRef, renderer, ['mdl-button__ripple-container']);
        this.rippleActive = true;
    }
    // AOT is not able to call lifecycle hooks if a base class :(
    MdlButtonRippleDirective.prototype.ngOnChanges = function () { _super.prototype.ngOnChanges.call(this); };
    MdlButtonRippleDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: 'mdl-button[mdl-ripple], button[mdl-ripple]'
                },] },
    ];
    /** @nocollapse */
    MdlButtonRippleDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
    ]; };
    MdlButtonRippleDirective.propDecorators = {
        'rippleActive': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-ripple',] },],
    };
    return MdlButtonRippleDirective;
}(MdlRippleDirective));
var MdlCheckboxRippleDirective = (function (_super) {
    __extends(MdlCheckboxRippleDirective, _super);
    function MdlCheckboxRippleDirective(elementRef, renderer) {
        _super.call(this, elementRef, renderer, ['mdl-checkbox__ripple-container', 'mdl-ripple--center']);
        this.rippleActive = true;
    }
    // AOT is not able to call lifecycle hooks if a base class :(
    MdlCheckboxRippleDirective.prototype.ngOnChanges = function () { _super.prototype.ngOnChanges.call(this); };
    MdlCheckboxRippleDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: 'mdl-checkbox[mdl-ripple]'
                },] },
    ];
    /** @nocollapse */
    MdlCheckboxRippleDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
    ]; };
    MdlCheckboxRippleDirective.propDecorators = {
        'rippleActive': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-ripple',] },],
    };
    return MdlCheckboxRippleDirective;
}(MdlRippleDirective));
var MdlRadioRippleDirective = (function (_super) {
    __extends(MdlRadioRippleDirective, _super);
    function MdlRadioRippleDirective(elementRef, renderer) {
        _super.call(this, elementRef, renderer, ['mdl-radio__ripple-container', 'mdl-ripple--center']);
        this.rippleActive = true;
    }
    // AOT is not able to call lifecycle hooks if a base class :(
    MdlRadioRippleDirective.prototype.ngOnChanges = function () { _super.prototype.ngOnChanges.call(this); };
    MdlRadioRippleDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: 'mdl-radio[mdl-ripple]'
                },] },
    ];
    /** @nocollapse */
    MdlRadioRippleDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
    ]; };
    MdlRadioRippleDirective.propDecorators = {
        'rippleActive': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-ripple',] },],
    };
    return MdlRadioRippleDirective;
}(MdlRippleDirective));
var MdlIconToggleRippleDirective = (function (_super) {
    __extends(MdlIconToggleRippleDirective, _super);
    function MdlIconToggleRippleDirective(elementRef, renderer) {
        _super.call(this, elementRef, renderer, ['mdl-icon-toggle__ripple-container', 'mdl-ripple--center']);
        this.rippleActive = true;
    }
    // AOT is not able to call lifecycle hooks if a base class :(
    MdlIconToggleRippleDirective.prototype.ngOnChanges = function () { _super.prototype.ngOnChanges.call(this); };
    MdlIconToggleRippleDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: 'mdl-icon-toggle[mdl-ripple]'
                },] },
    ];
    /** @nocollapse */
    MdlIconToggleRippleDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
    ]; };
    MdlIconToggleRippleDirective.propDecorators = {
        'rippleActive': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-ripple',] },],
    };
    return MdlIconToggleRippleDirective;
}(MdlRippleDirective));
var MdlSwitchRippleDirective = (function (_super) {
    __extends(MdlSwitchRippleDirective, _super);
    function MdlSwitchRippleDirective(elementRef, renderer) {
        _super.call(this, elementRef, renderer, ['mdl-switch__ripple-container', 'mdl-ripple--center']);
        this.rippleActive = true;
    }
    // AOT is not able to call lifecycle hooks if a base class :(
    MdlSwitchRippleDirective.prototype.ngOnChanges = function () { _super.prototype.ngOnChanges.call(this); };
    MdlSwitchRippleDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: 'mdl-switch[mdl-ripple]'
                },] },
    ];
    /** @nocollapse */
    MdlSwitchRippleDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
    ]; };
    MdlSwitchRippleDirective.propDecorators = {
        'rippleActive': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-ripple',] },],
    };
    return MdlSwitchRippleDirective;
}(MdlRippleDirective));
var MdlMenuItemRippleDirective = (function (_super) {
    __extends(MdlMenuItemRippleDirective, _super);
    function MdlMenuItemRippleDirective(elementRef, renderer) {
        _super.call(this, elementRef, renderer, ['mdl-menu__item--ripple-container']);
        this.rippleActive = true;
    }
    // AOT is not able to call lifecycle hooks if a base class :(
    MdlMenuItemRippleDirective.prototype.ngOnChanges = function () { _super.prototype.ngOnChanges.call(this); };
    MdlMenuItemRippleDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: 'mdl-menu-item[mdl-ripple]'
                },] },
    ];
    /** @nocollapse */
    MdlMenuItemRippleDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
    ]; };
    MdlMenuItemRippleDirective.propDecorators = {
        'rippleActive': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-ripple',] },],
    };
    return MdlMenuItemRippleDirective;
}(MdlRippleDirective));
var MdlAnchorRippleDirective = (function (_super) {
    __extends(MdlAnchorRippleDirective, _super);
    function MdlAnchorRippleDirective(elementRef, renderer) {
        _super.call(this, elementRef, renderer, ['mdl-tabs__ripple-container', 'mdl-layout__tab-ripple-container']);
        this.rippleActive = true;
    }
    // AOT is not able to call lifecycle hooks if a base class :(
    MdlAnchorRippleDirective.prototype.ngOnChanges = function () { _super.prototype.ngOnChanges.call(this); };
    MdlAnchorRippleDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: 'a[mdl-ripple],div[mdl-ripple]'
                },] },
    ];
    /** @nocollapse */
    MdlAnchorRippleDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
    ]; };
    MdlAnchorRippleDirective.propDecorators = {
        'rippleActive': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-ripple',] },],
    };
    return MdlAnchorRippleDirective;
}(MdlRippleDirective));
var MdlListItemRippleDirective = (function (_super) {
    __extends(MdlListItemRippleDirective, _super);
    function MdlListItemRippleDirective(elementRef, renderer) {
        _super.call(this, elementRef, renderer, ['mdl-button__ripple-container']);
        this.rippleActive = true;
    }
    MdlListItemRippleDirective.prototype.ngOnInit = function () {
        // mdl-list-items has no position style - but position relative
        // is needed to restrict the ripplecontainer to the bounds of the item
        this.renderer.setElementStyle(this.el, 'position', 'relative');
    };
    // AOT is not able to call lifecycle hooks if a base class :(
    MdlListItemRippleDirective.prototype.ngOnChanges = function () { _super.prototype.ngOnChanges.call(this); };
    MdlListItemRippleDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: 'mdl-list-item[mdl-ripple]',
                },] },
    ];
    /** @nocollapse */
    MdlListItemRippleDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
    ]; };
    MdlListItemRippleDirective.propDecorators = {
        'rippleActive': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-ripple',] },],
    };
    return MdlListItemRippleDirective;
}(MdlRippleDirective));
var MDL_COMMON_DIRECTIVES = [
    MdlCheckboxRippleDirective,
    MdlButtonRippleDirective,
    MdlRadioRippleDirective,
    MdlIconToggleRippleDirective,
    MdlSwitchRippleDirective,
    MdlMenuItemRippleDirective,
    MdlAnchorRippleDirective,
    MdlListItemRippleDirective
];
var MdlRippleModule = (function () {
    function MdlRippleModule() {
    }
    MdlRippleModule.forRoot = function () {
        return {
            ngModule: MdlRippleModule,
            providers: []
        };
    };
    MdlRippleModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [],
                    exports: MDL_COMMON_DIRECTIVES,
                    declarations: MDL_COMMON_DIRECTIVES,
                },] },
    ];
    /** @nocollapse */
    MdlRippleModule.ctorParameters = function () { return []; };
    return MdlRippleModule;
}());
//# sourceMappingURL=mdl-ripple.directive.js.map

/***/ },
/* 688 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_dialog_outlet_component__ = __webpack_require__(707);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mdl_backdrop_overlay_component__ = __webpack_require__(706);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlDialogOutletService; });



var MdlDialogOutletService = (function () {
    function MdlDialogOutletService(appRef, componentFactoryResolver) {
        this.appRef = appRef;
        this.componentFactoryResolver = componentFactoryResolver;
        this.backdropClickEmitter = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        var dialogOutletCompRef = null;
        try {
            dialogOutletCompRef = this.appRef.bootstrap(__WEBPACK_IMPORTED_MODULE_1__mdl_dialog_outlet_component__["a" /* MdlDialogOutletComponent */]);
        }
        catch (e) {
        }
        if (dialogOutletCompRef) {
            this.setViewContainerRef(dialogOutletCompRef.instance.viewContainerRef);
        }
    }
    MdlDialogOutletService.prototype.setDefaultViewContainerRef = function (vCRef) {
        this.setViewContainerRef(vCRef);
    };
    Object.defineProperty(MdlDialogOutletService.prototype, "viewContainerRef", {
        get: function () {
            return this.viewContainerRef_;
        },
        enumerable: true,
        configurable: true
    });
    MdlDialogOutletService.prototype.setViewContainerRef = function (value) {
        var _this = this;
        this.viewContainerRef_ = value;
        if (this.viewContainerRef_) {
            var cFactory = this.componentFactoryResolver.resolveComponentFactory(__WEBPACK_IMPORTED_MODULE_2__mdl_backdrop_overlay_component__["a" /* MdlBackdropOverlayComponent */]);
            this.backdropComponet = this.viewContainerRef_.createComponent(cFactory).instance;
            this.backdropComponet.clickEmitter.subscribe(function () {
                _this.backdropClickEmitter.emit();
            });
        }
    };
    MdlDialogOutletService.prototype.hideBackdrop = function () {
        this.backdropComponet.hide();
    };
    MdlDialogOutletService.prototype.showBackdropWithZIndex = function (zIndex) {
        this.backdropComponet.showWithZIndex(zIndex);
    };
    MdlDialogOutletService.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"] },
    ];
    /** @nocollapse */
    MdlDialogOutletService.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ApplicationRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ComponentFactoryResolver"], },
    ]; };
    return MdlDialogOutletService;
}());
//# sourceMappingURL=mdl-dialog-outlet.service.js.map

/***/ },
/* 689 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var root_1 = __webpack_require__(46);
var Action_1 = __webpack_require__(1203);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AsyncAction = (function (_super) {
    __extends(AsyncAction, _super);
    function AsyncAction(scheduler, work) {
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
        this.pending = false;
    }
    AsyncAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        if (this.closed) {
            return this;
        }
        // Always replace the current state with the new state.
        this.state = state;
        // Set the pending flag indicating that this action has been scheduled, or
        // has recursively rescheduled itself.
        this.pending = true;
        var id = this.id;
        var scheduler = this.scheduler;
        //
        // Important implementation note:
        //
        // Actions only execute once by default, unless rescheduled from within the
        // scheduled callback. This allows us to implement single and repeat
        // actions via the same code path, without adding API surface area, as well
        // as mimic traditional recursion but across asynchronous boundaries.
        //
        // However, JS runtimes and timers distinguish between intervals achieved by
        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of
        // serial `setTimeout` calls can be individually delayed, which delays
        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to
        // guarantee the interval callback will be invoked more precisely to the
        // interval period, regardless of load.
        //
        // Therefore, we use `setInterval` to schedule single and repeat actions.
        // If the action reschedules itself with the same delay, the interval is not
        // canceled. If the action doesn't reschedule, or reschedules with a
        // different delay, the interval will be canceled after scheduled callback
        // execution.
        //
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, delay);
        }
        this.delay = delay;
        // If this action has already an async Id, don't request a new one.
        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);
        return this;
    };
    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);
    };
    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If this action is rescheduled with the same delay time, don't clear the interval id.
        if (delay !== null && this.delay === delay) {
            return id;
        }
        // Otherwise, if the action's delay time is different from the current delay,
        // clear the interval id
        return root_1.root.clearInterval(id) && undefined || undefined;
    };
    /**
     * Immediately executes this action and the `work` it contains.
     * @return {any}
     */
    AsyncAction.prototype.execute = function (state, delay) {
        if (this.closed) {
            return new Error('executing a cancelled action');
        }
        this.pending = false;
        var error = this._execute(state, delay);
        if (error) {
            return error;
        }
        else if (this.pending === false && this.id != null) {
            // Dequeue if the action didn't reschedule itself. Don't call
            // unsubscribe(), because the action could reschedule later.
            // For example:
            // ```
            // scheduler.schedule(function doWork(counter) {
            //   /* ... I'm a busy worker bee ... */
            //   var originalAction = this;
            //   /* wait 100ms before rescheduling the action */
            //   setTimeout(function () {
            //     originalAction.schedule(counter + 1);
            //   }, 100);
            // }, 1000);
            // ```
            this.id = this.recycleAsyncId(this.scheduler, this.id, null);
        }
    };
    AsyncAction.prototype._execute = function (state, delay) {
        var errored = false;
        var errorValue = undefined;
        try {
            this.work(state);
        }
        catch (e) {
            errored = true;
            errorValue = !!e && e || new Error(e);
        }
        if (errored) {
            this.unsubscribe();
            return errorValue;
        }
    };
    AsyncAction.prototype._unsubscribe = function () {
        var id = this.id;
        var scheduler = this.scheduler;
        var actions = scheduler.actions;
        var index = actions.indexOf(this);
        this.work = null;
        this.delay = null;
        this.state = null;
        this.pending = false;
        this.scheduler = null;
        if (index !== -1) {
            actions.splice(index, 1);
        }
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, null);
        }
    };
    return AsyncAction;
}(Action_1.Action));
exports.AsyncAction = AsyncAction;
//# sourceMappingURL=AsyncAction.js.map

/***/ },
/* 690 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Scheduler_1 = __webpack_require__(959);
var AsyncScheduler = (function (_super) {
    __extends(AsyncScheduler, _super);
    function AsyncScheduler() {
        _super.apply(this, arguments);
        this.actions = [];
        /**
         * A flag to indicate whether the Scheduler is currently executing a batch of
         * queued actions.
         * @type {boolean}
         */
        this.active = false;
        /**
         * An internal ID used to track the latest asynchronous task such as those
         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and
         * others.
         * @type {any}
         */
        this.scheduled = undefined;
    }
    AsyncScheduler.prototype.flush = function (action) {
        var actions = this.actions;
        if (this.active) {
            actions.push(action);
            return;
        }
        var error;
        this.active = true;
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (action = actions.shift()); // exhaust the scheduler queue
        this.active = false;
        if (error) {
            while (action = actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsyncScheduler;
}(Scheduler_1.Scheduler));
exports.AsyncScheduler = AsyncScheduler;
//# sourceMappingURL=AsyncScheduler.js.map

/***/ },
/* 691 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs__ = __webpack_require__(673);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular2_cookie_core__ = __webpack_require__(752);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular2_cookie_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_angular2_cookie_core__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment__ = __webpack_require__(668);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_moment__);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return SessionManagerService; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var SessionManagerService = (function () {
    function SessionManagerService(cookieService) {
        this.cookieService = cookieService;
        var token = cookieService.get('x-auth-token');
        this.authState = token ? {
            authorized: true,
            token: token
        } : {
            authorized: false
        };
        this._authState = new __WEBPACK_IMPORTED_MODULE_1_rxjs__["BehaviorSubject"](this.authState);
    }
    Object.defineProperty(SessionManagerService.prototype, "session$", {
        get: function () {
            return this._authState.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    SessionManagerService.prototype.saveSession = function (token, remember) {
        if (remember === void 0) { remember = false; }
        var expireDate = __WEBPACK_IMPORTED_MODULE_3_moment__().add(10, 'days').toDate();
        this.cookieService.put('x-auth-token', token, { expires: expireDate });
        this.authState = {
            authorized: true,
            token: token
        };
        this._authState.next(this.authState);
    };
    SessionManagerService.prototype.removeSession = function () {
        this.cookieService.remove('x-auth-token');
        this.authState = { authorized: false };
        this._authState.next(this.authState);
    };
    SessionManagerService = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2_angular2_cookie_core__["CookieService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2_angular2_cookie_core__["CookieService"]) === 'function' && _a) || Object])
    ], SessionManagerService);
    return SessionManagerService;
    var _a;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/session-manager.service.js.map

/***/ },
/* 692 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_dialog_outlet_component__ = __webpack_require__(707);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mdl_dialog_outlet_service__ = __webpack_require__(688);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mdl_backdrop_overlay_component__ = __webpack_require__(706);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlDialogOutletModule; });
/* unused harmony namespace reexport */
/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, "b", function() { return __WEBPACK_IMPORTED_MODULE_2__mdl_dialog_outlet_service__["a"]; });






var PUBLIC_COMPONENTS = [
    __WEBPACK_IMPORTED_MODULE_1__mdl_dialog_outlet_component__["b" /* MdlDialogInnerOutletComponent */]
];
var PRIVATE_COMPONENTS = [
    __WEBPACK_IMPORTED_MODULE_1__mdl_dialog_outlet_component__["a" /* MdlDialogOutletComponent */],
    __WEBPACK_IMPORTED_MODULE_3__mdl_backdrop_overlay_component__["a" /* MdlBackdropOverlayComponent */]
];
var MdlDialogOutletModule = (function () {
    function MdlDialogOutletModule() {
    }
    MdlDialogOutletModule.forRoot = function () {
        return {
            ngModule: MdlDialogOutletModule,
            providers: [__WEBPACK_IMPORTED_MODULE_2__mdl_dialog_outlet_service__["a" /* MdlDialogOutletService */]]
        };
    };
    MdlDialogOutletModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [],
                    exports: PUBLIC_COMPONENTS,
                    declarations: PUBLIC_COMPONENTS.concat(PRIVATE_COMPONENTS),
                    entryComponents: [
                        __WEBPACK_IMPORTED_MODULE_1__mdl_dialog_outlet_component__["a" /* MdlDialogOutletComponent */],
                        __WEBPACK_IMPORTED_MODULE_3__mdl_backdrop_overlay_component__["a" /* MdlBackdropOverlayComponent */]
                    ]
                },] },
    ];
    /** @nocollapse */
    MdlDialogOutletModule.ctorParameters = function () { return []; };
    return MdlDialogOutletModule;
}());
//# sourceMappingURL=index.js.map

/***/ },
/* 693 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_mdl_ripple_directive__ = __webpack_require__(687);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__button_mdl_button_component__ = __webpack_require__(680);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__badge_mdl_badge_directive__ = __webpack_require__(755);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shadow_mdl_shadow_directive__ = __webpack_require__(774);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__card_mdl_card_component__ = __webpack_require__(756);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__chips_index__ = __webpack_require__(757);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__dialog_index__ = __webpack_require__(759);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__dialog_outlet_index__ = __webpack_require__(692);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__checkbox_mdl_checkbox_component__ = __webpack_require__(686);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__radio_mdl_radio_component__ = __webpack_require__(773);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__progress_mdl_progress_component__ = __webpack_require__(772);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__icon_mdl_icon_component__ = __webpack_require__(681);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__icon_toggle_mdl_icon_toggle_component__ = __webpack_require__(763);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__list_mdl_list_component__ = __webpack_require__(769);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__spinner_mdl_spinner_component__ = __webpack_require__(777);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__slider_mdl_slider_component__ = __webpack_require__(775);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__switch_mdl_switch_component__ = __webpack_require__(778);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__snackbar_mdl_snackbar_service__ = __webpack_require__(776);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__tooltip_index__ = __webpack_require__(783);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__table_index__ = __webpack_require__(779);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__menu_index__ = __webpack_require__(770);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__layout_index__ = __webpack_require__(764);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__tabs_index__ = __webpack_require__(695);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__textfield_mdl_textfield_component__ = __webpack_require__(782);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__dialog_outlet_mdl_backdrop_overlay_component__ = __webpack_require__(706);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__dialog_mdl_dialog_host_component__ = __webpack_require__(708);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__dialog_mdl_simple_dialog_component__ = __webpack_require__(709);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__common_append_view_container_ref_directive__ = __webpack_require__(758);
/* harmony export (binding) */ __webpack_require__.d(exports, "MdlModule", function() { return MdlModule; });
/* unused harmony export MdlNonRootModule */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, "MdlSnackbarService", function() { return __WEBPACK_IMPORTED_MODULE_7__dialog_index__["MdlSnackbarService"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, "MdlDialogOutletService", function() { return __WEBPACK_IMPORTED_MODULE_7__dialog_index__["MdlDialogOutletService"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, "MdlDialogOutletService", function() { return __WEBPACK_IMPORTED_MODULE_8__dialog_outlet_index__["b"]; });
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, "MdlSnackbarService", function() { return __WEBPACK_IMPORTED_MODULE_18__snackbar_mdl_snackbar_service__["b"]; });
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony reexport Private1 */
/* unused harmony reexport Private2 */
/* unused harmony reexport Private3 */
/* unused harmony reexport Private4 */

















































// AOT :( https://github.com/angular/angular/issues/11606




var MDL_MODULES = [
    __WEBPACK_IMPORTED_MODULE_2__button_mdl_button_component__["b" /* MdlButtonModule */],
    __WEBPACK_IMPORTED_MODULE_22__layout_index__["a" /* MdlLayoutModule */],
    __WEBPACK_IMPORTED_MODULE_9__checkbox_mdl_checkbox_component__["b" /* MdlCheckboxModule */],
    __WEBPACK_IMPORTED_MODULE_6__chips_index__["a" /* MdlChipModule */],
    __WEBPACK_IMPORTED_MODULE_7__dialog_index__["MdlDialogModule"],
    __WEBPACK_IMPORTED_MODULE_8__dialog_outlet_index__["a" /* MdlDialogOutletModule */],
    __WEBPACK_IMPORTED_MODULE_15__spinner_mdl_spinner_component__["a" /* MdlSpinnerModule */],
    __WEBPACK_IMPORTED_MODULE_1__common_mdl_ripple_directive__["a" /* MdlRippleModule */],
    __WEBPACK_IMPORTED_MODULE_3__badge_mdl_badge_directive__["a" /* MdlBadgeModule */],
    __WEBPACK_IMPORTED_MODULE_4__shadow_mdl_shadow_directive__["a" /* MdlShadowModule */],
    __WEBPACK_IMPORTED_MODULE_5__card_mdl_card_component__["a" /* MdlCardModule */],
    __WEBPACK_IMPORTED_MODULE_10__radio_mdl_radio_component__["a" /* MdlRadioModule */],
    __WEBPACK_IMPORTED_MODULE_11__progress_mdl_progress_component__["a" /* MdlProgressModule */],
    __WEBPACK_IMPORTED_MODULE_12__icon_mdl_icon_component__["a" /* MdlIconModule */],
    __WEBPACK_IMPORTED_MODULE_13__icon_toggle_mdl_icon_toggle_component__["a" /* MdlIconToggleModule */],
    __WEBPACK_IMPORTED_MODULE_14__list_mdl_list_component__["a" /* MdlListModule */],
    __WEBPACK_IMPORTED_MODULE_16__slider_mdl_slider_component__["a" /* MdlSliderModule */],
    __WEBPACK_IMPORTED_MODULE_17__switch_mdl_switch_component__["a" /* MdlSwitchModule */],
    __WEBPACK_IMPORTED_MODULE_18__snackbar_mdl_snackbar_service__["a" /* MdlSnackbaModule */],
    __WEBPACK_IMPORTED_MODULE_19__tooltip_index__["a" /* MdlTooltipModule */],
    __WEBPACK_IMPORTED_MODULE_20__table_index__["a" /* MdlTableModule */],
    __WEBPACK_IMPORTED_MODULE_21__menu_index__["a" /* MdlMenuModule */],
    __WEBPACK_IMPORTED_MODULE_23__tabs_index__["b" /* MdlTabsModule */],
    __WEBPACK_IMPORTED_MODULE_24__textfield_mdl_textfield_component__["a" /* MdlTextFieldModule */]
];
var MdlModule = (function () {
    function MdlModule() {
    }
    MdlModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [
                        __WEBPACK_IMPORTED_MODULE_2__button_mdl_button_component__["b" /* MdlButtonModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_22__layout_index__["a" /* MdlLayoutModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_9__checkbox_mdl_checkbox_component__["b" /* MdlCheckboxModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_6__chips_index__["a" /* MdlChipModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_7__dialog_index__["MdlDialogModule"].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_8__dialog_outlet_index__["a" /* MdlDialogOutletModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_15__spinner_mdl_spinner_component__["a" /* MdlSpinnerModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_1__common_mdl_ripple_directive__["a" /* MdlRippleModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_3__badge_mdl_badge_directive__["a" /* MdlBadgeModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_4__shadow_mdl_shadow_directive__["a" /* MdlShadowModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_5__card_mdl_card_component__["a" /* MdlCardModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_10__radio_mdl_radio_component__["a" /* MdlRadioModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_11__progress_mdl_progress_component__["a" /* MdlProgressModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_12__icon_mdl_icon_component__["a" /* MdlIconModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_13__icon_toggle_mdl_icon_toggle_component__["a" /* MdlIconToggleModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_14__list_mdl_list_component__["a" /* MdlListModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_16__slider_mdl_slider_component__["a" /* MdlSliderModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_17__switch_mdl_switch_component__["a" /* MdlSwitchModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_18__snackbar_mdl_snackbar_service__["a" /* MdlSnackbaModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_19__tooltip_index__["a" /* MdlTooltipModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_20__table_index__["a" /* MdlTableModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_21__menu_index__["a" /* MdlMenuModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_23__tabs_index__["b" /* MdlTabsModule */].forRoot(),
                        __WEBPACK_IMPORTED_MODULE_24__textfield_mdl_textfield_component__["a" /* MdlTextFieldModule */].forRoot()
                    ],
                    exports: MDL_MODULES,
                    providers: []
                },] },
    ];
    /** @nocollapse */
    MdlModule.ctorParameters = function () { return []; };
    return MdlModule;
}());
var MdlNonRootModule = (function () {
    function MdlNonRootModule() {
    }
    MdlNonRootModule.forRoot = function () {
        return { ngModule: MdlModule };
    };
    MdlNonRootModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: MDL_MODULES,
                    exports: MDL_MODULES
                },] },
    ];
    /** @nocollapse */
    MdlNonRootModule.ctorParameters = function () { return []; };
    return MdlNonRootModule;
}());
//# sourceMappingURL=index.js.map

/***/ },
/* 694 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__ = __webpack_require__(102);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_mdl_error__ = __webpack_require__(675);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_boolean_property__ = __webpack_require__(667);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_number_property__ = __webpack_require__(676);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mdl_layout_header_component__ = __webpack_require__(712);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__mdl_layout_drawer_component__ = __webpack_require__(711);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__mdl_layout_content_component__ = __webpack_require__(710);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_Subject__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_Subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs_Subject__);
/* unused harmony export LAYOUT_SCREEN_SIZE_THRESHOLD */
/* unused harmony export MdLUnsupportedLayoutTypeError */
/* harmony export (binding) */ __webpack_require__.d(exports, "b", function() { return MdlScreenSizeService; });
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlLayoutComponent; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};









var ESCAPE = 27;
var STANDARD = 'standard';
var WATERFALL = 'waterfall';
var SCROLL = 'scroll';
/**
 * The LAYOUT_SCREEN_SIZE_THRESHOLD can be changed at the root module. Just provide a value for this OpaqueToken:
 *
 * providers: [
 *  {provide:LAYOUT_SCREEN_SIZE_THRESHOLD, useValue: 768 }
 * ]
 *
 * you also need to change the scss variable to the same value: $layout-screen-size-threshold: 768px.
 *
 * It should be clear that this can only be used if you are using the scss and not the pre compiled css from getmdl.io.
 *
 * @type {OpaqueToken}
 */
var LAYOUT_SCREEN_SIZE_THRESHOLD = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["OpaqueToken"]('layoutScreenSizeThreshold');
var MdLUnsupportedLayoutTypeError = (function (_super) {
    __extends(MdLUnsupportedLayoutTypeError, _super);
    function MdLUnsupportedLayoutTypeError(type) {
        _super.call(this, "Layout type \"" + type + "\" isn't supported by mdl-layout (allowed: standard, waterfall, scroll).");
    }
    return MdLUnsupportedLayoutTypeError;
}(__WEBPACK_IMPORTED_MODULE_2__common_mdl_error__["a" /* MdlError */]));
var MdlScreenSizeService = (function () {
    function MdlScreenSizeService(ngZone, layoutScreenSizeThreshold) {
        var _this = this;
        this.ngZone = ngZone;
        this.layoutScreenSizeThreshold = layoutScreenSizeThreshold;
        this.sizesSubject = new __WEBPACK_IMPORTED_MODULE_8_rxjs_Subject__["Subject"]();
        // if no value is injected the default size wil be used. same as $layout-screen-size-threshold in scss
        if (!this.layoutScreenSizeThreshold) {
            this.layoutScreenSizeThreshold = 1024;
        }
        // do not try to access the window object if rendered on the server
        if (typeof window === 'object' && 'matchMedia' in window) {
            var query_1 = window.matchMedia("(max-width: " + this.layoutScreenSizeThreshold + "px)");
            var queryListener_1 = function () {
                _this.ngZone.run(function () {
                    // looks like the query addListener runs not in NGZone - inform manually about changes
                    _this.sizesSubject.next(query_1.matches);
                });
            };
            query_1.addListener(queryListener_1);
            this.windowMediaQueryListener = function () {
                query_1.removeListener(queryListener_1);
            };
            // set the initial state
            setTimeout(function () {
                _this.sizesSubject.next(query_1.matches);
            });
        }
    }
    MdlScreenSizeService.prototype.sizes = function () {
        return this.sizesSubject.asObservable();
    };
    MdlScreenSizeService.prototype.destroy = function () {
        if (this.windowMediaQueryListener) {
            this.windowMediaQueryListener();
            this.windowMediaQueryListener = null;
        }
    };
    MdlScreenSizeService.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"] },
    ];
    /** @nocollapse */
    MdlScreenSizeService.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"], },
        { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Optional"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Inject"], args: [LAYOUT_SCREEN_SIZE_THRESHOLD,] },] },
    ]; };
    return MdlScreenSizeService;
}());
var MdlLayoutComponent = (function () {
    function MdlLayoutComponent(renderer, evm, el, ngZone, screenSizeService) {
        this.renderer = renderer;
        this.evm = evm;
        this.el = el;
        this.ngZone = ngZone;
        this.screenSizeService = screenSizeService;
        this.mode = STANDARD;
        this.isFixedDrawer = false;
        this.isFixedHeader = false;
        this.isSeamed = false;
        this.selectedIndex = 0;
        this.isRipple = false;
        this.isNoDrawer = false;
        this.selectedTabEmitter = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.mouseoverTabEmitter = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.mouseoutTabEmitter = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.onOpen = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.onClose = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.isDrawerVisible = false;
        this.isSmallScreen = false;
    }
    MdlLayoutComponent.prototype.ngAfterContentInit = function () {
        this.validateMode();
        if (this.header && this.content && this.content.tabs) {
            this.header.tabs = this.content.tabs;
            this.updateSelectedTabIndex();
        }
        // set this.drawer to null, if the drawer is not a direct child if this layout. It may be a drywer of a sub layout.
        if (this.drawer && !this.drawer.isDrawerDirectChildOf(this)) {
            this.drawer = null;
        }
    };
    MdlLayoutComponent.prototype.ngOnChanges = function (changes) {
        if (changes['selectedIndex']) {
            this.updateSelectedTabIndex();
        }
    };
    MdlLayoutComponent.prototype.updateSelectedTabIndex = function () {
        if (this.header && this.header.tabs) {
            this.header.tabs.forEach(function (tab) { return tab.isActive = false; });
            if (this.header.tabs.toArray().length > 0 && this.selectedIndex < this.header.tabs.toArray().length) {
                this.header.tabs.toArray()[this.selectedIndex].isActive = true;
            }
        }
    };
    MdlLayoutComponent.prototype.validateMode = function () {
        var _this = this;
        if (this.mode === '') {
            this.mode = STANDARD;
        }
        if ([STANDARD, WATERFALL, SCROLL].indexOf(this.mode) === -1) {
            throw new MdLUnsupportedLayoutTypeError(this.mode);
        }
        if (this.header) {
            // inform the header about the mode
            this.header.mode = this.mode;
            this.header.isSeamed = this.isSeamed;
        }
        if (this.content) {
            this.scrollListener = this.renderer.listen(this.content.el, 'scroll', function (e) {
                _this.onScroll(_this.content.el.scrollTop);
            });
            this.screenSizeService.sizes().subscribe(function (isSmall) {
                _this.onQueryChange(isSmall);
            });
        }
    };
    MdlLayoutComponent.prototype.onScroll = function (scrollTop) {
        if (this.mode !== WATERFALL) {
            return;
        }
        if (this.header.isAnimating) {
            return;
        }
        var headerVisible = !this.isSmallScreen || this.isFixedHeader;
        if (scrollTop > 0 && !this.header.isCompact) {
            this.header.isCompact = true;
            if (headerVisible) {
                this.header.isAnimating = true;
            }
        }
        else if (scrollTop <= 0 && this.header.isCompact) {
            this.header.isCompact = false;
            if (headerVisible) {
                this.header.isAnimating = true;
            }
        }
    };
    MdlLayoutComponent.prototype.onQueryChange = function (isSmall) {
        if (isSmall) {
            this.isSmallScreen = true;
        }
        else {
            this.isSmallScreen = false;
            this.closeDrawer();
        }
    };
    MdlLayoutComponent.prototype.toggleDrawer = function () {
        this.isDrawerVisible = !this.isDrawerVisible;
        if (this.drawer) {
            this.setDrawerVisible(this.isDrawerVisible);
        }
    };
    MdlLayoutComponent.prototype.closeDrawer = function () {
        this.isDrawerVisible = false;
        if (this.drawer) {
            this.setDrawerVisible(false);
        }
    };
    MdlLayoutComponent.prototype.setDrawerVisible = function (visible) {
        this.drawer.isDrawerVisible = visible;
        this.drawer.isDrawerVisible ? this.onOpen.emit() : this.onClose.emit();
    };
    MdlLayoutComponent.prototype.obfuscatorKeyDown = function ($event) {
        if ($event.keyCode === ESCAPE) {
            this.toggleDrawer();
        }
    };
    MdlLayoutComponent.prototype.ngOnDestroy = function () {
        if (this.scrollListener) {
            this.scrollListener();
            this.scrollListener = null;
        }
        this.screenSizeService.destroy();
    };
    // triggered from mdl-layout-header.component
    MdlLayoutComponent.prototype.tabSelected = function (tab) {
        var index = this.header.tabs.toArray().indexOf(tab);
        if (index != this.selectedIndex) {
            this.selectedIndex = index;
            this.updateSelectedTabIndex();
            this.selectedTabEmitter.emit({ index: this.selectedIndex });
        }
    };
    // triggered from mdl-layout-header.component
    MdlLayoutComponent.prototype.onTabMouseover = function (tab) {
        var index = this.header.tabs.toArray().indexOf(tab);
        this.mouseoverTabEmitter.emit({ index: index });
    };
    // triggered from mdl-layout-header.component
    MdlLayoutComponent.prototype.onTabMouseout = function (tab) {
        var index = this.header.tabs.toArray().indexOf(tab);
        this.mouseoutTabEmitter.emit({ index: index });
    };
    MdlLayoutComponent.prototype.closeDrawerOnSmallScreens = function () {
        if (this.isSmallScreen && this.isDrawerVisible) {
            this.closeDrawer();
        }
    };
    MdlLayoutComponent.prototype.hasDrawer = function () {
        return !!this.drawer;
    };
    MdlLayoutComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-layout',
                    template: "\n    <div class=\"mdl-layout__container\" [ngClass]=\"{'has-scrolling-header': mode==='scroll'}\">\n     <div class=\"mdl-layout is-upgraded\"\n          [ngClass]=\"{\n          'is-small-screen': isSmallScreen,\n          'mdl-layout--fixed-drawer': isFixedDrawer,\n          'mdl-layout--fixed-header': isFixedHeader,\n          'mdl-layout--fixed-tabs': 'tabs.toArray().length > 0'\n          }\">\n        <ng-content select=\"mdl-layout-header\"></ng-content>\n        <ng-content select=\"mdl-layout-drawer\"></ng-content>\n        <div *ngIf=\"drawer && isNoDrawer==false\" class=\"mdl-layout__drawer-button\" (click)=\"toggleDrawer()\">\n           <mdl-icon>&#xE5D2;</mdl-icon>\n        </div>\n        <ng-content select=\"mdl-layout-content\"></ng-content>\n        <div class=\"mdl-layout__obfuscator\"\n             [ngClass]=\"{'is-visible':isDrawerVisible}\"\n             (click)=\"toggleDrawer()\"\n             (keydown)=\"obfuscatorKeyDown($event)\"></div>\n     </div>\n    </div>\n  ",
                    exportAs: 'mdlLayout',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlLayoutComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
        { type: __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__["c" /* EventManager */], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"], },
        { type: MdlScreenSizeService, },
    ]; };
    MdlLayoutComponent.propDecorators = {
        'header': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ContentChild"], args: [__WEBPACK_IMPORTED_MODULE_5__mdl_layout_header_component__["a" /* MdlLayoutHeaderComponent */],] },],
        'drawer': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ContentChild"], args: [__WEBPACK_IMPORTED_MODULE_6__mdl_layout_drawer_component__["a" /* MdlLayoutDrawerComponent */],] },],
        'content': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ContentChild"], args: [__WEBPACK_IMPORTED_MODULE_7__mdl_layout_content_component__["a" /* MdlLayoutContentComponent */],] },],
        'mode': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-layout-mode',] },],
        'isFixedDrawer': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-layout-fixed-drawer',] },],
        'isFixedHeader': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-layout-fixed-header',] },],
        'isSeamed': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-layout-header-seamed',] },],
        'selectedIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-layout-tab-active-index',] },],
        'isRipple': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-ripple',] },],
        'isNoDrawer': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-layout-no-drawer-button',] },],
        'selectedTabEmitter': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"], args: ['mdl-layout-tab-active-changed',] },],
        'mouseoverTabEmitter': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"], args: ['mdl-layout-tab-mouseover',] },],
        'mouseoutTabEmitter': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"], args: ['mdl-layout-tab-mouseout',] },],
        'onOpen': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"], args: ['open',] },],
        'onClose': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"], args: ['close',] },],
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlLayoutComponent.prototype, "isFixedDrawer", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlLayoutComponent.prototype, "isFixedHeader", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlLayoutComponent.prototype, "isSeamed", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__common_number_property__["a" /* NumberProperty */])()
    ], MdlLayoutComponent.prototype, "selectedIndex", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlLayoutComponent.prototype, "isRipple", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlLayoutComponent.prototype, "isNoDrawer", void 0);
    return MdlLayoutComponent;
}());
//# sourceMappingURL=mdl-layout.component.js.map

/***/ },
/* 695 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mdl_tabs_component__ = __webpack_require__(781);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_tab_panel_component__ = __webpack_require__(717);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mdl_tab_panel_title_component__ = __webpack_require__(716);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_mdl_ripple_directive__ = __webpack_require__(687);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_index__ = __webpack_require__(705);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_common__ = __webpack_require__(100);
/* harmony export (binding) */ __webpack_require__.d(exports, "b", function() { return MdlTabsModule; });
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, "a", function() { return __WEBPACK_IMPORTED_MODULE_2__mdl_tab_panel_title_component__["a"]; });










var MDL_TABS_DIRECTIVES = [
    __WEBPACK_IMPORTED_MODULE_0__mdl_tabs_component__["a" /* MdlTabsComponent */],
    __WEBPACK_IMPORTED_MODULE_1__mdl_tab_panel_component__["a" /* MdlTabPanelComponent */],
    __WEBPACK_IMPORTED_MODULE_2__mdl_tab_panel_title_component__["a" /* MdlTabPanelTitleComponent */],
    __WEBPACK_IMPORTED_MODULE_1__mdl_tab_panel_component__["b" /* MdlTabPanelContent */]
];
var MdlTabsModule = (function () {
    function MdlTabsModule() {
    }
    MdlTabsModule.forRoot = function () {
        return {
            ngModule: MdlTabsModule,
            providers: []
        };
    };
    MdlTabsModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_3__angular_core__["NgModule"], args: [{
                    imports: [__WEBPACK_IMPORTED_MODULE_4__common_mdl_ripple_directive__["a" /* MdlRippleModule */], __WEBPACK_IMPORTED_MODULE_5__common_index__["a" /* MdlCommonsModule */], __WEBPACK_IMPORTED_MODULE_6__angular_common__["CommonModule"]],
                    exports: MDL_TABS_DIRECTIVES,
                    declarations: MDL_TABS_DIRECTIVES.slice(),
                },] },
    ];
    /** @nocollapse */
    MdlTabsModule.ctorParameters = function () { return []; };
    return MdlTabsModule;
}());
//# sourceMappingURL=index.js.map

/***/ },
/* 696 */
/***/ function(module, exports) {

module.exports = ".flex {\n  width: 100%;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex; }\n\n.column {\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column; }\n\n.panel {\n  border-radius: 5px; }\n\n.flex1 {\n  -webkit-box-flex: 1;\n      -ms-flex: 1;\n          flex: 1; }\n\n.flex2 {\n  -webkit-box-flex: 2;\n      -ms-flex: 2;\n          flex: 2; }\n\n.flex3 {\n  -webkit-box-flex: 3;\n      -ms-flex: 3;\n          flex: 3; }\n\n.flex4 {\n  -webkit-box-flex: 4;\n      -ms-flex: 4;\n          flex: 4; }\n\n.flex5 {\n  -webkit-box-flex: 5;\n      -ms-flex: 5;\n          flex: 5; }\n\n.flex6 {\n  -webkit-box-flex: 6;\n      -ms-flex: 6;\n          flex: 6; }\n\n.flex7 {\n  -webkit-box-flex: 7;\n      -ms-flex: 7;\n          flex: 7; }\n\n.flex8 {\n  -webkit-box-flex: 8;\n      -ms-flex: 8;\n          flex: 8; }\n\n.justify-content-start {\n  -webkit-box-pack: start;\n      -ms-flex-pack: start;\n          justify-content: flex-start; }\n\n.justify-content-end {\n  -webkit-box-pack: end;\n      -ms-flex-pack: end;\n          justify-content: flex-end; }\n\n.justify-content-center {\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center; }\n\n.justify-content-between {\n  -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n          justify-content: space-between; }\n\n.justify-content-around {\n  -ms-flex-pack: distribute;\n      justify-content: space-around; }\n\n.align-items-start {\n  -webkit-box-align: start;\n      -ms-flex-align: start;\n          align-items: flex-start; }\n\n.align-items-end {\n  -webkit-box-align: end;\n      -ms-flex-align: end;\n          align-items: flex-end; }\n\n.align-items-center {\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center; }\n\n.align-items-stretch {\n  -webkit-box-align: stretch;\n      -ms-flex-align: stretch;\n          align-items: stretch; }\n\n.align-items-baseline {\n  -webkit-box-align: baseline;\n      -ms-flex-align: baseline;\n          align-items: baseline; }\n\n.bottom-border {\n  border-bottom: 1px #cdcecf solid; }\n\n.top-border {\n  border-top: 1px #cdcecf solid; }\n\n.strong-text {\n  font-weight: bold;\n  color: #999; }\n\n.text-center {\n  text-align: center; }\n\n.text-right {\n  text-align: right; }\n\n.no-padding {\n  padding: 0px !important; }\n\n.padding-bottom10 {\n  padding-bottom: 10px; }\n\n.padding-bottom20 {\n  padding-bottom: 20px; }\n\n.padding-bottom30 {\n  padding-bottom: 30px; }\n\n.padding-top-bottom-5 {\n  padding: 5px 0px !important; }\n\n.padding-top-bottom-10 {\n  padding: 10px 0px !important; }\n\n.padding-top-bottom-15 {\n  padding: 15px 0px !important; }\n\n.padding-top-bottom-20 {\n  padding: 17px 0px !important; }\n\n.text-indent10 {\n  text-indent: 10px; }\n\n.text-indent20 {\n  text-indent: 20px; }\n\n.text-indent30 {\n  text-indent: 30px; }\n"

/***/ },
/* 697 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(64);
var Subscription_1 = __webpack_require__(145);
/**
 * @class AsyncSubject<T>
 */
var AsyncSubject = (function (_super) {
    __extends(AsyncSubject, _super);
    function AsyncSubject() {
        _super.apply(this, arguments);
        this.value = null;
        this.hasNext = false;
        this.hasCompleted = false;
    }
    AsyncSubject.prototype._subscribe = function (subscriber) {
        if (this.hasCompleted && this.hasNext) {
            subscriber.next(this.value);
            subscriber.complete();
            return Subscription_1.Subscription.EMPTY;
        }
        else if (this.hasError) {
            subscriber.error(this.thrownError);
            return Subscription_1.Subscription.EMPTY;
        }
        return _super.prototype._subscribe.call(this, subscriber);
    };
    AsyncSubject.prototype.next = function (value) {
        if (!this.hasCompleted) {
            this.value = value;
            this.hasNext = true;
        }
    };
    AsyncSubject.prototype.complete = function () {
        this.hasCompleted = true;
        if (this.hasNext) {
            _super.prototype.next.call(this, this.value);
        }
        _super.prototype.complete.call(this);
    };
    return AsyncSubject;
}(Subject_1.Subject));
exports.AsyncSubject = AsyncSubject;
//# sourceMappingURL=AsyncSubject.js.map

/***/ },
/* 698 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(64);
var queue_1 = __webpack_require__(798);
var observeOn_1 = __webpack_require__(376);
/**
 * @class ReplaySubject<T>
 */
var ReplaySubject = (function (_super) {
    __extends(ReplaySubject, _super);
    function ReplaySubject(bufferSize, windowTime, scheduler) {
        if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }
        if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }
        _super.call(this);
        this.scheduler = scheduler;
        this._events = [];
        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;
        this._windowTime = windowTime < 1 ? 1 : windowTime;
    }
    ReplaySubject.prototype.next = function (value) {
        var now = this._getNow();
        this._events.push(new ReplayEvent(now, value));
        this._trimBufferThenGetEvents();
        _super.prototype.next.call(this, value);
    };
    ReplaySubject.prototype._subscribe = function (subscriber) {
        var _events = this._trimBufferThenGetEvents();
        var scheduler = this.scheduler;
        if (scheduler) {
            subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));
        }
        var len = _events.length;
        for (var i = 0; i < len && !subscriber.closed; i++) {
            subscriber.next(_events[i].value);
        }
        return _super.prototype._subscribe.call(this, subscriber);
    };
    ReplaySubject.prototype._getNow = function () {
        return (this.scheduler || queue_1.queue).now();
    };
    ReplaySubject.prototype._trimBufferThenGetEvents = function () {
        var now = this._getNow();
        var _bufferSize = this._bufferSize;
        var _windowTime = this._windowTime;
        var _events = this._events;
        var eventsCount = _events.length;
        var spliceCount = 0;
        // Trim events that fall out of the time window.
        // Start at the front of the list. Break early once
        // we encounter an event that falls within the window.
        while (spliceCount < eventsCount) {
            if ((now - _events[spliceCount].time) < _windowTime) {
                break;
            }
            spliceCount++;
        }
        if (eventsCount > _bufferSize) {
            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);
        }
        if (spliceCount > 0) {
            _events.splice(0, spliceCount);
        }
        return _events;
    };
    return ReplaySubject;
}(Subject_1.Subject));
exports.ReplaySubject = ReplaySubject;
var ReplayEvent = (function () {
    function ReplayEvent(time, value) {
        this.time = time;
        this.value = value;
    }
    return ReplayEvent;
}());
//# sourceMappingURL=ReplaySubject.js.map

/***/ },
/* 699 */
/***/ function(module, exports) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when an element was queried at a certain index of an
 * Observable, but no such index or position exists in that sequence.
 *
 * @see {@link elementAt}
 * @see {@link take}
 * @see {@link takeLast}
 *
 * @class ArgumentOutOfRangeError
 */
var ArgumentOutOfRangeError = (function (_super) {
    __extends(ArgumentOutOfRangeError, _super);
    function ArgumentOutOfRangeError() {
        var err = _super.call(this, 'argument out of range');
        this.name = err.name = 'ArgumentOutOfRangeError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return ArgumentOutOfRangeError;
}(Error));
exports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;
//# sourceMappingURL=ArgumentOutOfRangeError.js.map

/***/ },
/* 700 */
/***/ function(module, exports) {

"use strict";
"use strict";
function isDate(value) {
    return value instanceof Date && !isNaN(+value);
}
exports.isDate = isDate;
//# sourceMappingURL=isDate.js.map

/***/ },
/* 701 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs__ = __webpack_require__(673);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__http_client_service__ = __webpack_require__(669);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lite_app_api__ = __webpack_require__(670);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_moment__ = __webpack_require__(668);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_moment__);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return ReportsManagerService; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var ReportsManagerService = (function () {
    function ReportsManagerService(http) {
        this.http = http;
        this.reports = {};
    }
    ReportsManagerService.prototype.resetReports = function () {
        this.reports = {};
    };
    ReportsManagerService.prototype.loadReports = function (fromTimestamp, toTimestamp, selectedRoom) {
        var _this = this;
        var params = "?start=" + fromTimestamp + "&end=" + toTimestamp;
        if (this.reports[params]) {
            var reports = selectedRoom ? this.reports[params].filter(function (report) { return report.roomId == selectedRoom; }) : this.reports[params];
            return new __WEBPACK_IMPORTED_MODULE_1_rxjs__["BehaviorSubject"](reports);
        }
        return this.http
            .get(__WEBPACK_IMPORTED_MODULE_3__lite_app_api__["a" /* LiteAppAPI */].ATTENDANCE_REPORT + params)
            .map(function (res) {
            var results = res.json();
            var reports = results.map(function (result) {
                var singleOutput = {
                    id: result.id,
                    name: result.name,
                    status: result.status,
                    roomId: result.roomId
                };
                var weekDays = {
                    Monday: {},
                    Tuesday: {},
                    Wednesday: {},
                    Thursday: {},
                    Friday: {}
                };
                singleOutput.records = result.attendanceRecords.reduce(function (prev, event) {
                    var weekDay = __WEBPACK_IMPORTED_MODULE_4_moment__(event.time).format('dddd');
                    var events = event.events.reduce(function (prev, _event) {
                        prev[_event.type] = __WEBPACK_IMPORTED_MODULE_4_moment__(_event.time).format('HH:mm');
                        return prev;
                    }, {});
                    prev[weekDay] = events;
                    return Object.assign(weekDays, prev);
                }, {});
                return singleOutput;
            });
            if (toTimestamp < (new Date()).getTime()) {
                _this.reports[params] = reports;
            }
            if (selectedRoom) {
                reports = reports.filter(function (report) { return report.roomId == selectedRoom; });
            }
            return reports;
        }, console.error);
    };
    ReportsManagerService = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__http_client_service__["a" /* HttpClientService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__http_client_service__["a" /* HttpClientService */]) === 'function' && _a) || Object])
    ], ReportsManagerService);
    return ReportsManagerService;
    var _a;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/reports-manager.service.js.map

/***/ },
/* 702 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs__ = __webpack_require__(673);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_http_client_service__ = __webpack_require__(669);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_lite_app_api__ = __webpack_require__(670);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return SubventionsManagerService; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var SubventionsManagerService = (function () {
    function SubventionsManagerService(httpService) {
        this.httpService = httpService;
        this.grants = [];
        this.store = new __WEBPACK_IMPORTED_MODULE_1_rxjs__["Subject"]();
    }
    Object.defineProperty(SubventionsManagerService.prototype, "store$", {
        get: function () {
            return this.store.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    SubventionsManagerService.prototype.getChildren = function () {
        var _this = this;
        return this.httpService.get(__WEBPACK_IMPORTED_MODULE_3__shared_lite_app_api__["a" /* LiteAppAPI */].ECCE_CHILDREN_ENDPOINT)
            .map(function (res) {
            var grants = res.json();
            return grants.map(_this.grantFromResponse);
        }).do(function (grants) {
            _this.grants = grants;
            _this.store.next(grants);
            return _this.store$;
        }, function (e) {
            _this.handleError(e);
        });
    };
    SubventionsManagerService.prototype.grantFromResponse = function (response) {
        // REVIEW: do this on the server ?
        response.days = response.days || [];
        response.status = !!response.status;
        response.extras = {
            meals: response.extras.meals || 0,
            trips: response.extras.trips || 0,
            hours: response.extras.hours || 0,
            other: response.extras.other || 0,
            voluntary: response.extras.voluntary || 0
        };
        return response;
    };
    SubventionsManagerService.prototype.updateChildDetails = function (child) {
        var _this = this;
        return this.httpService.put(__WEBPACK_IMPORTED_MODULE_3__shared_lite_app_api__["a" /* LiteAppAPI */].UPDATE_SUBVENTION(child.id), child)
            .map(function (res) {
            var grant = _this.grantFromResponse(res.json());
            _this.grants = _this.grants.map(function (_child) {
                if (_child.id === grant.id) {
                    return Object.assign({}, _child, grant);
                }
                return _child;
            });
            _this.store.next(_this.grants);
            return grant;
        });
    };
    SubventionsManagerService.prototype.handleError = function (error) {
        console.error('An error occurred', error);
        return error;
    };
    SubventionsManagerService = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__shared_http_client_service__["a" /* HttpClientService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__shared_http_client_service__["a" /* HttpClientService */]) === 'function' && _a) || Object])
    ], SubventionsManagerService);
    return SubventionsManagerService;
    var _a;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/subventions-manager.service.js.map

/***/ },
/* 703 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_chip_component__ = __webpack_require__(704);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_mdl_error__ = __webpack_require__(675);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlChipContactDirective; });



var MdlChipContactDirective = (function () {
    function MdlChipContactDirective(mdlChipComponent) {
        this.mdlChipComponent = mdlChipComponent;
    }
    MdlChipContactDirective.prototype.ngOnInit = function () {
        if (!this.mdlChipComponent) {
            throw new __WEBPACK_IMPORTED_MODULE_2__common_mdl_error__["b" /* MdlStructureError */]('mdl-chip-contact', 'mdl-chip');
        }
    };
    MdlChipContactDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: '[mdl-chip-contact]',
                    host: {
                        '[class.mdl-chip__contact]': 'true'
                    }
                },] },
    ];
    /** @nocollapse */
    MdlChipContactDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_1__mdl_chip_component__["a" /* MdlChipComponent */], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Optional"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Inject"], args: [__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["forwardRef"])(function () { return __WEBPACK_IMPORTED_MODULE_1__mdl_chip_component__["a" /* MdlChipComponent */]; }),] },] },
    ]; };
    return MdlChipContactDirective;
}());
//# sourceMappingURL=mdl-chip-contact.directive.js.map

/***/ },
/* 704 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_chip_contact_directive__ = __webpack_require__(703);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlChipComponent; });


var MdlChipComponent = (function () {
    function MdlChipComponent() {
        this.actionClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    MdlChipComponent.prototype.action = function () {
        this.actionClick.emit();
    };
    MdlChipComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-chip',
                    host: {
                        '[class.mdl-chip]': 'true',
                        '[class.mdl-chip--contact]': 'chipContact'
                    },
                    template: "\n    <ng-content></ng-content>\n    <span *ngIf=\"mdlLabel\" class=\"mdl-chip__text\">{{mdlLabel}}</span>\n    <button *ngIf=\"mdlActionIcon\" (click)=\"action()\" type=\"button\" class=\"mdl-chip__action\">\n      <mdl-icon>{{mdlActionIcon}}</mdl-icon>\n    </button>\n  ",
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlChipComponent.ctorParameters = function () { return []; };
    MdlChipComponent.propDecorators = {
        'mdlLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-label',] },],
        'mdlActionIcon': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-action-icon',] },],
        'actionClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"], args: ['action-click',] },],
        'chipContact': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ContentChild"], args: [__WEBPACK_IMPORTED_MODULE_1__mdl_chip_contact_directive__["a" /* MdlChipContactDirective */],] },],
    };
    return MdlChipComponent;
}());
//# sourceMappingURL=mdl-chip.component.js.map

/***/ },
/* 705 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__append_view_container_ref_directive__ = __webpack_require__(758);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlCommonsModule; });


var MdlCommonsModule = (function () {
    function MdlCommonsModule() {
    }
    MdlCommonsModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [],
                    exports: [__WEBPACK_IMPORTED_MODULE_1__append_view_container_ref_directive__["a" /* AppendViewContainerRefDirective */]],
                    declarations: [__WEBPACK_IMPORTED_MODULE_1__append_view_container_ref_directive__["a" /* AppendViewContainerRefDirective */]],
                },] },
    ];
    /** @nocollapse */
    MdlCommonsModule.ctorParameters = function () { return []; };
    return MdlCommonsModule;
}());
//# sourceMappingURL=index.js.map

/***/ },
/* 706 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlBackdropOverlayComponent; });

var MdlBackdropOverlayComponent = (function () {
    function MdlBackdropOverlayComponent() {
        this.clickEmitter = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.visible = false;
        this.zIndex = 0;
    }
    Object.defineProperty(MdlBackdropOverlayComponent.prototype, "display", {
        get: function () {
            return this.visible ? null : 'none';
        },
        enumerable: true,
        configurable: true
    });
    MdlBackdropOverlayComponent.prototype.onBackdropClick = function (e) {
        this.clickEmitter.emit();
        e.stopPropagation();
    };
    MdlBackdropOverlayComponent.prototype.hide = function () {
        this.visible = false;
    };
    MdlBackdropOverlayComponent.prototype.showWithZIndex = function (zIndex) {
        this.zIndex = zIndex;
        this.visible = true;
    };
    MdlBackdropOverlayComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-backdrop-overlay',
                    host: {
                        '[class.dialog-backdrop]': 'true',
                    },
                    template: "",
                    styles: [
                        "    \n      .dialog-backdrop {\n        position: fixed;\n        top: 0; right: 0; bottom: 0; left: 0;\n        background: rgba(0,0,0,0.1);\n      }\n    "
                    ],
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlBackdropOverlayComponent.ctorParameters = function () { return []; };
    MdlBackdropOverlayComponent.propDecorators = {
        'display': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["HostBinding"], args: ['style.display',] },],
        'zIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["HostBinding"], args: ['style.zIndex',] },],
        'onBackdropClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"], args: ['click', ['$event'],] },],
    };
    return MdlBackdropOverlayComponent;
}());
//# sourceMappingURL=mdl-backdrop-overlay.component.js.map

/***/ },
/* 707 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_dialog_outlet_service__ = __webpack_require__(688);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlDialogOutletComponent; });
/* harmony export (binding) */ __webpack_require__.d(exports, "b", function() { return MdlDialogInnerOutletComponent; });


// the componnet is used outside the app-root. injecting MdlDialogService would not work
// this component is not exported - needs to be instanciated by
//    let x = this.appRef.bootstrap(MdlDialogOutletComponent);
var MdlDialogOutletComponent = (function () {
    function MdlDialogOutletComponent(vCRef) {
        this.vCRef = vCRef;
    }
    Object.defineProperty(MdlDialogOutletComponent.prototype, "viewContainerRef", {
        get: function () {
            return this.vCRef;
        },
        enumerable: true,
        configurable: true
    });
    MdlDialogOutletComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'dialog-outlet',
                    template: ''
                },] },
    ];
    /** @nocollapse */
    MdlDialogOutletComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewContainerRef"], },
    ]; };
    return MdlDialogOutletComponent;
}());
// the component is used inside the app-root. this is possible because this component
// is exported from the module
var MdlDialogInnerOutletComponent = (function () {
    function MdlDialogInnerOutletComponent(vCRef, service) {
        this.vCRef = vCRef;
        service.setDefaultViewContainerRef(vCRef);
    }
    MdlDialogInnerOutletComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'dialog-outlet',
                    template: ''
                },] },
    ];
    /** @nocollapse */
    MdlDialogInnerOutletComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewContainerRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_1__mdl_dialog_outlet_service__["a" /* MdlDialogOutletService */], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Inject"], args: [__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["forwardRef"])(function () { return __WEBPACK_IMPORTED_MODULE_1__mdl_dialog_outlet_service__["a" /* MdlDialogOutletService */]; }),] },] },
    ]; };
    return MdlDialogInnerOutletComponent;
}());
//# sourceMappingURL=mdl-dialog-outlet.component.js.map

/***/ },
/* 708 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_dialog_service__ = __webpack_require__(677);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__button_mdl_button_component__ = __webpack_require__(680);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__internal_dialog_reference__ = __webpack_require__(760);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlDialogHostComponent; });




var enterTransitionDuration = 300;
var leaveTransitionDuration = 250;
var enterTransitionEasingCurve = 'cubic-bezier(0.0, 0.0, 0.2, 1)';
var leaveTransitionEasingCurve = 'cubic-bezier(0.0, 0.0, 0.2, 1)';
// @experimental
var MdlDialogHostComponent = (function () {
    function MdlDialogHostComponent(ngZone, renderer, elementRef, config, internalDialogRef) {
        this.ngZone = ngZone;
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.config = config;
        this.internalDialogRef = internalDialogRef;
        this.visible = false;
        this.showAnimationStartStyle = {
            top: '38%',
            opacity: '0',
            visibility: 'visible'
        };
        this.showStyle = {
            top: '50%',
            opacity: '1',
            visibility: 'visible'
        };
        this.hideAnimationEndStyle = {
            top: '63%',
            opacity: '0',
            visibility: 'visible'
        };
        this.zIndex = __WEBPACK_IMPORTED_MODULE_1__mdl_dialog_service__["c" /* MIN_DIALOG_Z_INDEX */] + 1;
    }
    MdlDialogHostComponent.prototype.show = function () {
        var _this = this;
        if (!this.isAnimateEnabled()) {
            this.visible = true;
            // give the dialogs time to draw so that a focus can be set
            setTimeout(function () {
                _this.internalDialogRef.visible();
            });
        }
        else {
            if (this.config.openFrom || this.config.closeTo) {
                // transform is modified during anmiation and must be part of each animation keyframe.
                this.showStyle['transform'] = 'translate(0, -50%) scale(1.0)';
                var targetClientRect = this.elementRef.nativeElement.getBoundingClientRect();
                var openFromRect = this.getClientRect(this.config.openFrom);
                var closeToRect = this.config.closeTo ? this.getClientRect(this.config.closeTo) : openFromRect;
                var centerTarget = this.getCenterInScreen(targetClientRect);
                var centerFrom = this.getCenterInScreen(openFromRect);
                var centerTo = this.getCenterInScreen(closeToRect);
                var translationFrom = {
                    x: Math.round(centerFrom.cx - centerTarget.cx),
                    y: Math.round(centerFrom.cy - centerTarget.cy),
                    scaleX: Math.round(100 * Math.min(0.25, openFromRect.width / targetClientRect.width)) / 100,
                    scaleY: Math.round(100 * Math.min(0.25, openFromRect.height / targetClientRect.height)) / 100
                };
                this.showAnimationStartStyle = {
                    top: targetClientRect.top + "px",
                    opacity: '0',
                    visibility: 'visible',
                    transform: "translate(" + translationFrom.x + "px, " + translationFrom.y + "px) scale(" + translationFrom.scaleX + ", " + translationFrom.scaleY + ")"
                };
                var translationTo = {
                    x: Math.round(centerTo.cx - centerTarget.cx),
                    y: Math.round(centerTo.cy - centerTarget.cy),
                    scaleX: Math.round(100 * Math.min(0.25, closeToRect.width / targetClientRect.width)) / 100,
                    scaleY: Math.round(100 * Math.min(0.25, closeToRect.height / targetClientRect.height)) / 100
                };
                this.hideAnimationEndStyle = {
                    top: targetClientRect.top + "px",
                    opacity: '0',
                    visibility: 'visible',
                    transform: "translate(" + translationTo.x + "px, " + translationTo.y + "px) scale(" + translationTo.scaleX + ", " + translationTo.scaleY + ")"
                };
            }
            var animation = this.renderer.animate(this.elementRef.nativeElement, null, [
                { offset: 0, styles: { styles: [this.showAnimationStartStyle] } },
                { offset: 1, styles: { styles: [this.showStyle] } }
            ], this.config.enterTransitionDuration || enterTransitionDuration, 0, this.config.enterTransitionEasingCurve || enterTransitionEasingCurve);
            animation.onDone(function () {
                _this.ngZone.run(function () {
                    _this.visible = true;
                });
            });
            animation.play();
            this.internalDialogRef.visible();
        }
    };
    MdlDialogHostComponent.prototype.hide = function (selfComponentRef) {
        var _this = this;
        if (this.isAnimateEnabled()) {
            var animation = this.renderer.animate(this.elementRef.nativeElement, null, [
                { offset: 0, styles: { styles: [this.showStyle] } },
                { offset: 1, styles: { styles: [this.hideAnimationEndStyle] } }
            ], this.config.leaveTransitionDuration || leaveTransitionDuration, 0, this.config.leaveTransitionEasingCurve || leaveTransitionEasingCurve);
            animation.onDone(function () {
                _this.ngZone.run(function () {
                    selfComponentRef.destroy();
                });
            });
            animation.play();
        }
        else {
            selfComponentRef.destroy();
        }
    };
    MdlDialogHostComponent.prototype.ngOnInit = function () {
        this.applyStyle(this.config.styles);
        this.applyClasses(this.config.classes ? this.config.classes : '');
    };
    MdlDialogHostComponent.prototype.applyStyle = function (styles) {
        if (styles) {
            for (var style in styles) {
                this.renderer.setElementStyle(this.elementRef.nativeElement, style, styles[style]);
            }
        }
    };
    MdlDialogHostComponent.prototype.applyClasses = function (classes) {
        var _this = this;
        classes.split(' ').filter(function (cssClass) { return !!cssClass; }).forEach(function (cssClass) {
            _this.renderer.setElementClass(_this.elementRef.nativeElement, cssClass, true);
        });
    };
    MdlDialogHostComponent.prototype.isAnimateEnabled = function () {
        // not present?  assume it is true.
        if (typeof this.config.animate === 'undefined') {
            return true;
        }
        return this.config.animate;
    };
    MdlDialogHostComponent.prototype.getClientRect = function (input) {
        if (input instanceof __WEBPACK_IMPORTED_MODULE_2__button_mdl_button_component__["a" /* MdlButtonComponent */]) {
            var elRef = input.elementRef;
            var rect = elRef.nativeElement.getBoundingClientRect();
            return this.createOpenCloseRect(rect);
        }
        else if (input instanceof MouseEvent) {
            var evt = input;
            // just to make it possible to test this code with a fake event - target is
            // readonly and con not be mutated.
            var htmlElement = (evt.target || evt['testtarget']);
            var rect = htmlElement.getBoundingClientRect();
            return this.createOpenCloseRect(rect);
        }
        return input;
    };
    MdlDialogHostComponent.prototype.createOpenCloseRect = function (rect) {
        return {
            height: rect.top - rect.bottom,
            left: rect.left,
            top: rect.top,
            width: rect.right - rect.left
        };
    };
    MdlDialogHostComponent.prototype.getCenterInScreen = function (rect) {
        return {
            cx: Math.round(rect.left + (rect.width / 2)),
            cy: Math.round(rect.top + (rect.height / 2))
        };
    };
    MdlDialogHostComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-dialog-host-component',
                    host: {
                        '[class.mdl-dialog]': 'true',
                        '[class.open]': 'visible',
                        '[style.zIndex]': 'zIndex',
                    },
                    template: "<div #dialogTarget></div>",
                    styles: [
                        "\n    mdl-dialog-host-component {\n      width: -moz-fit-content;\n      width: -webkit-fit-content;\n      width: fit-content;\n      height: -moz-fit-content;\n      height: -webkit-fit-content;\n      height: fit-content;\n      padding: 1em;\n      background: white;\n      color: black;\n      opacity: 1;\n      visibility: hidden;\n      display: block;\n      position: fixed;\n      margin: auto;\n      left: 0;\n      right: 0;\n      transition: all;\n      top: 50%;\n      transform: translate(0, -50%);\n    }\n    \n    mdl-dialog-host-component.open {\n      visibility: visible;\n    }\n    \n    "
                    ],
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlDialogHostComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Inject"], args: [__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["forwardRef"])(function () { return __WEBPACK_IMPORTED_MODULE_1__mdl_dialog_service__["a" /* MDL_CONFIGUARTION */]; }),] },] },
        { type: __WEBPACK_IMPORTED_MODULE_3__internal_dialog_reference__["a" /* InternalMdlDialogReference */], },
    ]; };
    MdlDialogHostComponent.propDecorators = {
        'dialogTarget': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"], args: ['dialogTarget', { read: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewContainerRef"] },] },],
    };
    return MdlDialogHostComponent;
}());
//# sourceMappingURL=mdl-dialog-host.component.js.map

/***/ },
/* 709 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_dialog_service__ = __webpack_require__(677);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlSimpleDialogComponent; });


var MdlSimpleDialogComponent = (function () {
    // why do i need forwardRef at this point, the demo LoginDialog dosn't need this!?!?
    function MdlSimpleDialogComponent(dialogConfiguration, dialog) {
        var _this = this;
        this.dialogConfiguration = dialogConfiguration;
        this.dialog = dialog;
        dialog.onVisible().subscribe(function () {
            if (_this.buttons) {
                _this.buttons.first.nativeElement.focus();
            }
        });
    }
    MdlSimpleDialogComponent.prototype.actionClicked = function (action) {
        action.handler();
        this.dialog.hide();
    };
    MdlSimpleDialogComponent.prototype.onEsc = function () {
        // run the first action that is marked as closing action
        var closeAction = this.dialogConfiguration.actions.find(function (action) { return action.isClosingAction; });
        if (closeAction) {
            closeAction.handler();
            this.dialog.hide();
        }
    };
    MdlSimpleDialogComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-dialog-component',
                    template: "\n      <h3 class=\"mdl-dialog__title\" *ngIf=\"dialogConfiguration?.title\">{{dialogConfiguration?.title}}</h3>\n      <div class=\"mdl-dialog__content\" [innerHTML]=\"dialogConfiguration?.message\"></div>\n      <div \n        class=\"mdl-dialog__actions\" \n        [ngClass]=\"{'mdl-dialog__actions--full-width': dialogConfiguration?.fullWidthAction}\">\n        <button\n          #button\n          type=\"button\" \n          class=\"mdl-button mdl-color-text--primary\" \n          *ngFor=\"let action of dialogConfiguration?.actions\" \n          (click)=\"actionClicked(action)\"\n          [ngClass]=\"{'close': action.isClosingAction}\">{{action.text}}</button>\n      </div>\n  ",
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlSimpleDialogComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Inject"], args: [__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["forwardRef"])(function () { return __WEBPACK_IMPORTED_MODULE_1__mdl_dialog_service__["a" /* MDL_CONFIGUARTION */]; }),] },] },
        { type: __WEBPACK_IMPORTED_MODULE_1__mdl_dialog_service__["b" /* MdlDialogReference */], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Inject"], args: [__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["forwardRef"])(function () { return __WEBPACK_IMPORTED_MODULE_1__mdl_dialog_service__["b" /* MdlDialogReference */]; }),] },] },
    ]; };
    MdlSimpleDialogComponent.propDecorators = {
        'buttons': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChildren"], args: ['button',] },],
        'onEsc': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"], args: ['keydown.esc',] },],
    };
    return MdlSimpleDialogComponent;
}());
//# sourceMappingURL=mdl-simple-dialog.component.js.map

/***/ },
/* 710 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_layout_tab_panel_component__ = __webpack_require__(713);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlLayoutContentComponent; });


var MdlLayoutContentComponent = (function () {
    function MdlLayoutContentComponent(elRef) {
        this.elRef = elRef;
        this.el = elRef.nativeElement;
    }
    MdlLayoutContentComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-layout-content',
                    host: {
                        '[class.mdl-layout__content]': 'true',
                    },
                    template: "<ng-content></ng-content>",
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None,
                },] },
    ];
    /** @nocollapse */
    MdlLayoutContentComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
    ]; };
    MdlLayoutContentComponent.propDecorators = {
        'tabs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ContentChildren"], args: [__WEBPACK_IMPORTED_MODULE_1__mdl_layout_tab_panel_component__["a" /* MdlLayoutTabPanelComponent */],] },],
    };
    return MdlLayoutContentComponent;
}());
//# sourceMappingURL=mdl-layout-content.component.js.map

/***/ },
/* 711 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_layout_component__ = __webpack_require__(694);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlLayoutDrawerComponent; });


var MdlLayoutDrawerComponent = (function () {
    function MdlLayoutDrawerComponent(parentLayout) {
        this.parentLayout = parentLayout;
        this.isDrawerVisible = false;
    }
    MdlLayoutDrawerComponent.prototype.isDrawerDirectChildOf = function (layout) {
        return this.parentLayout === layout;
    };
    MdlLayoutDrawerComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-layout-drawer',
                    host: {
                        '[class.mdl-layout__drawer]': 'true',
                        '[class.is-visible]': 'isDrawerVisible'
                    },
                    template: "<ng-content></ng-content>",
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlLayoutDrawerComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_1__mdl_layout_component__["a" /* MdlLayoutComponent */], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Optional"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Inject"], args: [__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["forwardRef"])(function () { return __WEBPACK_IMPORTED_MODULE_1__mdl_layout_component__["a" /* MdlLayoutComponent */]; }),] },] },
    ]; };
    return MdlLayoutDrawerComponent;
}());
//# sourceMappingURL=mdl-layout-drawer.component.js.map

/***/ },
/* 712 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_layout_component__ = __webpack_require__(694);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlLayoutHeaderComponent; });


var MdlLayoutHeaderComponent = (function () {
    function MdlLayoutHeaderComponent(elementRef, renderer, mdlLayout) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.mdlLayout = mdlLayout;
        this.isCompact = false;
        this.isAnimating = false;
        this.isSeamed = false;
        this.isRipple = true;
        this.el = elementRef.nativeElement;
    }
    MdlLayoutHeaderComponent.prototype.onTransitionEnd = function () {
        this.isAnimating = false;
    };
    MdlLayoutHeaderComponent.prototype.onClick = function () {
        if (this.isCompact) {
            this.isCompact = false;
            this.isAnimating = true;
        }
    };
    MdlLayoutHeaderComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-layout-header',
                    host: {
                        '[class.mdl-layout__header]': 'true',
                        '[class.is-casting-shadow]': 'mode==="standard" || isCompact',
                        '[class.mdl-layout__header--seamed]': 'isSeamed',
                        '[class.mdl-layout__header--waterfall]': 'mode==="waterfall"',
                        '[class.mdl-layout__header--scroll]': 'mode==="scroll"',
                        '[class.is-compact]': 'isCompact',
                        '(transitionend)': 'onTransitionEnd()',
                        '(click)': 'onClick()'
                    },
                    template: "\n     <ng-content></ng-content>\n     <div *ngIf=\"tabs?.toArray()?.length > 0\" class=\"mdl-layout__tab-bar-container\">\n         <div class=\"mdl-layout__tab-bar is-casting-shadow\">\n           <div *ngFor=\"let tab of tabs.toArray()\" \n                class=\"mdl-layout__tab\" \n                [ngClass]=\"{'is-active': tab.isActive}\"\n                (mouseover)=\"mdlLayout.onTabMouseover(tab)\" \n                (mouseout)=\"mdlLayout.onTabMouseout(tab)\">\n              <div \n                *ngIf=\"tab.titleComponent\" \n                (click)=\"mdlLayout.tabSelected(tab)\"\n                [mdl-ripple]=\"isRipple\"\n                [append-view-container-ref]=\"tab.titleComponent.vcRef\"></div>\n              <a *ngIf=\"!tab.titleComponent\" \n                    href=\"javascript:void(0)\"   \n                    (click)=\"mdlLayout.tabSelected(tab)\"\n                    class=\"mdl-layout__tab\" \n                    [ngClass]=\"{'is-active': tab.isActive}\"\n                    [mdl-ripple]=\"isRipple\"\n                   >{{tab.title}}</a>\n             </div>\n         </div>\n     </div>\n  ",
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlLayoutHeaderComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
        { type: __WEBPACK_IMPORTED_MODULE_1__mdl_layout_component__["a" /* MdlLayoutComponent */], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Inject"], args: [__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["forwardRef"])(function () { return __WEBPACK_IMPORTED_MODULE_1__mdl_layout_component__["a" /* MdlLayoutComponent */]; }),] },] },
    ]; };
    return MdlLayoutHeaderComponent;
}());
//# sourceMappingURL=mdl-layout-header.component.js.map

/***/ },
/* 713 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tabs_index__ = __webpack_require__(695);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlLayoutTabPanelComponent; });


var MdlLayoutTabPanelComponent = (function () {
    function MdlLayoutTabPanelComponent() {
        this.isActive = false;
    }
    MdlLayoutTabPanelComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-layout-tab-panel',
                    host: {
                        '[class.mdl-layout__tab-panel]': 'true',
                        '[class.is-active]': 'isActive'
                    },
                    template: "\n   <ng-content *ngIf=\"titleComponent\" select=\"mdl-tab-panel-content\"></ng-content>\n   <ng-content *ngIf=\"!titleComponent\"></ng-content>\n   ",
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlLayoutTabPanelComponent.ctorParameters = function () { return []; };
    MdlLayoutTabPanelComponent.propDecorators = {
        'titleComponent': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ContentChild"], args: [__WEBPACK_IMPORTED_MODULE_1__tabs_index__["a" /* MdlTabPanelTitleComponent */],] },],
        'title': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-layout-tab-panel-title',] },],
    };
    return MdlLayoutTabPanelComponent;
}());
//# sourceMappingURL=mdl-layout-tab-panel.component.js.map

/***/ },
/* 714 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_menu_component__ = __webpack_require__(715);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_boolean_property__ = __webpack_require__(667);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlMenuItemComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var MdlMenuItemComponent = (function () {
    // forwardRef is needed because of he circular dependency menu queries menuitems; menuitem needs the parent
    function MdlMenuItemComponent(elementRef, renderer, mdlMenu) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.mdlMenu = mdlMenu;
        this.element = elementRef.nativeElement;
    }
    MdlMenuItemComponent.prototype.onClick = function ($event) {
        $event.stopPropagation();
        if (this.disabled) {
            this.mdlMenu.hide();
            return;
        }
        this.mdlMenu.hideOnItemClicked();
    };
    // we need to register a touchstart at the window to get informed if the user taps outside the menu.
    // But if we register a touchstart event - safari will no longer convert touch events to click events.
    // So we need to convert touch to click and the user still needs to register a (click) listener to be
    // informed if the menu item has clicked.
    MdlMenuItemComponent.prototype.onTouch = function ($event) {
        // ensure that this event is totally consumed
        $event.stopPropagation();
        $event.preventDefault();
        var event = new MouseEvent('click', { bubbles: true });
        this.renderer.invokeElementMethod(this.element, 'dispatchEvent', [event]);
    };
    MdlMenuItemComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-menu-item',
                    host: {
                        '[class.mdl-menu__item]': 'true',
                        'tabindex': '-1',
                        '(click)': 'onClick($event)',
                        '(touchstart)': 'onTouch($event)'
                    },
                    template: '<ng-content></ng-content>',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlMenuItemComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
        { type: __WEBPACK_IMPORTED_MODULE_1__mdl_menu_component__["a" /* MdlMenuComponent */], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Inject"], args: [__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["forwardRef"])(function () { return __WEBPACK_IMPORTED_MODULE_1__mdl_menu_component__["a" /* MdlMenuComponent */]; }),] },] },
    ]; };
    MdlMenuItemComponent.propDecorators = {
        'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['disabled',] },],
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlMenuItemComponent.prototype, "disabled", void 0);
    return MdlMenuItemComponent;
}());
//# sourceMappingURL=mdl-menu-item.component.js.map

/***/ },
/* 715 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_menu_item_component__ = __webpack_require__(714);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_mdl_error__ = __webpack_require__(675);
/* unused harmony export MdlMenuError */
/* harmony export (binding) */ __webpack_require__.d(exports, "b", function() { return MdlMenuRegisty; });
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlMenuComponent; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};



var BOTTOM_LEFT = 'bottom-left';
var BOTTOM_RIGHT = 'bottom-right';
var TOP_LEFT = 'top-left';
var TOP_RIGHT = 'top-right';
var UNALIGNED = 'unaligned';
// Total duration of the menu animation.
var TRANSITION_DURATION_SECONDS = 0.3;
// The fraction of the total duration we want to use for menu item animations.
var TRANSITION_DURATION_FRACTION = 0.8;
// How long the menu stays open after choosing an option (so the user can see
// the ripple).
var CLOSE_TIMEOUT = 175;
var CSS_ALIGN_MAP = {};
CSS_ALIGN_MAP[BOTTOM_LEFT] = 'mdl-menu--bottom-left';
CSS_ALIGN_MAP[BOTTOM_RIGHT] = 'mdl-menu--bottom-right';
CSS_ALIGN_MAP[TOP_LEFT] = 'mdl-menu--top-left';
CSS_ALIGN_MAP[TOP_RIGHT] = 'mdl-menu--top-right';
CSS_ALIGN_MAP[UNALIGNED] = 'mdl-menu--unaligned';
var MdlMenuError = (function (_super) {
    __extends(MdlMenuError, _super);
    function MdlMenuError() {
        _super.apply(this, arguments);
    }
    return MdlMenuError;
}(__WEBPACK_IMPORTED_MODULE_2__common_mdl_error__["a" /* MdlError */]));
var MdlMenuRegisty = (function () {
    function MdlMenuRegisty() {
        this.menuComponents = [];
    }
    MdlMenuRegisty.prototype.add = function (menuComponent) {
        this.menuComponents.push(menuComponent);
    };
    MdlMenuRegisty.prototype.remove = function (menuComponent) {
        this.menuComponents.slice(this.menuComponents.indexOf(menuComponent), 1);
    };
    MdlMenuRegisty.prototype.hideAllExcept = function (menuComponent) {
        this.menuComponents.forEach(function (component) {
            if (component !== menuComponent) {
                component.hide();
            }
        });
    };
    MdlMenuRegisty.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"] },
    ];
    /** @nocollapse */
    MdlMenuRegisty.ctorParameters = function () { return []; };
    return MdlMenuRegisty;
}());
var MdlMenuComponent = (function () {
    function MdlMenuComponent(renderer, menuRegistry) {
        this.renderer = renderer;
        this.menuRegistry = menuRegistry;
        this.cssPosition = 'mdl-menu--bottom-left';
        this.isVisible = false;
        this.menuRegistry.add(this);
    }
    MdlMenuComponent.prototype.ngOnInit = function () {
        this.cssPosition = CSS_ALIGN_MAP[this.position] || BOTTOM_LEFT;
    };
    MdlMenuComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.container = this.containerChild.nativeElement;
        this.menuElement = this.menuElementChild.nativeElement;
        this.outline = this.outlineChild.nativeElement;
        // Add a click listener to the document, to close the menu.
        var callback = function () {
            if (_this.isVisible) {
                _this.hide();
            }
        };
        this.renderer.listenGlobal('window', 'click', callback);
        this.renderer.listenGlobal('window', 'touchstart', callback);
    };
    MdlMenuComponent.prototype.toggle = function (event, mdlButton) {
        if (!mdlButton) {
            throw new MdlMenuError("MdlButtonComponent is required");
        }
        if (this.isVisible) {
            this.hide();
        }
        else {
            this.show(event, mdlButton);
        }
    };
    MdlMenuComponent.prototype.hideOnItemClicked = function () {
        var _this = this;
        // Wait some time before closing menu, so the user can see the ripple.
        setTimeout(function () {
            _this.hide();
        }, CLOSE_TIMEOUT);
    };
    MdlMenuComponent.prototype.hide = function () {
        // Remove all transition delays; menu items fade out concurrently.
        this.menuItemComponents.toArray().forEach(function (mi) {
            mi.element.style.removeProperty('transition-delay');
        });
        // Measure the inner element.
        var rect = this.menuElement.getBoundingClientRect();
        var height = rect.height;
        var width = rect.width;
        // Turn on animation, and apply the final clip. Also make invisible.
        // This triggers the transitions.
        this.renderer.setElementClass(this.menuElement, 'is-animating', true);
        this.applyClip(height, width);
        this.renderer.setElementClass(this.container, 'is-visible', false);
        // Clean up after the animation is complete.
        this.addAnimationEndListener();
        this.isVisible = false;
    };
    MdlMenuComponent.prototype.show = function (event, mdlButton) {
        var _this = this;
        this.menuRegistry.hideAllExcept(this);
        event.stopPropagation();
        var forElement = mdlButton.element;
        var rect = forElement.getBoundingClientRect();
        var forRect = forElement.parentElement.getBoundingClientRect();
        if (this.position == UNALIGNED) {
        }
        else if (this.position == BOTTOM_RIGHT) {
            // Position below the "for" element, aligned to its right.
            this.container.style.right = (forRect.right - rect.right) + 'px';
            this.container.style.top = forElement.offsetTop + forElement.offsetHeight + 'px';
        }
        else if (this.position == TOP_LEFT) {
            // Position above the "for" element, aligned to its left.
            this.container.style.left = forElement.offsetLeft + 'px';
            this.container.style.bottom = (forRect.bottom - rect.top) + 'px';
        }
        else if (this.position == TOP_RIGHT) {
            // Position above the "for" element, aligned to its right.
            this.container.style.right = (forRect.right - rect.right) + 'px';
            this.container.style.bottom = (forRect.bottom - rect.top) + 'px';
        }
        else {
            // Default: position below the "for" element, aligned to its left.
            this.container.style.left = forElement.offsetLeft + 'px';
            this.container.style.top = forElement.offsetTop + forElement.offsetHeight + 'px';
        }
        // Measure the inner element.
        var height = this.menuElement.getBoundingClientRect().height;
        var width = this.menuElement.getBoundingClientRect().width;
        this.container.style.width = width + 'px';
        this.container.style.height = height + 'px';
        this.outline.style.width = width + 'px';
        this.outline.style.height = height + 'px';
        var transitionDuration = TRANSITION_DURATION_SECONDS * TRANSITION_DURATION_FRACTION;
        this.menuItemComponents.toArray().forEach(function (mi) {
            var itemDelay = null;
            if ((_this.position == TOP_LEFT) || _this.position == TOP_RIGHT) {
                itemDelay = ((height - mi.element.offsetTop - mi.element.offsetHeight) / height * transitionDuration) + 's';
            }
            else {
                itemDelay = (mi.element.offsetTop / height * transitionDuration) + 's';
            }
            mi.element.style.transitionDelay = itemDelay;
        });
        // Apply the initial clip to the text before we start animating.
        this.applyClip(height, width);
        this.renderer.setElementClass(this.container, 'is-visible', true);
        this.menuElement.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';
        this.renderer.setElementClass(this.menuElement, 'is-animating', true);
        this.addAnimationEndListener();
        this.isVisible = true;
    };
    MdlMenuComponent.prototype.addAnimationEndListener = function () {
        var _this = this;
        this.renderer.listen(this.menuElement, 'transitionend', function () {
            _this.renderer.setElementClass(_this.menuElement, 'is-animating', false);
        });
    };
    MdlMenuComponent.prototype.applyClip = function (height, width) {
        if (this.position == UNALIGNED) {
            // Do not clip.
            this.menuElement.style.clip = '';
        }
        else if (this.position == BOTTOM_RIGHT) {
            // Clip to the top right corner of the menu.
            this.menuElement.style.clip = 'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';
        }
        else if (this.position == TOP_LEFT) {
            // Clip to the bottom left corner of the menu.
            this.menuElement.style.clip = 'rect(' + height + 'px 0 ' + height + 'px 0)';
        }
        else if (this.position == TOP_RIGHT) {
            // Clip to the bottom right corner of the menu.
            this.menuElement.style.clip = 'rect(' + height + 'px ' + width + 'px ' + height + 'px ' + width + 'px)';
        }
        else {
            // Default: do not clip (same as clipping to the top left corner).
            this.menuElement.style.clip = '';
        }
    };
    MdlMenuComponent.prototype.ngOnDestroy = function () {
        this.menuRegistry.remove(this);
    };
    MdlMenuComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-menu',
                    host: {},
                    exportAs: 'mdlMenu',
                    template: "\n   <div #container class=\"mdl-menu__container is-upgraded\">\n      <div #outline class=\"mdl-menu__outline\"\n         [ngClass]=\"cssPosition\"\n      ></div>\n      <div class=\"mdl-menu\" #menuElement>\n         <ng-content></ng-content>\n      </div>\n   </div>\n  ",
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlMenuComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
        { type: MdlMenuRegisty, },
    ]; };
    MdlMenuComponent.propDecorators = {
        'position': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-menu-position',] },],
        'containerChild': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"], args: ['container',] },],
        'menuElementChild': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"], args: ['menuElement',] },],
        'outlineChild': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"], args: ['outline',] },],
        'menuItemComponents': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ContentChildren"], args: [__WEBPACK_IMPORTED_MODULE_1__mdl_menu_item_component__["a" /* MdlMenuItemComponent */],] },],
    };
    return MdlMenuComponent;
}());
//# sourceMappingURL=mdl-menu.component.js.map

/***/ },
/* 716 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlTabPanelTitleComponent; });

var MdlTabPanelTitleComponent = (function () {
    function MdlTabPanelTitleComponent(vcRef) {
        this.vcRef = vcRef;
    }
    MdlTabPanelTitleComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-tab-panel-title',
                    template: "\n   <ng-content></ng-content>\n   ",
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlTabPanelTitleComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewContainerRef"], },
    ]; };
    return MdlTabPanelTitleComponent;
}());
//# sourceMappingURL=mdl-tab-panel-title.component.js.map

/***/ },
/* 717 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_tab_panel_title_component__ = __webpack_require__(716);
/* harmony export (binding) */ __webpack_require__.d(exports, "b", function() { return MdlTabPanelContent; });
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlTabPanelComponent; });


var MdlTabPanelContent = (function () {
    function MdlTabPanelContent() {
    }
    MdlTabPanelContent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-tab-panel-content',
                    template: '<ng-content></ng-content>',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlTabPanelContent.ctorParameters = function () { return []; };
    return MdlTabPanelContent;
}());
var MdlTabPanelComponent = (function () {
    function MdlTabPanelComponent() {
        this.isActive = false;
    }
    MdlTabPanelComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-tab-panel',
                    host: {
                        '[class.mdl-tabs__panel]': 'true',
                        '[class.is-active]': 'isActive'
                    },
                    template: "\n   <ng-content *ngIf=\"titleComponent\" select=\"mdl-tab-panel-content\"></ng-content>\n   <ng-content *ngIf=\"!titleComponent\"></ng-content>\n   ",
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlTabPanelComponent.ctorParameters = function () { return []; };
    MdlTabPanelComponent.propDecorators = {
        'titleComponent': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ContentChild"], args: [__WEBPACK_IMPORTED_MODULE_1__mdl_tab_panel_title_component__["a" /* MdlTabPanelTitleComponent */],] },],
        'title': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-tab-panel-title',] },],
        'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['disabled',] },],
    };
    return MdlTabPanelComponent;
}());
//# sourceMappingURL=mdl-tab-panel.component.js.map

/***/ },
/* 718 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_tooltip_position_service__ = __webpack_require__(860);
/* harmony export (binding) */ __webpack_require__.d(exports, "b", function() { return MdlSimpleTooltipComponent; });
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlTooltipComponent; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};


var IS_ACTIVE = 'is-active';
var host = {
    '[class.mdl-tooltip]': 'true',
    '[class.mdl-tooltip--large]': 'large',
    '[class.mdl-tooltip--left]': 'position=="left"',
    '[class.mdl-tooltip--right]': 'position=="right"',
    '[class.mdl-tooltip--top]': 'position=="top"',
    '[class.mdl-tooltip--bottom]': 'position=="bottom"'
};
var MdlSimpleTooltipComponent = (function () {
    function MdlSimpleTooltipComponent(elRef, renderer, mdlTooltipPositionService) {
        this.elRef = elRef;
        this.renderer = renderer;
        this.mdlTooltipPositionService = mdlTooltipPositionService;
        this.large = false;
        this.active = false;
        this.element = elRef.nativeElement;
    }
    MdlSimpleTooltipComponent.prototype.mouseLeave = function () {
        this.setActive(false);
    };
    MdlSimpleTooltipComponent.prototype.mouseEnter = function (event) {
        this.show(event.target);
    };
    MdlSimpleTooltipComponent.prototype.show = function (element) {
        var props = element.getBoundingClientRect();
        var offsetWidth = this.element.offsetWidth;
        var offsetHeight = this.element.offsetHeight;
        var style = this.mdlTooltipPositionService.calcStyle(offsetWidth, offsetHeight, props, this.position);
        for (var key in style) {
            this.renderer.setElementStyle(this.elRef.nativeElement, key, style[key]);
        }
        this.setActive(true);
    };
    MdlSimpleTooltipComponent.prototype.hide = function () {
        this.mouseLeave();
    };
    MdlSimpleTooltipComponent.prototype.setActive = function (active) {
        this.active = active;
        this.renderer.setElementClass(this.elRef.nativeElement, IS_ACTIVE, active);
    };
    MdlSimpleTooltipComponent.prototype.isActive = function () {
        return this.active;
    };
    MdlSimpleTooltipComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-simple-tooltip',
                    host: host,
                    template: '<div>{{tooltipText}}</div>',
                    providers: [__WEBPACK_IMPORTED_MODULE_1__mdl_tooltip_position_service__["a" /* MdlTooltipPositionService */]],
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlSimpleTooltipComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
        { type: __WEBPACK_IMPORTED_MODULE_1__mdl_tooltip_position_service__["a" /* MdlTooltipPositionService */], },
    ]; };
    return MdlSimpleTooltipComponent;
}());
var MdlTooltipComponent = (function (_super) {
    __extends(MdlTooltipComponent, _super);
    function MdlTooltipComponent(elRef, renderer, mdlTooltipPositionService) {
        _super.call(this, elRef, renderer, mdlTooltipPositionService);
    }
    MdlTooltipComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-tooltip',
                    template: '<div><ng-content></ng-content></div>',
                    exportAs: 'mdlTooltip',
                    host: host,
                    providers: [__WEBPACK_IMPORTED_MODULE_1__mdl_tooltip_position_service__["a" /* MdlTooltipPositionService */]],
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlTooltipComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
        { type: __WEBPACK_IMPORTED_MODULE_1__mdl_tooltip_position_service__["a" /* MdlTooltipPositionService */], },
    ]; };
    return MdlTooltipComponent;
}(MdlSimpleTooltipComponent));
//# sourceMappingURL=mdl-tooltip.component.js.map

/***/ },
/* 719 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(64);
var Observable_1 = __webpack_require__(13);
var Subscriber_1 = __webpack_require__(24);
var Subscription_1 = __webpack_require__(145);
/**
 * @class ConnectableObservable<T>
 */
var ConnectableObservable = (function (_super) {
    __extends(ConnectableObservable, _super);
    function ConnectableObservable(source, subjectFactory) {
        _super.call(this);
        this.source = source;
        this.subjectFactory = subjectFactory;
        this._refCount = 0;
    }
    ConnectableObservable.prototype._subscribe = function (subscriber) {
        return this.getSubject().subscribe(subscriber);
    };
    ConnectableObservable.prototype.getSubject = function () {
        var subject = this._subject;
        if (!subject || subject.isStopped) {
            this._subject = this.subjectFactory();
        }
        return this._subject;
    };
    ConnectableObservable.prototype.connect = function () {
        var connection = this._connection;
        if (!connection) {
            connection = this._connection = new Subscription_1.Subscription();
            connection.add(this.source
                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));
            if (connection.closed) {
                this._connection = null;
                connection = Subscription_1.Subscription.EMPTY;
            }
            else {
                this._connection = connection;
            }
        }
        return connection;
    };
    ConnectableObservable.prototype.refCount = function () {
        return this.lift(new RefCountOperator(this));
    };
    return ConnectableObservable;
}(Observable_1.Observable));
exports.ConnectableObservable = ConnectableObservable;
var ConnectableSubscriber = (function (_super) {
    __extends(ConnectableSubscriber, _super);
    function ConnectableSubscriber(destination, connectable) {
        _super.call(this, destination);
        this.connectable = connectable;
    }
    ConnectableSubscriber.prototype._error = function (err) {
        this._unsubscribe();
        _super.prototype._error.call(this, err);
    };
    ConnectableSubscriber.prototype._complete = function () {
        this._unsubscribe();
        _super.prototype._complete.call(this);
    };
    ConnectableSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (connectable) {
            this.connectable = null;
            var connection = connectable._connection;
            connectable._refCount = 0;
            connectable._subject = null;
            connectable._connection = null;
            if (connection) {
                connection.unsubscribe();
            }
        }
    };
    return ConnectableSubscriber;
}(Subject_1.SubjectSubscriber));
var RefCountOperator = (function () {
    function RefCountOperator(connectable) {
        this.connectable = connectable;
    }
    RefCountOperator.prototype.call = function (subscriber, source) {
        var connectable = this.connectable;
        connectable._refCount++;
        var refCounter = new RefCountSubscriber(subscriber, connectable);
        var subscription = source._subscribe(refCounter);
        if (!refCounter.closed) {
            refCounter.connection = connectable.connect();
        }
        return subscription;
    };
    return RefCountOperator;
}());
var RefCountSubscriber = (function (_super) {
    __extends(RefCountSubscriber, _super);
    function RefCountSubscriber(destination, connectable) {
        _super.call(this, destination);
        this.connectable = connectable;
    }
    RefCountSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (!connectable) {
            this.connection = null;
            return;
        }
        this.connectable = null;
        var refCount = connectable._refCount;
        if (refCount <= 0) {
            this.connection = null;
            return;
        }
        connectable._refCount = refCount - 1;
        if (refCount > 1) {
            this.connection = null;
            return;
        }
        ///
        // Compare the local RefCountSubscriber's connection Subscription to the
        // connection Subscription on the shared ConnectableObservable. In cases
        // where the ConnectableObservable source synchronously emits values, and
        // the RefCountSubscriber's dowstream Observers synchronously unsubscribe,
        // execution continues to here before the RefCountOperator has a chance to
        // supply the RefCountSubscriber with the shared connection Subscription.
        // For example:
        // ```
        // Observable.range(0, 10)
        //   .publish()
        //   .refCount()
        //   .take(5)
        //   .subscribe();
        // ```
        // In order to account for this case, RefCountSubscriber should only dispose
        // the ConnectableObservable's shared connection Subscription if the
        // connection Subscription exists, *and* either:
        //   a. RefCountSubscriber doesn't have a reference to the shared connection
        //      Subscription yet, or,
        //   b. RefCountSubscriber's connection Subscription reference is identical
        //      to the shared connection Subscription
        ///
        var connection = this.connection;
        var sharedConnection = connectable._connection;
        this.connection = null;
        if (sharedConnection && (!connection || sharedConnection === connection)) {
            sharedConnection.unsubscribe();
        }
    };
    return RefCountSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=ConnectableObservable.js.map

/***/ },
/* 720 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ArrayObservable_1 = __webpack_require__(232);
var isArray_1 = __webpack_require__(146);
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
var none = {};
/**
 * Combines multiple Observables to create an Observable whose values are
 * calculated from the latest values of each of its input Observables.
 *
 * <span class="informal">Whenever any input Observable emits a value, it
 * computes a formula using the latest values from all the inputs, then emits
 * the output of that formula.</span>
 *
 * <img src="./img/combineLatest.png" width="100%">
 *
 * `combineLatest` combines the values from this Observable with values from
 * Observables passed as arguments. This is done by subscribing to each
 * Observable, in order, and collecting an array of each of the most recent
 * values any time any of the input Observables emits, then either taking that
 * array and passing it as arguments to an optional `project` function and
 * emitting the return value of that, or just emitting the array of recent
 * values directly if there is no `project` function.
 *
 * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>
 * var weight = Rx.Observable.of(70, 72, 76, 79, 75);
 * var height = Rx.Observable.of(1.76, 1.77, 1.78);
 * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));
 * bmi.subscribe(x => console.log('BMI is ' + x));
 *
 * @see {@link combineAll}
 * @see {@link merge}
 * @see {@link withLatestFrom}
 *
 * @param {Observable} other An input Observable to combine with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {function} [project] An optional function to project the values from
 * the combined latest values into a new value on the output Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 * @method combineLatest
 * @owner Observable
 */
function combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var project = null;
    if (typeof observables[observables.length - 1] === 'function') {
        project = observables.pop();
    }
    // if the first and only other argument besides the resultSelector is an array
    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`
    if (observables.length === 1 && isArray_1.isArray(observables[0])) {
        observables = observables[0];
    }
    observables.unshift(this);
    return new ArrayObservable_1.ArrayObservable(observables).lift(new CombineLatestOperator(project));
}
exports.combineLatest = combineLatest;
/* tslint:enable:max-line-length */
var CombineLatestOperator = (function () {
    function CombineLatestOperator(project) {
        this.project = project;
    }
    CombineLatestOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new CombineLatestSubscriber(subscriber, this.project));
    };
    return CombineLatestOperator;
}());
exports.CombineLatestOperator = CombineLatestOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var CombineLatestSubscriber = (function (_super) {
    __extends(CombineLatestSubscriber, _super);
    function CombineLatestSubscriber(destination, project) {
        _super.call(this, destination);
        this.project = project;
        this.active = 0;
        this.values = [];
        this.observables = [];
    }
    CombineLatestSubscriber.prototype._next = function (observable) {
        this.values.push(none);
        this.observables.push(observable);
    };
    CombineLatestSubscriber.prototype._complete = function () {
        var observables = this.observables;
        var len = observables.length;
        if (len === 0) {
            this.destination.complete();
        }
        else {
            this.active = len;
            this.toRespond = len;
            for (var i = 0; i < len; i++) {
                var observable = observables[i];
                this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));
            }
        }
    };
    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {
        if ((this.active -= 1) === 0) {
            this.destination.complete();
        }
    };
    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var values = this.values;
        var oldVal = values[outerIndex];
        var toRespond = !this.toRespond
            ? 0
            : oldVal === none ? --this.toRespond : this.toRespond;
        values[outerIndex] = innerValue;
        if (toRespond === 0) {
            if (this.project) {
                this._tryProject(values);
            }
            else {
                this.destination.next(values.slice());
            }
        }
    };
    CombineLatestSubscriber.prototype._tryProject = function (values) {
        var result;
        try {
            result = this.project.apply(this, values);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return CombineLatestSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.CombineLatestSubscriber = CombineLatestSubscriber;
//# sourceMappingURL=combineLatest.js.map

/***/ },
/* 721 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var isScheduler_1 = __webpack_require__(372);
var ArrayObservable_1 = __webpack_require__(232);
var mergeAll_1 = __webpack_require__(147);
/**
 * Creates an output Observable which sequentially emits all values from every
 * given input Observable after the current Observable.
 *
 * <span class="informal">Concatenates multiple Observables together by
 * sequentially emitting their values, one Observable after the other.</span>
 *
 * <img src="./img/concat.png" width="100%">
 *
 * Joins this Observable with multiple other Observables by subscribing to them
 * one at a time, starting with the source, and merging their results into the
 * output Observable. Will wait for each Observable to complete before moving
 * on to the next.
 *
 * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>
 * var timer = Rx.Observable.interval(1000).take(4);
 * var sequence = Rx.Observable.range(1, 10);
 * var result = timer.concat(sequence);
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Concatenate 3 Observables</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var result = timer1.concat(timer2, timer3);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 *
 * @param {Observable} other An input Observable to concatenate after the source
 * Observable. More than one input Observables may be given as argument.
 * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each
 * Observable subscription on.
 * @return {Observable} All values of each passed Observable merged into a
 * single Observable, in order, in serial fashion.
 * @method concat
 * @owner Observable
 */
function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return concatStatic.apply(void 0, [this].concat(observables));
}
exports.concat = concat;
/* tslint:enable:max-line-length */
/**
 * Creates an output Observable which sequentially emits all values from every
 * given input Observable after the current Observable.
 *
 * <span class="informal">Concatenates multiple Observables together by
 * sequentially emitting their values, one Observable after the other.</span>
 *
 * <img src="./img/concat.png" width="100%">
 *
 * Joins multiple Observables together by subscribing to them one at a time and
 * merging their results into the output Observable. Will wait for each
 * Observable to complete before moving on to the next.
 *
 * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>
 * var timer = Rx.Observable.interval(1000).take(4);
 * var sequence = Rx.Observable.range(1, 10);
 * var result = Rx.Observable.concat(timer, sequence);
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Concatenate 3 Observables</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var result = Rx.Observable.concat(timer1, timer2, timer3);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 *
 * @param {Observable} input1 An input Observable to concatenate with others.
 * @param {Observable} input2 An input Observable to concatenate with others.
 * More than one input Observables may be given as argument.
 * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each
 * Observable subscription on.
 * @return {Observable} All values of each passed Observable merged into a
 * single Observable, in order, in serial fashion.
 * @static true
 * @name concat
 * @owner Observable
 */
function concatStatic() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var scheduler = null;
    var args = observables;
    if (isScheduler_1.isScheduler(args[observables.length - 1])) {
        scheduler = args.pop();
    }
    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));
}
exports.concatStatic = concatStatic;
//# sourceMappingURL=concat.js.map

/***/ },
/* 722 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ArrayObservable_1 = __webpack_require__(232);
var isArray_1 = __webpack_require__(146);
var Subscriber_1 = __webpack_require__(24);
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
var iterator_1 = __webpack_require__(149);
/**
 * @param observables
 * @return {Observable<R>}
 * @method zip
 * @owner Observable
 */
function zipProto() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    observables.unshift(this);
    return zipStatic.apply(this, observables);
}
exports.zipProto = zipProto;
/* tslint:enable:max-line-length */
/**
 * @param observables
 * @return {Observable<R>}
 * @static true
 * @name zip
 * @owner Observable
 */
function zipStatic() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var project = observables[observables.length - 1];
    if (typeof project === 'function') {
        observables.pop();
    }
    return new ArrayObservable_1.ArrayObservable(observables).lift(new ZipOperator(project));
}
exports.zipStatic = zipStatic;
var ZipOperator = (function () {
    function ZipOperator(project) {
        this.project = project;
    }
    ZipOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new ZipSubscriber(subscriber, this.project));
    };
    return ZipOperator;
}());
exports.ZipOperator = ZipOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ZipSubscriber = (function (_super) {
    __extends(ZipSubscriber, _super);
    function ZipSubscriber(destination, project, values) {
        if (values === void 0) { values = Object.create(null); }
        _super.call(this, destination);
        this.index = 0;
        this.iterators = [];
        this.active = 0;
        this.project = (typeof project === 'function') ? project : null;
        this.values = values;
    }
    ZipSubscriber.prototype._next = function (value) {
        var iterators = this.iterators;
        var index = this.index++;
        if (isArray_1.isArray(value)) {
            iterators.push(new StaticArrayIterator(value));
        }
        else if (typeof value[iterator_1.$$iterator] === 'function') {
            iterators.push(new StaticIterator(value[iterator_1.$$iterator]()));
        }
        else {
            iterators.push(new ZipBufferIterator(this.destination, this, value, index));
        }
    };
    ZipSubscriber.prototype._complete = function () {
        var iterators = this.iterators;
        var len = iterators.length;
        this.active = len;
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            if (iterator.stillUnsubscribed) {
                this.add(iterator.subscribe(iterator, i));
            }
            else {
                this.active--; // not an observable
            }
        }
    };
    ZipSubscriber.prototype.notifyInactive = function () {
        this.active--;
        if (this.active === 0) {
            this.destination.complete();
        }
    };
    ZipSubscriber.prototype.checkIterators = function () {
        var iterators = this.iterators;
        var len = iterators.length;
        var destination = this.destination;
        // abort if not all of them have values
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {
                return;
            }
        }
        var shouldComplete = false;
        var args = [];
        for (var i = 0; i < len; i++) {
            var iterator = iterators[i];
            var result = iterator.next();
            // check to see if it's completed now that you've gotten
            // the next value.
            if (iterator.hasCompleted()) {
                shouldComplete = true;
            }
            if (result.done) {
                destination.complete();
                return;
            }
            args.push(result.value);
        }
        if (this.project) {
            this._tryProject(args);
        }
        else {
            destination.next(args);
        }
        if (shouldComplete) {
            destination.complete();
        }
    };
    ZipSubscriber.prototype._tryProject = function (args) {
        var result;
        try {
            result = this.project.apply(this, args);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return ZipSubscriber;
}(Subscriber_1.Subscriber));
exports.ZipSubscriber = ZipSubscriber;
var StaticIterator = (function () {
    function StaticIterator(iterator) {
        this.iterator = iterator;
        this.nextResult = iterator.next();
    }
    StaticIterator.prototype.hasValue = function () {
        return true;
    };
    StaticIterator.prototype.next = function () {
        var result = this.nextResult;
        this.nextResult = this.iterator.next();
        return result;
    };
    StaticIterator.prototype.hasCompleted = function () {
        var nextResult = this.nextResult;
        return nextResult && nextResult.done;
    };
    return StaticIterator;
}());
var StaticArrayIterator = (function () {
    function StaticArrayIterator(array) {
        this.array = array;
        this.index = 0;
        this.length = 0;
        this.length = array.length;
    }
    StaticArrayIterator.prototype[iterator_1.$$iterator] = function () {
        return this;
    };
    StaticArrayIterator.prototype.next = function (value) {
        var i = this.index++;
        var array = this.array;
        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };
    };
    StaticArrayIterator.prototype.hasValue = function () {
        return this.array.length > this.index;
    };
    StaticArrayIterator.prototype.hasCompleted = function () {
        return this.array.length === this.index;
    };
    return StaticArrayIterator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ZipBufferIterator = (function (_super) {
    __extends(ZipBufferIterator, _super);
    function ZipBufferIterator(destination, parent, observable, index) {
        _super.call(this, destination);
        this.parent = parent;
        this.observable = observable;
        this.index = index;
        this.stillUnsubscribed = true;
        this.buffer = [];
        this.isComplete = false;
    }
    ZipBufferIterator.prototype[iterator_1.$$iterator] = function () {
        return this;
    };
    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next
    //    this is legit because `next()` will never be called by a subscription in this case.
    ZipBufferIterator.prototype.next = function () {
        var buffer = this.buffer;
        if (buffer.length === 0 && this.isComplete) {
            return { value: null, done: true };
        }
        else {
            return { value: buffer.shift(), done: false };
        }
    };
    ZipBufferIterator.prototype.hasValue = function () {
        return this.buffer.length > 0;
    };
    ZipBufferIterator.prototype.hasCompleted = function () {
        return this.buffer.length === 0 && this.isComplete;
    };
    ZipBufferIterator.prototype.notifyComplete = function () {
        if (this.buffer.length > 0) {
            this.isComplete = true;
            this.parent.notifyInactive();
        }
        else {
            this.destination.complete();
        }
    };
    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.buffer.push(innerValue);
        this.parent.checkIterators();
    };
    ZipBufferIterator.prototype.subscribe = function (value, index) {
        return subscribeToResult_1.subscribeToResult(this, this.observable, this, index);
    };
    return ZipBufferIterator;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=zip.js.map

/***/ },
/* 723 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var isArray_1 = __webpack_require__(146);
function isNumeric(val) {
    // parseFloat NaNs numeric-cast false positives (null|true|false|"")
    // ...but misinterprets leading-number strings, particularly hex literals ("0x...")
    // subtraction forces infinities to NaN
    // adding 1 corrects loss of precision from parseFloat (#15100)
    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;
}
exports.isNumeric = isNumeric;
;
//# sourceMappingURL=isNumeric.js.map

/***/ },
/* 724 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlOptionComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var MdlOptionComponent = (function () {
    function MdlOptionComponent(changeDetectionRef) {
        this.changeDetectionRef = changeDetectionRef;
        this.multiple = false;
        this.selected = false;
        this.onSelect = Function.prototype;
    }
    MdlOptionComponent.prototype.setMultiple = function (multiple) {
        this.multiple = multiple;
        this.changeDetectionRef.detectChanges();
    };
    MdlOptionComponent.prototype.updateSelected = function (value) {
        var _this = this;
        if (this.multiple) {
            this.selected = (value.map(function (v) { return _this.stringifyValue(v); }).indexOf(this.stringValue) != -1);
        }
        else {
            this.selected = this.value == value;
        }
        this.changeDetectionRef.detectChanges();
    };
    MdlOptionComponent.prototype.ngAfterViewInit = function () {
        this.text = this.contentWrapper.nativeElement.textContent.trim();
    };
    Object.defineProperty(MdlOptionComponent.prototype, "stringValue", {
        get: function () {
            return this.stringifyValue(this.value);
        },
        enumerable: true,
        configurable: true
    });
    MdlOptionComponent.prototype.stringifyValue = function (value) {
        switch (typeof value) {
            case 'number': return String(value);
            case 'object': return JSON.stringify(value);
            default: return (!!value) ? String(value) : '';
        }
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('value'), 
        __metadata('design:type', Object)
    ], MdlOptionComponent.prototype, "value", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('contentWrapper'), 
        __metadata('design:type', __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], MdlOptionComponent.prototype, "contentWrapper", void 0);
    MdlOptionComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({selector: 'mdl-option',
            host: {
                '[class.mdl-option__container]': 'true'
            },
            template: "<div class=\"mdl-list__item\" (click)=\"onSelect($event, value)\" [class.is-active]=\"selected\"> <div *ngIf=\"multiple\" class=\"mdl-list__item-secondary-action\"> <div class=\"mdl-checkbox is-upgraded\" [class.is-checked]=\"selected\" (click)=\"onSelect($event, value)\"> <input type=\"checkbox\" class=\"mdl-checkbox__input\"> <span class=\"mdl-checkbox__label\"></span> <span class=\"mdl-checkbox__focus-helper\"></span> <span class=\"mdl-checkbox__box-outline\"> <span class=\"mdl-checkbox__tick-outline\"></span> </span> </div> </div> <div #contentWrapper class=\"mdl-list__item-primary-content\"> <ng-content></ng-content> </div> </div> "
        }), 
        __metadata('design:paramtypes', [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ChangeDetectorRef"]])
    ], MdlOptionComponent);
    return MdlOptionComponent;
}());

//# sourceMappingURL=option.js.map


/***/ },
/* 725 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular2_mdl__ = __webpack_require__(693);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_children_manager_service__ = __webpack_require__(684);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_rooms_manager_service__ = __webpack_require__(674);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_moment__ = __webpack_require__(668);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_moment__);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return AttendanceComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var AttendanceComponent = (function () {
    function AttendanceComponent(childrenManager, route, roomsManager, mdlSnackbarService, mdlDialogOutletService, vcr) {
        var _this = this;
        this.childrenManager = childrenManager;
        this.route = route;
        this.roomsManager = roomsManager;
        this.mdlSnackbarService = mdlSnackbarService;
        this.mdlDialogOutletService = mdlDialogOutletService;
        this.vcr = vcr;
        this.rooms = [];
        this.loading = false;
        this.mdlDialogOutletService.setDefaultViewContainerRef(this.vcr);
        this.tableOptions = {
            shadow: 2,
            tooltips: [
                {
                    value: '',
                    inactive: true
                },
                {
                    value: 'name',
                    caption: 'Name',
                    sortTransform: function (name) { return name.toLowerCase(); }
                },
                {
                    value: 'Presence',
                    className: 'presence-col',
                    inactive: true
                },
                {
                    value: 'attendanceStateInTime',
                    caption: 'Time IN',
                    className: 'time-col',
                },
                {
                    value: 'attendanceStateOutTime',
                    caption: 'Time OUT',
                    className: 'time-col'
                }
            ]
        };
        // is filter( room => room.capacity > 0 ) needed ?
        var rooms$ = this.roomsManager.store$.subscribe(function (rooms) {
            if (rooms.length) {
                _this.rooms = rooms;
                var routes = [
                    {
                        path: '/dashboard/attendance/all',
                        link: 'All Rooms',
                    }
                ].concat(rooms.map(function (item) {
                    return {
                        path: '../' + item.id,
                        link: item.name
                    };
                }));
                _this.routes = routes;
            }
            else {
                _this.routes = [
                    {
                        path: '/dashboard/attendance/all',
                        link: 'All Rooms',
                    }
                ];
            }
        });
        this.sub = this.childrenManager.store$.subscribe(function (children) {
            _this.store = children;
            if (!_this.selectedRoomId) {
                _this.children = _this.store.slice();
            }
            else {
                _this.children = _this.store.filter(function (child) {
                    return child.roomId === _this.selectedRoomId;
                });
            }
        });
        this.sub.add(rooms$);
    }
    AttendanceComponent.prototype.ngOnInit = function () {
        var _this = this;
        var params$ = this.route.params.subscribe(function (params) {
            var param = params['id'];
            _this.selectedRoomId = param === 'all' ? null : param;
            if (!_this.selectedRoomId) {
                _this.children = _this.store.slice();
            }
            else {
                _this.children = _this.store.filter(function (child) {
                    return child.roomId === _this.selectedRoomId;
                });
            }
        });
        this.sub.add(params$);
    };
    AttendanceComponent.prototype.ngOnDestroy = function () {
        if (!this.sub.closed) {
            this.sub.unsubscribe();
        }
    };
    AttendanceComponent.prototype.updateAttendance = function (child, action, time) {
        var _this = this;
        this.childrenManager.updateAttendance(child, action, time).toPromise().then(function (res) {
            var actionName = action;
            var childName = child.name;
            var parsedTime = __WEBPACK_IMPORTED_MODULE_5_moment__(time).format('HH:mm A');
            if (actionName == 'IN') {
                child.attendanceStateInTime = res.json().time;
            }
            else if (actionName == 'OUT') {
                child.attendanceStateOutTime = res.json().time;
            }
            if (child.attendanceStateInTime && child.attendanceStateOutTime) {
                child.attendanceState =
                    child.attendanceStateInTime > child.attendanceStateOutTime
                        ? 'IN' : 'OUT';
            }
            child.editState = null;
            _this.mdlSnackbarService
                .showToast(childName + " marked as " + actionName + " at " + parsedTime);
        }, console.error);
    };
    AttendanceComponent.prototype.handleTimechange = function (date, child) {
        this.updateAttendance(child, child.editState, date);
    };
    AttendanceComponent.prototype.handleFilter = function (filter) {
        var _this = this;
        var filterValue = filter.toLowerCase();
        this.children = this.store.filter(function (child) {
            var childName = child.name.toLowerCase();
            if (!_this.selectedRoomId) {
                return childName.indexOf(filterValue) !== -1;
            }
            else {
                return childName.indexOf(filterValue) !== -1
                    && child.roomId === _this.selectedRoomId;
            }
        });
    };
    AttendanceComponent.prototype.getAttendanceStatusTime = function (child, state) {
        if (state == 'IN' && child.attendanceStateInTime) {
            return __WEBPACK_IMPORTED_MODULE_5_moment__(child.attendanceStateInTime).format('HH:mm A');
        }
        else if (state == 'OUT' && child.attendanceStateOutTime) {
            return __WEBPACK_IMPORTED_MODULE_5_moment__(child.attendanceStateOutTime).format('HH:mm A');
        }
        else {
            return '-';
        }
    };
    AttendanceComponent.prototype.editTime = function (child, status) {
        if ((status == 'IN' && !child.attendanceStateInTime) || (status == 'OUT' && !child.attendanceStateOutTime)) {
            return;
        }
        this.children.forEach(function (child) { return child.editState = null; });
        child.editState = status;
        this.currentTime = status == 'IN' ? child.attendanceStateInTime : child.attendanceStateOutTime;
    };
    AttendanceComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-attendance',
            template: __webpack_require__(908),
            styles: [__webpack_require__(861)],
            encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_3__shared_children_manager_service__["a" /* ChildrenManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__shared_children_manager_service__["a" /* ChildrenManagerService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* ActivatedRoute */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* ActivatedRoute */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_4__shared_rooms_manager_service__["a" /* RoomsManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_4__shared_rooms_manager_service__["a" /* RoomsManagerService */]) === 'function' && _c) || Object, (typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_2_angular2_mdl__["MdlSnackbarService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2_angular2_mdl__["MdlSnackbarService"]) === 'function' && _d) || Object, (typeof (_e = typeof __WEBPACK_IMPORTED_MODULE_2_angular2_mdl__["MdlDialogOutletService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2_angular2_mdl__["MdlDialogOutletService"]) === 'function' && _e) || Object, (typeof (_f = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewContainerRef"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewContainerRef"]) === 'function' && _f) || Object])
    ], AttendanceComponent);
    return AttendanceComponent;
    var _a, _b, _c, _d, _e, _f;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/attendance.component.js.map

/***/ },
/* 726 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return DashboardInfoComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var DashboardInfoComponent = (function () {
    function DashboardInfoComponent() {
    }
    DashboardInfoComponent.prototype.ngOnInit = function () { };
    DashboardInfoComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-dashboard-info',
            template: __webpack_require__(911),
            styles: [__webpack_require__(864)]
        }), 
        __metadata('design:paramtypes', [])
    ], DashboardInfoComponent);
    return DashboardInfoComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/dashboard-info.component.js.map

/***/ },
/* 727 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_profile_manager_service__ = __webpack_require__(679);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_session_manager_service__ = __webpack_require__(691);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return DashboardComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



// TODO: Profile Info needs expand/close
// MdlDialogOutlet issues (https://github.com/mseemann/angular2-mdl/wiki/How-to-use-the-MdlDialogService)
var DashboardComponent = (function () {
    function DashboardComponent(profileManager, sessionManager) {
        var _this = this;
        this.profileManager = profileManager;
        this.sessionManager = sessionManager;
        var profile = this.profileManager.getProfile();
        if (profile) {
            this.profile = profile;
        }
        this.sub = this.profileManager.store$.subscribe(function (profile) {
            _this.profile = profile;
        });
    }
    DashboardComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    DashboardComponent.prototype.logout = function () {
        this.sessionManager.removeSession();
    };
    DashboardComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-dashboard',
            template: __webpack_require__(912),
            styles: [__webpack_require__(865)],
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_profile_manager_service__["a" /* ProfileManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__shared_profile_manager_service__["a" /* ProfileManagerService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__shared_session_manager_service__["a" /* SessionManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__shared_session_manager_service__["a" /* SessionManagerService */]) === 'function' && _b) || Object])
    ], DashboardComponent);
    return DashboardComponent;
    var _a, _b;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/dashboard.component.js.map

/***/ },
/* 728 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment__ = __webpack_require__(668);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment__);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return EasyFeesDashboardComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var EasyFeesDashboardComponent = (function () {
    function EasyFeesDashboardComponent() {
        this.week = [];
        this.currentDate = __WEBPACK_IMPORTED_MODULE_1_moment__().startOf('isoWeek');
        this.sortFlag = false;
        this.accordionState = false;
        this.sort = "0";
        this.dateChange();
    }
    EasyFeesDashboardComponent.prototype.ngOnInit = function () {
    };
    EasyFeesDashboardComponent.prototype.sortOrder = function (sort) {
        this.sort = sort;
        this.sortFlag = false;
    };
    EasyFeesDashboardComponent.prototype.prevMonth = function () {
        this.currentDate.subtract(1, 'month');
        this.dateChange();
    };
    EasyFeesDashboardComponent.prototype.nextMonth = function () {
        this.currentDate.add(1, 'month');
        this.dateChange();
    };
    EasyFeesDashboardComponent.prototype.dateChange = function () {
        var startOfWeek = __WEBPACK_IMPORTED_MODULE_1_moment__(this.currentDate).startOf('isoWeek');
        var currentWeek = { start: +startOfWeek.format('x'), end: 0 };
        var daysOfWeek = [];
        while (startOfWeek.isoWeekday() <= 5) {
            daysOfWeek.push({
                day: startOfWeek.format('dddd'),
                date: startOfWeek.format('Do'),
                inactive: !startOfWeek.isSame(__WEBPACK_IMPORTED_MODULE_1_moment__(this.currentDate), 'month')
            });
            startOfWeek.add(1, 'day');
        }
        currentWeek.end = +startOfWeek.format('x');
        this.week = daysOfWeek;
    };
    EasyFeesDashboardComponent.prototype.selectRow = function () {
        if (!this.accordionState)
            this.accordionState = true;
        else
            this.accordionState = false;
    };
    EasyFeesDashboardComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-easy-fees-dashboard',
            template: __webpack_require__(916),
            styles: [__webpack_require__(869), __webpack_require__(696)]
        }), 
        __metadata('design:paramtypes', [])
    ], EasyFeesDashboardComponent);
    return EasyFeesDashboardComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/easy-fees-dashboard.component.js.map

/***/ },
/* 729 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return EasyFeesIntroComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var EasyFeesIntroComponent = (function () {
    function EasyFeesIntroComponent() {
    }
    EasyFeesIntroComponent.prototype.ngOnInit = function () {
    };
    EasyFeesIntroComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-easy-fees-intro',
            template: __webpack_require__(917),
            styles: [__webpack_require__(870)]
        }), 
        __metadata('design:paramtypes', [])
    ], EasyFeesIntroComponent);
    return EasyFeesIntroComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/easy-fees-intro.component.js.map

/***/ },
/* 730 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_http_client_service__ = __webpack_require__(669);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_lite_app_api__ = __webpack_require__(670);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return EasyFeesManagerService; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var EasyFeesManagerService = (function () {
    function EasyFeesManagerService(httpClient) {
        this.httpClient = httpClient;
    }
    EasyFeesManagerService.prototype.submitSignupData = function (data) {
        var formData = new FormData();
        var formKeys = Object.keys(data).filter(function (val) { return val !== 'uploadFiles'; });
        var details = {};
        formKeys.forEach(function (key) { return details[key] = data[key]; });
        formData.append('detail', new Blob([JSON.stringify(details)], {
            type: "application/json"
        }));
        data.uploadFiles.forEach(function (_key) {
            formData.append('uploadFiles[]', _key, _key.name);
        });
        this.httpClient.postMultipart(__WEBPACK_IMPORTED_MODULE_2__shared_lite_app_api__["a" /* LiteAppAPI */].MERCHANT_SIGNUP, formData).subscribe(function (res) {
            console.log(res);
        }, function (e) {
            console.error(e);
        }, function () {
            console.log('Upload complete');
        });
    };
    EasyFeesManagerService.prototype.getCurrenciesList = function () {
        return this.httpClient.get(__WEBPACK_IMPORTED_MODULE_2__shared_lite_app_api__["a" /* LiteAppAPI */].MERCHANT_CURRENCY);
    };
    EasyFeesManagerService.prototype.retreiveFormData = function () {
        return this.httpClient.get(__WEBPACK_IMPORTED_MODULE_2__shared_lite_app_api__["a" /* LiteAppAPI */].MERCHANT_FORM);
    };
    EasyFeesManagerService.prototype.getCurrentStatus = function () {
        return this.httpClient.get(__WEBPACK_IMPORTED_MODULE_2__shared_lite_app_api__["a" /* LiteAppAPI */].MERCHANT_STATUS);
    };
    EasyFeesManagerService = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_http_client_service__["a" /* HttpClientService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__shared_http_client_service__["a" /* HttpClientService */]) === 'function' && _a) || Object])
    ], EasyFeesManagerService);
    return EasyFeesManagerService;
    var _a;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/easy-fees-manager.service.js.map

/***/ },
/* 731 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(371);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__easy_fees_manager_service__ = __webpack_require__(730);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return EasyFeesSetupComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var COMPANY_TYPES = [
    {
        name: 'Private/Limited Liability Company',
        value: 'LIMITED_COMPANY',
        documents: ['Bank Statement']
    },
    {
        name: 'Sole Trader',
        value: 'SOLETRADER',
        documents: ['Bank Statement', 'Passport']
    },
    {
        name: 'Community Centre / Charities',
        value: 'CHARITY_RELIGIOUS',
        documents: [
            'Bank Statement',
            'Scanned copy of constitution documents',
            'Copy of the latest annual return',
            'Passport for all individuals in control of the body',
            'Utility Bill'
        ]
    },
    {
        name: 'Clubs & Societies',
        value: 'CLUB_OR_SOC',
        documents: [
            'Bank Statement',
            'Passport',
            'Scanned copy of constitution documents'
        ]
    },
    {
        name: 'Partnerships & Associations',
        value: 'PARTNER_OR_ASSOC',
        documents: [
            'Bank Statement',
            'Scanned copy of constitution documents',
            'Copy of the latest annual return',
            'Passport for all individuals in control of the body',
            'Utility Bill'
        ]
    }
];
var FREQUENCIES = ['WEEKLY', 'MONTHLY', 'QUARTERLY', 'BIANNUALLY', 'ANNUALLY'];
var EasyFeesSetupComponent = (function () {
    function EasyFeesSetupComponent(fb, easyFeesManager) {
        var _this = this;
        this.fb = fb;
        this.easyFeesManager = easyFeesManager;
        this.COMPANY_TYPES = COMPANY_TYPES.slice();
        this.FREQUENCIES = FREQUENCIES.slice();
        this.CURRENCIES = [];
        this.showModal = false;
        this.setupStep = 1;
        // Step 1
        this.alreadyCollecting = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */](false);
        this.differentName = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */](false);
        this.merchantName = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].required);
        this.companyNumber = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].required);
        this.currency = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].required);
        this.companyName = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]({ value: '', disabled: true });
        this.creditorSchemeId = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]({ value: '', disabled: true });
        // Step 2
        this.website = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]('');
        this.address = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].required);
        this.city = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].required);
        this.state = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]('');
        this.countryCode = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]('IR', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].required);
        this.contactName = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].required);
        this.contactEmail = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].compose([
            __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].required,
            __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].pattern('^[a-z]+[a-z0-9._]+@[a-z]+\.[a-z.]{2,5}$')
        ]));
        // Step 3
        this.estimatedCustomers = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].required);
        this.estimatedMaxValue = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].required);
        this.estimatedAvgValue = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].required);
        this.frequency = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]('WEEKLY', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].required);
        this.iban = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].required);
        this.differentContact = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */](false);
        this.reportContact = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]('');
        this.reportEmail = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].pattern('^[a-z]+[a-z0-9._]+@[a-z]+\.[a-z.]{2,5}$'));
        this.reportPhone = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]('');
        // Step 4
        this.businessType = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].required);
        this.vatNumber = new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["d" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["f" /* Validators */].required);
        this.uploadFiles = [];
        this.merchantSignupForm = this.fb.group({
            step1: new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["g" /* FormGroup */]({
                differentName: this.differentName,
                alreadyCollecting: this.alreadyCollecting,
                merchantName: this.merchantName,
                companyNumber: this.companyNumber,
                companyName: this.companyName,
                creditorSchemeId: this.creditorSchemeId,
                currency: this.currency
            }),
            step2: new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["g" /* FormGroup */]({
                website: this.website,
                address: this.address,
                city: this.city,
                state: this.state,
                countryCode: this.countryCode,
                contactEmail: this.contactEmail,
                contactName: this.contactName
            }),
            step3: new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["g" /* FormGroup */]({
                differentContact: this.differentContact,
                estimatedCustomers: this.estimatedCustomers,
                estimatedAvgValue: this.estimatedAvgValue,
                estimatedMaxValue: this.estimatedMaxValue,
                frequency: this.frequency,
                iban: this.iban,
                reportContact: this.reportContact,
                reportEmail: this.reportEmail,
                reportPhone: this.reportPhone
            }),
            step4: new __WEBPACK_IMPORTED_MODULE_1__angular_forms__["g" /* FormGroup */]({
                businessType: this.businessType,
                vatNumber: this.vatNumber
            })
        });
        var formChanges$ = this.merchantSignupForm.valueChanges.subscribe(function (formData) {
            var collecting = formData.step1.alreadyCollecting;
            var different = formData.step1.differentName;
            if (collecting && _this.creditorSchemeId.disabled) {
                _this.creditorSchemeId.enable();
            }
            else if (!collecting && _this.creditorSchemeId.enabled) {
                _this.creditorSchemeId.disable();
            }
            if (different && _this.companyName.disabled) {
                _this.companyName.enable();
            }
            else if (!different && _this.companyName.enabled) {
                _this.companyName.disable();
            }
        });
        this.easyFeesManager.getCurrenciesList().subscribe(function (res) {
            if (res.ok) {
                var currencies = res.json();
                _this.CURRENCIES = currencies;
            }
            else {
                // Fallback to EURO
                _this.CURRENCIES = ['EUR'];
            }
        }, function (e) {
            // Fallback to EURO
            _this.CURRENCIES = ['EUR'];
            console.error(e);
        });
        this.recoverFormData();
        this.easyFeesManager.getCurrentStatus().subscribe(function (res) {
            console.log(res);
        }, function (e) {
            console.error(e);
        });
    }
    EasyFeesSetupComponent.prototype.ngOnInit = function () {
    };
    EasyFeesSetupComponent.prototype.recoverFormData = function () {
        var _this = this;
        var dependentKeys = ['creditorSchemeId', 'companyName'];
        var dependencyResolver = function (key) {
            var dependencies = {
                creditorSchemeId: 'alreadyCollecting',
                companyName: 'differentName'
            };
            return dependencies[key];
        };
        this.easyFeesManager.retreiveFormData().subscribe(function (res) {
            var recoveryData = res.json();
            var fields = Object.keys(recoveryData).filter(function (key) { return recoveryData[key]; });
            console.log(recoveryData, fields);
            fields.forEach(function (key) {
                if (_this.hasOwnProperty(key)) {
                    try {
                        if (dependentKeys.indexOf(key) !== -1) {
                            console.log(key, recoveryData[key]);
                            _this[dependencyResolver(key)].setValue(true);
                        }
                        _this[key].setValue(recoveryData[key]);
                    }
                    catch (e) {
                        console.log("Couldn't set " + key + " value");
                    }
                }
            });
            _this.merchantSignupForm.updateValueAndValidity();
        }, function (e) {
            console.error('Could not recover form: ', e);
        });
    };
    EasyFeesSetupComponent.prototype.chooseOrgType = function () {
        this.showModal = true;
    };
    EasyFeesSetupComponent.prototype.modalClosed = function (orgType) {
        this.showModal = false;
        if (orgType) {
            this.businessType.setValue(orgType);
        }
    };
    EasyFeesSetupComponent.prototype.canSkip = function () {
        var formKey = 'step' + this.setupStep;
        var form = this.merchantSignupForm.get(formKey);
        return form && form.valid;
    };
    EasyFeesSetupComponent.prototype.onDragOver = function (event) {
        this.highlightDropZone = true;
        return false;
    };
    EasyFeesSetupComponent.prototype.onDragLeave = function (event) {
        this.highlightDropZone = false;
        return false;
    };
    EasyFeesSetupComponent.prototype.onDragDrop = function (event) {
        event.preventDefault();
        this.highlightDropZone = false;
        var dataTransfer = event.dataTransfer;
        var files = dataTransfer.files;
        this.handleFiles(files);
    };
    EasyFeesSetupComponent.prototype.onInputChange = function (event) {
        event.preventDefault();
        this.handleFiles(event.target.files);
    };
    EasyFeesSetupComponent.prototype.selectFiles = function () {
        var nativeElement = this.fileInput.nativeElement;
        nativeElement.click();
    };
    EasyFeesSetupComponent.prototype.handleFiles = function (files) {
        for (var i = 0; i < files.length; i++) {
            // Check extensions here
            this.uploadFiles.push(files[i]);
        }
        console.log(this.uploadFiles);
    };
    EasyFeesSetupComponent.prototype.removeFile = function (index) {
        this.uploadFiles = this.uploadFiles.slice(0, index).concat(this.uploadFiles.slice(index + 1));
    };
    EasyFeesSetupComponent.prototype.composeForm = function () {
        var merchantForm = this.merchantSignupForm.value;
        var composed = Object.assign({
            uploadFiles: this.uploadFiles
        }, merchantForm['step1'], merchantForm['step2'], merchantForm['step3'], merchantForm['step4']);
        var excessiveKeys = ['alreadyCollecting', 'differentName', 'differentContact'];
        excessiveKeys.forEach(function (key) {
            delete composed[key];
        });
        this.easyFeesManager.submitSignupData(composed);
    };
    EasyFeesSetupComponent.prototype.canSubmit = function () {
        return true;
    };
    EasyFeesSetupComponent.prototype.getDocuments = function () {
        var _this = this;
        var type = this.COMPANY_TYPES.find(function (_type) {
            return _type.value === _this.businessType.value;
        });
        return type ? type.documents : [];
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('fileInput'), 
        __metadata('design:type', Object)
    ], EasyFeesSetupComponent.prototype, "fileInput", void 0);
    EasyFeesSetupComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-easy-fees-setup',
            template: __webpack_require__(918),
            styles: [__webpack_require__(871)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_forms__["h" /* FormBuilder */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_forms__["h" /* FormBuilder */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__easy_fees_manager_service__["a" /* EasyFeesManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__easy_fees_manager_service__["a" /* EasyFeesManagerService */]) === 'function' && _b) || Object])
    ], EasyFeesSetupComponent);
    return EasyFeesSetupComponent;
    var _a, _b;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/easy-fees-setup.component.js.map

/***/ },
/* 732 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return EasyFeesComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var EasyFeesComponent = (function () {
    function EasyFeesComponent() {
        this.routes = [{
                path: 'intro',
                link: 'Get Started'
            }, {
                path: 'view',
                link: 'Dashboard'
            }, {
                path: 'setup',
                link: 'Easy Fees Setup'
            }];
    }
    EasyFeesComponent.prototype.ngOnInit = function () {
    };
    EasyFeesComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-easy-fees',
            template: __webpack_require__(919),
            styles: [__webpack_require__(696)]
        }), 
        __metadata('design:paramtypes', [])
    ], EasyFeesComponent);
    return EasyFeesComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/easy-fees.component.js.map

/***/ },
/* 733 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return LandingPageComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var LandingPageComponent = (function () {
    function LandingPageComponent() {
        this.showLogin = true;
    }
    LandingPageComponent.prototype.ngOnInit = function () {
    };
    LandingPageComponent.prototype.toggleView = function () {
        this.showLogin = !this.showLogin;
    };
    LandingPageComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-landing-page',
            template: __webpack_require__(920),
            styles: [__webpack_require__(872)],
        }), 
        __metadata('design:paramtypes', [])
    ], LandingPageComponent);
    return LandingPageComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/landing-page.component.js.map

/***/ },
/* 734 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return OccupancyTransitionsComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var OccupancyTransitionsComponent = (function () {
    function OccupancyTransitionsComponent() {
        this.datelist = [];
        this.datelist = [
            { id: "1", name: "JAN 17", selected: true },
            { id: "2", name: "FEB 17", selected: false },
            { id: "3", name: "MAR 17", selected: false },
            { id: "4", name: "APR 17", selected: false },
            { id: "5", name: "MAY 17", selected: false },
            { id: "6", name: "JUN 17", selected: false },
            { id: "7", name: "JUL 17", selected: false },
            { id: "8", name: "AUG 17", selected: false },
            { id: "9", name: "SEP 17", selected: false }
        ];
    }
    OccupancyTransitionsComponent.prototype.ngOnInit = function () {
        this.selectedDate = "JAN 17";
    };
    OccupancyTransitionsComponent.prototype.selectDateTab = function (id) {
        var _this = this;
        this.datelist.forEach(function (data) {
            data.selected = false;
            if (data.id == id) {
                _this.selectedDate = data.name;
                data.selected = true;
            }
        });
    };
    OccupancyTransitionsComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-occupancy-transitions',
            template: __webpack_require__(930),
            styles: [__webpack_require__(881), __webpack_require__(672)]
        }), 
        __metadata('design:paramtypes', [])
    ], OccupancyTransitionsComponent);
    return OccupancyTransitionsComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/occupancy-transitions.component.js.map

/***/ },
/* 735 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return OccupancyComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var OccupancyComponent = (function () {
    function OccupancyComponent() {
        this.routes = [{
                path: 'all',
                link: 'Dashboard',
            }, {
                path: 'rooms',
                link: 'Room Lists',
            }, {
                path: 'setup',
                link: 'Setup'
            }, {
                path: 'trans',
                link: 'Transitions & Inductinns'
            }];
    }
    OccupancyComponent.prototype.ngOnInit = function () {
    };
    OccupancyComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-occupancy',
            template: __webpack_require__(931),
            styles: [__webpack_require__(672)]
        }), 
        __metadata('design:paramtypes', [])
    ], OccupancyComponent);
    return OccupancyComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/occupancy.component.js.map

/***/ },
/* 736 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs__ = __webpack_require__(673);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_http_client_service__ = __webpack_require__(669);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return OccupancyService; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var OccupancyService = (function () {
    function OccupancyService(http) {
        this.http = http;
        this.store = new __WEBPACK_IMPORTED_MODULE_1_rxjs__["BehaviorSubject"]({});
        this.staffs = [];
        /***** Fake Data ******/
        this.staffs = [{
                id: "1", name: "Jane Doherty", qualification: "1", startdate: "", enddate: "", assignedRoom: { mon: { am: "1", pm: "2" }, tue: { am: "0", pm: "1" }, wed: { am: "1", pm: "2" }, thu: { am: "0", pm: "3" }, fri: { am: "1", pm: "2" } }
            }];
        this.store.next(this.staffs);
        /***** //Fake Data ******/
    }
    Object.defineProperty(OccupancyService.prototype, "store$", {
        get: function () {
            return this.store.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    //add new Staff
    OccupancyService.prototype.addStaff = function (staff) {
        /******** push fake data ********/
        this.staffs.push(staff);
        this.store.next(this.staffs);
        /******** //push fake data ********/
    };
    //update Staff by staff.id
    OccupancyService.prototype.updateStaff = function (staff) {
        /******** push fake data ********/
        this.staffs = this.staffs.map(function (_staff) {
            return _staff.id === staff.id ? staff : _staff;
        });
        this.store.next(this.staffs);
        /******** //push fake data ********/
    };
    OccupancyService = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__shared_http_client_service__["a" /* HttpClientService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__shared_http_client_service__["a" /* HttpClientService */]) === 'function' && _a) || Object])
    ], OccupancyService);
    return OccupancyService;
    var _a;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/occupancy.service.js.map

/***/ },
/* 737 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return PlanDashboardComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var PlanDashboardComponent = (function () {
    function PlanDashboardComponent() {
        this.childs = [];
        this.staffs = [];
        this.ageGroup = [];
        this.dashboardData = [];
        this.dates = ["JAN1", "FEB2", "MAR3", "APR4", "MAY5", "JUN6", "JUL7", "AUG8", "SEP9"];
        this.dateTabs = [
            { name: "Week", active: false },
            { name: "Month", active: true },
            { name: "3-Month", active: false }
        ];
        /******************** fake data ********************* */
        this.ageGroup = [
            { id: "1", serviceType: 0, name: "0-1 years", adultNo: 1, childNo: 3 },
            { id: "2", serviceType: 0, name: "1-2.5 years", adultNo: 1, childNo: 5 },
            { id: "3", serviceType: 0, name: "2.5-6 years", adultNo: 1, childNo: 11 },
            { id: "4", serviceType: 1, name: "0-1 years", adultNo: 1, childNo: 3 },
            { id: "5", serviceType: 1, name: "1-2 years", adultNo: 1, childNo: 5 },
            { id: "6", serviceType: 1, name: "2-3 years", adultNo: 1, childNo: 6 },
            { id: "7", serviceType: 1, name: "3-6 years", adultNo: 1, childNo: 8 }
        ];
        this.staffs = [
            { id: "1", name: "Jane Doherty", qualification: "1", startdate: "", enddate: "", assignedRoom: { mon: { am: "1", pm: "2" }, tue: { am: "0", pm: "1" }, wed: { am: "1", pm: "2" }, thu: { am: "0", pm: "3" }, fri: { am: "1", pm: "2" } } },
            { id: "2", name: "Jane Doherty", qualification: "1", startdate: "", enddate: "", assignedRoom: { mon: { am: "1", pm: "2" }, tue: { am: "0", pm: "1" }, wed: { am: "1", pm: "2" }, thu: { am: "0", pm: "3" }, fri: { am: "1", pm: "2" } } }
        ];
        this.childs = [
            { id: "1", name: "Jane Doherty", age: "2yr 5m", birthdate: "2014-12-22", officialStartdate: "2016-12-21", roomStartdate: "2016-12-21", roomEnddate: "", paperwork: true, assignedRoom: "1", movetoRoom: "2", movetoDate: "2016-12-22", parentName: "parent", parentEmail: "parent@mail.com", deposit: "1", assignedState: { mon: { am: true, pm: true }, tue: { am: true, pm: false }, wed: { am: true, pm: false }, thu: { am: true, pm: true }, fri: { am: false, pm: false } } },
            { id: "2", name: "Mecel Doherty", age: "2yr 5m", birthdate: "2014-12-22", officialStartdate: "2016-12-21", roomStartdate: "2016-12-21", roomEnddate: "", paperwork: true, assignedRoom: "1", movetoRoom: "2", movetoDate: "2016-12-22", parentName: "parent", parentEmail: "parent@mail.com", deposit: "1", assignedState: { mon: { am: true, pm: true }, tue: { am: true, pm: false }, wed: { am: true, pm: false }, thu: { am: true, pm: true }, fri: { am: false, pm: false } } },
            { id: "3", name: "Mike Doherty", age: "2yr 5m", birthdate: "2014-12-22", officialStartdate: "2016-12-21", roomStartdate: "2016-12-21", roomEnddate: "", paperwork: true, assignedRoom: "2", movetoRoom: "2", movetoDate: "2016-12-22", parentName: "parent", parentEmail: "parent@mail.com", deposit: "1", assignedState: { mon: { am: true, pm: true }, tue: { am: true, pm: false }, wed: { am: true, pm: false }, thu: { am: true, pm: true }, fri: { am: false, pm: false } } },
            { id: "4", name: "John Doherty", age: "2yr 5m", birthdate: "2014-12-22", officialStartdate: "2016-12-21", roomStartdate: "2016-12-21", roomEnddate: "", paperwork: true, assignedRoom: "3", movetoRoom: "2", movetoDate: "2016-12-22", parentName: "parent", parentEmail: "parent@mail.com", deposit: "1", assignedState: { mon: { am: true, pm: true }, tue: { am: true, pm: false }, wed: { am: true, pm: false }, thu: { am: true, pm: true }, fri: { am: false, pm: false } } },
            { id: "5", name: "Srah Doherty", age: "2yr 5m", birthdate: "2014-12-22", officialStartdate: "2016-12-21", roomStartdate: "2016-12-21", roomEnddate: "", paperwork: true, assignedRoom: "3", movetoRoom: "2", movetoDate: "2016-12-22", parentName: "parent", parentEmail: "parent@mail.com", deposit: "1", assignedState: { mon: { am: true, pm: true }, tue: { am: true, pm: false }, wed: { am: true, pm: false }, thu: { am: true, pm: true }, fri: { am: false, pm: false } } }
        ];
        this.rooms = [
            { id: "1", name: "Baby Room 1", ageGroup: "1", capacity: { mon: { am: "3", pm: "0" }, tue: { am: "0", pm: "3" }, wed: { am: "3", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "3", pm: "0" } }, transitionRoom: "2", transitionAge: "1", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "2", name: "Baby Room 2", ageGroup: "2", capacity: { mon: { am: "0", pm: "5" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "5" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "5" } }, transitionRoom: "3", transitionAge: "2", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "3", name: "Wobbler Room 1", ageGroup: "3", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "11" }, fri: { am: "0", pm: "0" } }, transitionRoom: "4", transitionAge: "3", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "4", name: "Toddler Room 1", ageGroup: "4", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } }, transitionRoom: "5", transitionAge: "4", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "5", name: "Pre-Montessori Room 1", ageGroup: "5", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } }, transitionRoom: "6", transitionAge: "5", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "6", name: "Montessori Room 1", ageGroup: "6", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } }, transitionRoom: "7", transitionAge: "5", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "7", name: "After School", ageGroup: "7", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } }, transitionRoom: "1", transitionAge: "7", ecceCapitations: "", selected: false, assignedStaff: [] }
        ];
        this.dashboardData = [
            { id: "1", roomId: "1", capacity: 10, accordionState: false, roomInfo: [
                    { id: "1", mdate: "2017-01", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "2", mdate: "2017-02", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "-3", pm: "1" }, active: false },
                    { id: "3", mdate: "2017-03", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "4", pm: "2" }, active: false },
                    { id: "4", mdate: "2017-04", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "4" }, active: false },
                    { id: "5", mdate: "2017-05", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "5", pm: "1" }, active: false },
                    { id: "6", mdate: "2017-06", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "3", pm: "2" }, active: false },
                    { id: "7", mdate: "2017-07", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "-3", pm: "3" }, active: false },
                    { id: "8", mdate: "2017-08", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "6", pm: "5" }, active: false },
                    { id: "9", mdate: "2017-09", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "1", pm: "6" }, active: false }
                ] },
            { id: "2", roomId: "2", capacity: 6, accordionState: false, roomInfo: [
                    { id: "1", mdate: "2017-01", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "1", pm: "5" }, active: false },
                    { id: "2", mdate: "2017-02", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "3", pm: "2" }, active: false },
                    { id: "3", mdate: "2017-03", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "6", pm: "5" }, active: false },
                    { id: "4", mdate: "2017-04", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "-7", pm: "7" }, active: false },
                    { id: "5", mdate: "2017-05", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "8", pm: "9" }, active: false },
                    { id: "6", mdate: "2017-06", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "9", pm: "8" }, active: false },
                    { id: "7", mdate: "2017-07", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "1", pm: "7" }, active: false },
                    { id: "8", mdate: "2017-08", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "2" }, active: false },
                    { id: "9", mdate: "2017-09", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "1", pm: "4" }, active: false }
                ] },
            { id: "3", roomId: "3", capacity: 10, accordionState: false, roomInfo: [
                    { id: "1", mdate: "2017-01", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "2", mdate: "2017-02", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "3", mdate: "2017-03", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "4", mdate: "2017-04", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "-2", pm: "5" }, active: false },
                    { id: "5", mdate: "2017-05", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "6", mdate: "2017-06", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "7", mdate: "2017-07", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "8", mdate: "2017-08", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "9", mdate: "2017-09", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false }
                ] },
            { id: "4", roomId: "4", capacity: 10, accordionState: false, roomInfo: [
                    { id: "1", mdate: "2017-01", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "2", mdate: "2017-02", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "3", mdate: "2017-03", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "4", mdate: "2017-04", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "-5" }, active: false },
                    { id: "5", mdate: "2017-05", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "6", mdate: "2017-06", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "7", mdate: "2017-07", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "8", mdate: "2017-08", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "9", mdate: "2017-09", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false }
                ] },
            { id: "5", roomId: "5", capacity: 10, accordionState: false, roomInfo: [
                    { id: "1", mdate: "2017-01", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "2", mdate: "2017-02", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "3", mdate: "2017-03", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "4", mdate: "2017-04", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "-5" }, active: false },
                    { id: "5", mdate: "2017-05", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "6", mdate: "2017-06", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "7", mdate: "2017-07", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "8", mdate: "2017-08", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "9", mdate: "2017-09", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false }
                ] },
            { id: "6", roomId: "6", capacity: 10, accordionState: false, roomInfo: [
                    { id: "1", mdate: "2017-01", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "2", mdate: "2017-02", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "3", mdate: "2017-03", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "4", mdate: "2017-04", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "5", mdate: "2017-05", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "6", mdate: "2017-06", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "7", mdate: "2017-07", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "8", mdate: "2017-08", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false },
                    { id: "9", mdate: "2017-09", personInfo: { staff: this.staffs, child: this.childs }, available: { am: "2", pm: "5" }, active: false }
                ] },
        ];
        /****************** //fake data ********************* */
    }
    PlanDashboardComponent.prototype.ngOnInit = function () {
    };
    PlanDashboardComponent.prototype.selDatePicker = function (idx) {
        this.dateTabs.forEach(function (tab) {
            tab.active = false;
        });
        this.dateTabs[idx].active = true;
    };
    //get room name by room.id
    PlanDashboardComponent.prototype.getRoomNameById = function (id) {
        var _room = this.rooms.find(function (room) { return room.id === id; });
        return id == "0" ? "NOT IN" : _room.name;
    };
    //select session
    PlanDashboardComponent.prototype.selectCell = function (idx, jdx) {
        if (this.dashboardData[idx].accordionState == true && this.selectedDateIndex == jdx) {
            this.dashboardData[idx].accordionState = false;
            this.dashboardData[idx].roomInfo[jdx].active = false;
        }
        else {
            this.removeAccordion();
            this.selectedRoomIndex = idx;
            this.selectedDateIndex = jdx;
            this.selectedRoomInfo = this.dashboardData[idx].roomInfo[jdx];
            this.selectedRoomID = this.dashboardData[idx].roomId;
            this.dashboardData[idx].accordionState = true;
            this.dashboardData[idx].roomInfo[jdx].active = true;
        }
    };
    PlanDashboardComponent.prototype.removeAccordion = function () {
        this.dashboardData.forEach(function (_room) {
            _room.accordionState = false;
            _room.roomInfo.forEach(function (list) {
                list.active = false;
            });
        });
    };
    PlanDashboardComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-plan-dashboard',
            template: __webpack_require__(932),
            styles: [__webpack_require__(882), __webpack_require__(672)]
        }), 
        __metadata('design:paramtypes', [])
    ], PlanDashboardComponent);
    return PlanDashboardComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/plan-dashboard.component.js.map

/***/ },
/* 738 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment__ = __webpack_require__(668);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment__);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return PlanRoomListsComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var PlanRoomListsComponent = (function () {
    function PlanRoomListsComponent() {
        this.childs = [];
        this.pureStore = [];
        this.waitingChild = [];
        this.deposit = [];
        this.week = [];
        this.currentDate = __WEBPACK_IMPORTED_MODULE_1_moment__().startOf('isoWeek');
        this.showOccupancyModal = false;
        this.showChildModal = false;
        this.title = "";
        this.selectedRoomID = "0";
        /******************** fake data ********************* */
        this.deposit = [
            { id: "1", name: "PAID" },
            { id: "2", name: "NOT PAID" },
            { id: "3", name: "ENQUIRE ONLY" }
        ];
        this.childs = [
            { id: "1", name: "Jane Doherty", age: "2yr 5m", birthdate: "2014-12-22", officialStartdate: "2016-12-21", roomStartdate: "2016-12-21", roomEnddate: "", paperwork: true, assignedRoom: "1", movetoRoom: "2", movetoDate: "2016-12-22", parentName: "parent", parentEmail: "parent@mail.com", deposit: "1", assignedState: { mon: { am: true, pm: true }, tue: { am: true, pm: false }, wed: { am: true, pm: false }, thu: { am: true, pm: true }, fri: { am: false, pm: false } } },
            { id: "2", name: "Mecel Doherty", age: "2yr 5m", birthdate: "2014-12-22", officialStartdate: "2016-12-21", roomStartdate: "2016-12-21", roomEnddate: "", paperwork: true, assignedRoom: "1", movetoRoom: "2", movetoDate: "2016-12-22", parentName: "parent", parentEmail: "parent@mail.com", deposit: "1", assignedState: { mon: { am: true, pm: true }, tue: { am: true, pm: false }, wed: { am: true, pm: false }, thu: { am: true, pm: true }, fri: { am: false, pm: false } } },
            { id: "3", name: "Mike Doherty", age: "2yr 5m", birthdate: "2014-12-22", officialStartdate: "2016-12-21", roomStartdate: "2016-12-21", roomEnddate: "", paperwork: true, assignedRoom: "2", movetoRoom: "2", movetoDate: "2016-12-22", parentName: "parent", parentEmail: "parent@mail.com", deposit: "1", assignedState: { mon: { am: true, pm: true }, tue: { am: true, pm: false }, wed: { am: true, pm: false }, thu: { am: true, pm: true }, fri: { am: false, pm: false } } },
            { id: "4", name: "John Doherty", age: "2yr 5m", birthdate: "2014-12-22", officialStartdate: "2016-12-21", roomStartdate: "2016-12-21", roomEnddate: "", paperwork: true, assignedRoom: "3", movetoRoom: "2", movetoDate: "2016-12-22", parentName: "parent", parentEmail: "parent@mail.com", deposit: "1", assignedState: { mon: { am: true, pm: true }, tue: { am: true, pm: false }, wed: { am: true, pm: false }, thu: { am: true, pm: true }, fri: { am: false, pm: false } } },
            { id: "5", name: "Srah Doherty", age: "2yr 5m", birthdate: "2014-12-22", officialStartdate: "2016-12-21", roomStartdate: "2016-12-21", roomEnddate: "", paperwork: true, assignedRoom: "3", movetoRoom: "2", movetoDate: "2016-12-22", parentName: "parent", parentEmail: "parent@mail.com", deposit: "1", assignedState: { mon: { am: true, pm: true }, tue: { am: true, pm: false }, wed: { am: true, pm: false }, thu: { am: true, pm: true }, fri: { am: false, pm: false } } }
        ];
        this.pureStore = [
            { id: "1", name: "Jane Doherty", age: "2yr 5m", birthdate: "2014-12-22", officialStartdate: "2016-12-21", roomStartdate: "2016-12-21", roomEnddate: "", paperwork: true, assignedRoom: "1", movetoRoom: "2", movetoDate: "2016-12-22", parentName: "parent", parentEmail: "parent@mail.com", deposit: "1", assignedState: { mon: { am: true, pm: true }, tue: { am: true, pm: false }, wed: { am: true, pm: false }, thu: { am: true, pm: true }, fri: { am: false, pm: false } } },
            { id: "2", name: "Mecel Doherty", age: "2yr 5m", birthdate: "2014-12-22", officialStartdate: "2016-12-21", roomStartdate: "2016-12-21", roomEnddate: "", paperwork: true, assignedRoom: "1", movetoRoom: "2", movetoDate: "2016-12-22", parentName: "parent", parentEmail: "parent@mail.com", deposit: "1", assignedState: { mon: { am: true, pm: true }, tue: { am: true, pm: false }, wed: { am: true, pm: false }, thu: { am: true, pm: true }, fri: { am: false, pm: false } } },
            { id: "3", name: "Mike Doherty", age: "2yr 5m", birthdate: "2014-12-22", officialStartdate: "2016-12-21", roomStartdate: "2016-12-21", roomEnddate: "", paperwork: true, assignedRoom: "2", movetoRoom: "2", movetoDate: "2016-12-22", parentName: "parent", parentEmail: "parent@mail.com", deposit: "1", assignedState: { mon: { am: true, pm: true }, tue: { am: true, pm: false }, wed: { am: true, pm: false }, thu: { am: true, pm: true }, fri: { am: false, pm: false } } },
            { id: "4", name: "John Doherty", age: "2yr 5m", birthdate: "2014-12-22", officialStartdate: "2016-12-21", roomStartdate: "2016-12-21", roomEnddate: "", paperwork: true, assignedRoom: "3", movetoRoom: "2", movetoDate: "2016-12-22", parentName: "parent", parentEmail: "parent@mail.com", deposit: "1", assignedState: { mon: { am: true, pm: true }, tue: { am: true, pm: false }, wed: { am: true, pm: false }, thu: { am: true, pm: true }, fri: { am: false, pm: false } } },
            { id: "5", name: "Srah Doherty", age: "2yr 5m", birthdate: "2014-12-22", officialStartdate: "2016-12-21", roomStartdate: "2016-12-21", roomEnddate: "", paperwork: true, assignedRoom: "3", movetoRoom: "2", movetoDate: "2016-12-22", parentName: "parent", parentEmail: "parent@mail.com", deposit: "1", assignedState: { mon: { am: true, pm: true }, tue: { am: true, pm: false }, wed: { am: true, pm: false }, thu: { am: true, pm: true }, fri: { am: false, pm: false } } }
        ];
        this.waitingChild = [
            { id: "1", name: "Jane Doherty", age: "2yr 5m", birthdate: "2014-12-22", officialStartdate: "2016-12-21", roomStartdate: "", roomEnddate: "", paperwork: true, assignedRoom: "1", movetoRoom: "2", movetoDate: "2016-12-22", parentName: "parent", parentEmail: "parent@mail.com", deposit: "1", assignedState: { mon: { am: false, pm: false }, tue: { am: false, pm: false }, wed: { am: false, pm: false }, thu: { am: false, pm: false }, fri: { am: false, pm: false } } },
            { id: "2", name: "Mecel Doherty", age: "2yr 5m", birthdate: "2014-12-22", officialStartdate: "2016-12-21", roomStartdate: "", roomEnddate: "", paperwork: false, assignedRoom: "1", movetoRoom: "2", movetoDate: "2016-12-22", parentName: "parent", parentEmail: "parent@mail.com", deposit: "2", assignedState: { mon: { am: false, pm: false }, tue: { am: false, pm: false }, wed: { am: false, pm: false }, thu: { am: false, pm: false }, fri: { am: false, pm: false } } },
            { id: "3", name: "Mike Doherty", age: "2yr 5m", birthdate: "2014-12-22", officialStartdate: "2016-12-21", roomStartdate: "", roomEnddate: "", paperwork: true, assignedRoom: "1", movetoRoom: "2", movetoDate: "2016-12-22", parentName: "parent", parentEmail: "parent@mail.com", deposit: "1", assignedState: { mon: { am: false, pm: false }, tue: { am: false, pm: false }, wed: { am: false, pm: false }, thu: { am: false, pm: false }, fri: { am: false, pm: false } } }
        ];
        this.rooms = [
            { id: "1", name: "Baby Room 1", ageGroup: "1", capacity: { mon: { am: "3", pm: "0" }, tue: { am: "0", pm: "3" }, wed: { am: "3", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "3", pm: "0" } }, transitionRoom: "2", transitionAge: "1", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "2", name: "Baby Room 2", ageGroup: "2", capacity: { mon: { am: "0", pm: "5" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "5" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "5" } }, transitionRoom: "3", transitionAge: "2", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "3", name: "Wobbler Room 1", ageGroup: "3", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "11" }, fri: { am: "0", pm: "0" } }, transitionRoom: "4", transitionAge: "3", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "4", name: "Toddler Room 1", ageGroup: "4", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } }, transitionRoom: "5", transitionAge: "4", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "5", name: "Pre-Montessori Room 1", ageGroup: "5", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } }, transitionRoom: "6", transitionAge: "5", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "6", name: "Montessori Room 1", ageGroup: "6", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } }, transitionRoom: "7", transitionAge: "5", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "7", name: "After School", ageGroup: "7", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } }, transitionRoom: "1", transitionAge: "7", ecceCapitations: "", selected: false, assignedStaff: [] }
        ];
        /****************** //fake data ********************* */
        this.dateChange();
    }
    PlanRoomListsComponent.prototype.ngOnInit = function () {
        this.selectedChild = { id: "1", name: "", age: "", birthdate: "", officialStartdate: "", roomStartdate: "", roomEnddate: "", paperwork: false, assignedRoom: "0", movetoRoom: "0", movetoDate: "", parentName: "parent", parentEmail: "parent@mail.com", deposit: "1",
            assignedState: { mon: { am: false, pm: false }, tue: { am: false, pm: false }, wed: { am: false, pm: false }, thu: { am: false, pm: false }, fri: { am: false, pm: false } } };
    };
    PlanRoomListsComponent.prototype.ngOnDestroy = function () {
    };
    //select room tab
    PlanRoomListsComponent.prototype.selectRoom = function (id) {
        this.selectedRoomID = id;
        this.rooms.forEach(function (room) {
            room.selected = false;
            if (room.id == id) {
                room.selected = true;
            }
        });
        this.childs = this.pureStore.filter(function (child) {
            if (child.assignedRoom == id) {
                return true;
            }
            else {
                return false;
            }
        });
    };
    //get room name by room.id
    PlanRoomListsComponent.prototype.getRoomNameById = function (id) {
        var _room = this.rooms.find(function (room) { return room.id === id; });
        return id == "0" ? "NOT IN" : _room.name;
    };
    //get deposit name by deposit.id
    PlanRoomListsComponent.prototype.getDepositNameById = function (id) {
        var _deposit = this.deposit.find(function (deposit) { return deposit.id === id; });
        return id == "0" ? "NOT IN" : _deposit.name;
    };
    //get capacity number
    PlanRoomListsComponent.prototype.getRoomCapacityByRoomId = function (week, apm) {
        var _this = this;
        var _room = this.rooms.find(function (room) { return room.id === _this.selectedRoomID; });
        var _capacity = "0";
        switch (week) {
            case "mon":
                if (apm == "am") {
                    _capacity = _room.capacity.mon.am;
                }
                else {
                    _capacity = _room.capacity.mon.pm;
                }
                break;
            case "tue":
                if (apm == "am") {
                    _capacity = _room.capacity.tue.am;
                }
                else {
                    _capacity = _room.capacity.tue.pm;
                }
                break;
            case "wed":
                if (apm == "am") {
                    _capacity = _room.capacity.wed.am;
                }
                else {
                    _capacity = _room.capacity.wed.pm;
                }
                break;
            case "thu":
                if (apm == "am") {
                    _capacity = _room.capacity.thu.am;
                }
                else {
                    _capacity = _room.capacity.thu.pm;
                }
                break;
            case "fri":
                if (apm == "am") {
                    _capacity = _room.capacity.fri.am;
                }
                else {
                    _capacity = _room.capacity.fri.pm;
                }
                break;
        }
        return _capacity;
    };
    //Click row waiting child
    PlanRoomListsComponent.prototype.selectWaitChild = function (child) {
        this.selectedChild = child;
        this.showOccupancyModal = true;
    };
    //Click a row in the room list
    PlanRoomListsComponent.prototype.selectRoomChild = function (child) {
        this.selectedChild = child;
        this.showChildModal = true;
    };
    //move to room
    PlanRoomListsComponent.prototype.moveFromWaitRoomToRoom = function (child) {
        var wChild = this.waitingChild.find(function (wChild) { return wChild.id == child.id; });
        this.waitingChild.splice(this.waitingChild.indexOf(wChild), 1);
        child.id = (this.childs.length + 1).toString();
        this.childs.push(child);
        this.pureStore.push(child);
    };
    PlanRoomListsComponent.prototype.modalClosed = function () {
        this.showOccupancyModal = false;
        this.showChildModal = false;
    };
    PlanRoomListsComponent.prototype.prevMonth = function () {
        this.currentDate.subtract(1, 'month');
        this.dateChange();
    };
    PlanRoomListsComponent.prototype.nextMonth = function () {
        this.currentDate.add(1, 'month');
        this.dateChange();
    };
    PlanRoomListsComponent.prototype.prevWeek = function () {
        this.currentDate.subtract(1, 'week');
        this.dateChange();
    };
    PlanRoomListsComponent.prototype.nextWeek = function () {
        this.currentDate.add(1, 'week');
        this.dateChange();
    };
    PlanRoomListsComponent.prototype.dateChange = function () {
        var startOfWeek = __WEBPACK_IMPORTED_MODULE_1_moment__(this.currentDate).startOf('isoWeek');
        var currentWeek = { start: +startOfWeek.format('x'), end: 0 };
        var daysOfWeek = [];
        while (startOfWeek.isoWeekday() <= 5) {
            daysOfWeek.push({
                day: startOfWeek.format('dddd'),
                date: startOfWeek.format('Do'),
                inactive: !startOfWeek.isSame(__WEBPACK_IMPORTED_MODULE_1_moment__(this.currentDate), 'month')
            });
            startOfWeek.add(1, 'day');
        }
        currentWeek.end = +startOfWeek.format('x');
        this.week = daysOfWeek;
    };
    PlanRoomListsComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-plan-room-lists',
            template: __webpack_require__(933),
            styles: [__webpack_require__(883), __webpack_require__(672)]
        }), 
        __metadata('design:paramtypes', [])
    ], PlanRoomListsComponent);
    return PlanRoomListsComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/plan-room-lists.component.js.map

/***/ },
/* 739 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__occupancy_service__ = __webpack_require__(736);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__occupancy_model__ = __webpack_require__(678);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return PlanSetupComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var PlanSetupComponent = (function () {
    function PlanSetupComponent(OccupancyService) {
        var _this = this;
        this.OccupancyService = OccupancyService;
        this.staffs = [];
        this.qualification = [];
        this.ageGroup = [];
        this.showOccupancyModal = false;
        this.isEdit = false;
        this.maxID = 0;
        this.title = "Add Staff";
        this.selectedRoomID = "1";
        var staffs$ = this.OccupancyService.store$.subscribe(function (staffs) {
            _this.staffs = staffs;
        });
        // const rooms$ = this.roomManager.store$.subscribe(rooms => {
        //   this.rooms = rooms;
        // });
        this.sub = staffs$;
        // this.sub.add(rooms$);
        /******************** fake data ********************* */
        this.ageGroup = [
            { id: "1", serviceType: 0, name: "0-1 years", adultNo: 1, childNo: 3 },
            { id: "2", serviceType: 0, name: "1-2.5 years", adultNo: 1, childNo: 5 },
            { id: "3", serviceType: 0, name: "2.5-6 years", adultNo: 1, childNo: 11 },
            { id: "4", serviceType: 1, name: "0-1 years", adultNo: 1, childNo: 3 },
            { id: "5", serviceType: 1, name: "1-2 years", adultNo: 1, childNo: 5 },
            { id: "6", serviceType: 1, name: "2-3 years", adultNo: 1, childNo: 6 },
            { id: "7", serviceType: 1, name: "3-6 years", adultNo: 1, childNo: 8 }
        ];
        this.rooms = [
            { id: "1", name: "Baby Room 1", ageGroup: "1", capacity: { mon: { am: "3", pm: "0" }, tue: { am: "0", pm: "3" }, wed: { am: "3", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "3", pm: "0" } }, transitionRoom: "2", transitionAge: "1", ecceCapitations: "", selected: false,
                assignedStaff: [{ id: "1", name: "Jane Doherty", qualification: "1", startdate: "", enddate: "", assignedRoom: { mon: { am: "1", pm: "2" }, tue: { am: "0", pm: "1" }, wed: { am: "1", pm: "2" }, thu: { am: "0", pm: "3" }, fri: { am: "1", pm: "2" } } }] },
            { id: "2", name: "Baby Room 2", ageGroup: "2", capacity: { mon: { am: "0", pm: "5" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "5" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "5" } }, transitionRoom: "3", transitionAge: "2", ecceCapitations: "", selected: false,
                assignedStaff: [{ id: "1", name: "Jane Doherty", qualification: "1", startdate: "", enddate: "", assignedRoom: { mon: { am: "1", pm: "2" }, tue: { am: "0", pm: "1" }, wed: { am: "1", pm: "2" }, thu: { am: "0", pm: "3" }, fri: { am: "1", pm: "2" } } }] },
            { id: "3", name: "Wobbler Room 1", ageGroup: "3", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "11" }, fri: { am: "0", pm: "0" } }, transitionRoom: "4", transitionAge: "3", ecceCapitations: "", selected: false,
                assignedStaff: [{ id: "1", name: "Jane Doherty", qualification: "1", startdate: "", enddate: "", assignedRoom: { mon: { am: "1", pm: "2" }, tue: { am: "0", pm: "1" }, wed: { am: "1", pm: "2" }, thu: { am: "0", pm: "3" }, fri: { am: "1", pm: "2" } } }] },
            { id: "4", name: "Toddler Room 1", ageGroup: "4", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } }, transitionRoom: "5", transitionAge: "4", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "5", name: "Pre-Montessori Room 1", ageGroup: "5", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } }, transitionRoom: "6", transitionAge: "5", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "6", name: "Montessori Room 1", ageGroup: "6", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } }, transitionRoom: "7", transitionAge: "5", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "7", name: "After School", ageGroup: "7", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } }, transitionRoom: "1", transitionAge: "7", ecceCapitations: "", selected: false, assignedStaff: [] }
        ];
        this.qualification = [
            { id: "1", name: "FETAC 1" },
            { id: "2", name: "FETAC 2" },
            { id: "3", name: "FETAC 3" },
            { id: "4", name: "FETAC 4" },
            { id: "5", name: "FETAC 5" }
        ];
        /****************** //fake data ********************* */
    }
    PlanSetupComponent.prototype.ngOnInit = function () {
        var _this = this;
        //This table will show which rooms the staff member is assigned to most.
        var maxLen = 0;
        this.rooms.forEach(function (room) {
            if (maxLen < room.assignedStaff.length) {
                maxLen = room.assignedStaff.length;
                _this.selectedRoomID = room.id;
            }
        });
        var _room = this.rooms.find(function (room) { return room.id === _this.selectedRoomID; });
        this.rooms.find(function (room) { return room.id === _this.selectedRoomID; }).selected = true;
        this.selectedRoom = _room;
    };
    PlanSetupComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    //get room name by room.id
    PlanSetupComponent.prototype.getRoomNameById = function (id) {
        var _room = this.rooms.find(function (room) { return room.id === id; });
        return id == "0" ? "NOT IN" : _room.name;
    };
    //get qualification name by room.id
    PlanSetupComponent.prototype.getQualificationNameById = function (id) {
        var _qualification = this.qualification.find(function (qualification) { return qualification.id === id; });
        return id == "0" ? "NOT" : _qualification.name;
    };
    //select room tab
    PlanSetupComponent.prototype.selectRoom = function (id) {
        this.selectedRoom = null;
        this.selectedRoomID = id;
        this.rooms.find(function (_room) { return _room.selected == true; }).selected = false;
        this.selectedRoom = this.rooms.find(function (_room) { return _room.id === id; });
        this.selectedRoom.selected = true;
    };
    //Click a row for edit or Add button for add new staff
    PlanSetupComponent.prototype.controlStaffs = function (isEdit, staff) {
        this.isEdit = isEdit;
        if (!this.isEdit) {
            this.title = "Add Staff";
            this.maxID = this.staffs.length;
            this.selectedStaff = new __WEBPACK_IMPORTED_MODULE_2__occupancy_model__["a" /* Staff */]({ id: (this.maxID + 1), name: "", qualification: "0", startdate: "", enddate: "", assignedRoom: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } } });
        }
        else {
            this.selectedStaff = staff;
            this.title = staff.name;
        }
        this.showOccupancyModal = true;
    };
    PlanSetupComponent.prototype.modalClosed = function () {
        this.showOccupancyModal = false;
    };
    PlanSetupComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-plan-setup',
            template: __webpack_require__(934),
            styles: [__webpack_require__(884), __webpack_require__(672)],
            providers: [__WEBPACK_IMPORTED_MODULE_1__occupancy_service__["a" /* OccupancyService */]]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__occupancy_service__["a" /* OccupancyService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__occupancy_service__["a" /* OccupancyService */]) === 'function' && _a) || Object])
    ], PlanSetupComponent);
    return PlanSetupComponent;
    var _a;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/plan-setup.component.js.map

/***/ },
/* 740 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_rooms_manager_service__ = __webpack_require__(674);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_reports_manager_service__ = __webpack_require__(701);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs__ = __webpack_require__(673);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_moment__ = __webpack_require__(668);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_moment__);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return ReportsComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var ReportsComponent = (function () {
    function ReportsComponent(route, roomsManager, reportsManager) {
        var _this = this;
        this.route = route;
        this.roomsManager = roomsManager;
        this.reportsManager = reportsManager;
        this.rooms = [];
        this.selectedWeek$ = new __WEBPACK_IMPORTED_MODULE_4_rxjs__["Subject"]();
        this.currentDate = __WEBPACK_IMPORTED_MODULE_5_moment__().startOf('isoWeek');
        this.week = [];
        var rooms$ = this.roomsManager.store$.subscribe(function (rooms) {
            if (rooms.length) {
                _this.rooms = rooms;
                var routes = [
                    {
                        path: '/dashboard/reports/all',
                        link: 'All Rooms',
                    }
                ].concat(rooms.map(function (item) {
                    return {
                        path: '../' + item.id,
                        link: item.name
                    };
                }));
                _this.routes = routes;
            }
            else {
                _this.routes = [
                    {
                        path: '/dashboard/reports/all',
                        link: 'All Rooms',
                    }
                ];
            }
        });
        this.sub = this.selectedWeek$.switchMap(function (week) {
            return _this.reportsManager.loadReports(week.start, week.end, _this.selectedRoom);
        }).subscribe(function (reports) {
            _this.reports = reports.sort(function (a, b) {
                return a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1;
            });
        }, function (e) {
            console.error(e);
        });
        this.sub.add(rooms$);
        this.dateChange();
    }
    ReportsComponent.prototype.ngOnInit = function () {
        var _this = this;
        var params$ = this.route.params.subscribe(function (params) {
            _this.selectedRoom = params['id'] !== 'all' ? params['id'] : null;
            _this.dateChange();
        });
        this.sub.add(params$);
    };
    ReportsComponent.prototype.ngOnDestroy = function () {
        if (!this.sub.closed) {
            this.sub.unsubscribe();
        }
    };
    ReportsComponent.prototype.prevMonth = function () {
        this.currentDate.subtract(1, 'month');
        this.dateChange();
    };
    ReportsComponent.prototype.nextMonth = function () {
        this.currentDate.add(1, 'month');
        this.dateChange();
    };
    ReportsComponent.prototype.prevWeek = function () {
        this.currentDate.subtract(1, 'week');
        this.dateChange();
    };
    ReportsComponent.prototype.nextWeek = function () {
        this.currentDate.add(1, 'week');
        this.dateChange();
    };
    ReportsComponent.prototype.dateChange = function () {
        var startOfWeek = __WEBPACK_IMPORTED_MODULE_5_moment__(this.currentDate).startOf('isoWeek');
        var currentWeek = { start: +startOfWeek.format('x'), end: 0 };
        var daysOfWeek = [];
        while (startOfWeek.isoWeekday() <= 5) {
            daysOfWeek.push({
                day: startOfWeek.format('dddd'),
                date: startOfWeek.format('MMM Do'),
                inactive: !startOfWeek.isSame(__WEBPACK_IMPORTED_MODULE_5_moment__(this.currentDate), 'month')
            });
            startOfWeek.add(1, 'day');
        }
        currentWeek.end = +startOfWeek.format('x');
        this.week = daysOfWeek;
        this.selectedWeek$.next(currentWeek);
    };
    ReportsComponent.prototype.printReport = function () {
        // var printContents = document.getElementById("reportDiv").innerHTML;
        // var popupWin = window.open('', '_blank', 'width=600,height=400');
        // popupWin.document.open();
        // popupWin.document.write('<html><head><link rel="stylesheet" type="text/css" href="style.css" /></head><body onload="window.print()">' + printContents + '</body></html>');
        // popupWin.document.close();
    };
    ReportsComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-reports',
            template: __webpack_require__(936),
            styles: [__webpack_require__(886)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* ActivatedRoute */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* ActivatedRoute */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__shared_rooms_manager_service__["a" /* RoomsManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__shared_rooms_manager_service__["a" /* RoomsManagerService */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_3__shared_reports_manager_service__["a" /* ReportsManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__shared_reports_manager_service__["a" /* ReportsManagerService */]) === 'function' && _c) || Object])
    ], ReportsComponent);
    return ReportsComponent;
    var _a, _b, _c;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/reports.component.js.map

/***/ },
/* 741 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_angular2_mdl__ = __webpack_require__(693);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_children_manager_service__ = __webpack_require__(684);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_rooms_manager_service__ = __webpack_require__(674);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return CentreChildrenComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var CentreChildrenComponent = (function () {
    function CentreChildrenComponent(childrenManager, roomManager, mdlSnackbarService, mdlDialogOutletService, vcr) {
        var _this = this;
        this.childrenManager = childrenManager;
        this.roomManager = roomManager;
        this.mdlSnackbarService = mdlSnackbarService;
        this.mdlDialogOutletService = mdlDialogOutletService;
        this.vcr = vcr;
        this.children = [];
        this.pureStore = [];
        this.showModal = false;
        this.loading = true;
        this.mdlDialogOutletService.setDefaultViewContainerRef(this.vcr);
        this.tableOptions = {
            tooltips: [
                {
                    value: '',
                    className: 'avatar-col',
                    inactive: true
                },
                {
                    value: 'name',
                    caption: 'Child Name',
                    className: 'name-col',
                    sortTransform: function (name) { return name && name.toLowerCase(); }
                },
                {
                    value: 'room',
                    caption: 'Room',
                    sortTransform: function (name) { return name && name.toLowerCase(); }
                },
                {
                    value: 'Remove',
                    inactive: true
                }
            ]
        };
        var children$ = this.childrenManager.store$.subscribe(function (children) {
            _this.children = children;
            _this.pureStore = children.slice();
            _this.loading = false;
        }, function (e) {
            _this.loading = false;
            console.error(e);
        });
        var rooms$ = this.roomManager.store$.subscribe(function (rooms) {
            _this.rooms = rooms;
        });
        this.sub = children$;
        this.sub.add(rooms$);
    }
    CentreChildrenComponent.prototype.ngOnInit = function () { };
    CentreChildrenComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    CentreChildrenComponent.prototype.modalClosed = function (message) {
        this.showModal = false;
        this.selectedChild = null;
        if (message) {
            this.mdlSnackbarService.showToast(message);
        }
    };
    CentreChildrenComponent.prototype.editChild = function (child) {
        this.selectedChild = child;
        this.showModal = true;
    };
    CentreChildrenComponent.prototype.addChild = function () {
        this.selectedChild = null;
        this.showModal = true;
    };
    CentreChildrenComponent.prototype.deleteChild = function (event, child) {
        event.stopPropagation();
        this.deleteMessage = 'Are you sure you want to delete the room "' + child.name + '" ?';
        this.confirmDelete = child;
    };
    CentreChildrenComponent.prototype.confirmDeleteChild = function (confirm) {
        if (confirm === true) {
            this.childrenManager.removeChild(this.confirmDelete);
        }
        this.confirmDelete = null;
    };
    CentreChildrenComponent.prototype.handleFilter = function (filter) {
        var filterValue = filter.toLowerCase();
        this.children = this.pureStore.filter(function (child) {
            var childName = child.name.toLowerCase();
            return childName.indexOf(filterValue) !== -1;
        });
    };
    CentreChildrenComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-centre-children',
            template: __webpack_require__(937),
            styles: [__webpack_require__(887)],
            encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__shared_children_manager_service__["a" /* ChildrenManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__shared_children_manager_service__["a" /* ChildrenManagerService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_3__shared_rooms_manager_service__["a" /* RoomsManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__shared_rooms_manager_service__["a" /* RoomsManagerService */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_1_angular2_mdl__["MdlSnackbarService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1_angular2_mdl__["MdlSnackbarService"]) === 'function' && _c) || Object, (typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_1_angular2_mdl__["MdlDialogOutletService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1_angular2_mdl__["MdlDialogOutletService"]) === 'function' && _d) || Object, (typeof (_e = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewContainerRef"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewContainerRef"]) === 'function' && _e) || Object])
    ], CentreChildrenComponent);
    return CentreChildrenComponent;
    var _a, _b, _c, _d, _e;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/centre-children.component.js.map

/***/ },
/* 742 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_profile_manager_service__ = __webpack_require__(679);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return CentreDetailsComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var CentreDetailsComponent = (function () {
    function CentreDetailsComponent(profileManager) {
        var _this = this;
        this.profileManager = profileManager;
        var profile = this.profileManager.getProfile();
        if (profile) {
            this.profile = profile;
        }
        this.sub = this.profileManager.store$.subscribe(function (profile) {
            _this.profile = profile;
        });
    }
    CentreDetailsComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    CentreDetailsComponent.prototype.ngOnInit = function () {
    };
    CentreDetailsComponent.prototype.saveDetails = function () {
        var _this = this;
        this.saving = true;
        this.profileManager.updateCrecheProfile(this.profile.additional).toPromise().then(function (res) {
            _this.saving = false;
        }, function (error) {
            _this.saving = false;
            console.error(error);
        });
    };
    CentreDetailsComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-centre-details',
            template: __webpack_require__(938),
            styles: [__webpack_require__(888)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_profile_manager_service__["a" /* ProfileManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__shared_profile_manager_service__["a" /* ProfileManagerService */]) === 'function' && _a) || Object])
    ], CentreDetailsComponent);
    return CentreDetailsComponent;
    var _a;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/centre-details.component.js.map

/***/ },
/* 743 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_rooms_manager_service__ = __webpack_require__(674);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__family_manager_service__ = __webpack_require__(744);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return CentreFamiliesComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var CentreFamiliesComponent = (function () {
    function CentreFamiliesComponent(familyManager, roomManager) {
        var _this = this;
        this.familyManager = familyManager;
        this.roomManager = roomManager;
        this.families = [];
        this.pureStore = [];
        this.showModal = false;
        this.loading = false;
        this.isEdit = false;
        this.selectedTabIndex = 0;
        this.maxID = 0;
        var families$ = this.familyManager.store$.subscribe(function (families) {
            _this.families = families;
            _this.pureStore = families;
        });
        var rooms$ = this.roomManager.store$.subscribe(function (rooms) {
            _this.rooms = rooms;
        });
        this.sub = families$;
        this.sub.add(rooms$);
        this.tableOptions = {
            tooltips: [{
                    value: '',
                    inactive: true,
                    className: 'image-col'
                }, {
                    value: 'children',
                    caption: 'Children',
                    className: 'name-col'
                }, {
                    value: 'guardians',
                    caption: 'Guardians',
                    className: 'name-col'
                }, {
                    value: '',
                    inactive: true,
                    className: 'empty-col'
                }]
        };
    }
    CentreFamiliesComponent.prototype.ngOnInit = function () {
    };
    CentreFamiliesComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    CentreFamiliesComponent.prototype.modalClosed = function () {
        this.showModal = false;
    };
    //Click a row for edit or Add button for add new family
    CentreFamiliesComponent.prototype.controlFamilies = function (isEdit, family, tab) {
        this.isEdit = isEdit;
        if (!this.isEdit) {
            this.maxID = this.families.length;
            this.selectedFamily = null;
            this.selectedTabIndex = 0;
        }
        else {
            this.selectedTabIndex = tab;
            this.selectedFamily = family;
        }
        this.showModal = true;
    };
    //Get Children name list
    CentreFamiliesComponent.prototype.getChildrenNames = function (childrens) {
        var names = "";
        var childLenght = childrens.length;
        childrens.forEach(function (child) {
            names += child.name;
            childLenght--;
            if (childLenght > 0) {
                names += ", ";
            }
        });
        return names;
    };
    //Get Guardian name list
    CentreFamiliesComponent.prototype.getGuardianNames = function (guardians) {
        var names = "";
        var guardLenght = guardians.length;
        guardians.forEach(function (guard) {
            names += guard.name;
            guardLenght--;
            if (guardLenght > 0) {
                names += ", ";
            }
        });
        return names;
    };
    //Filter by children and guardian names
    CentreFamiliesComponent.prototype.handleFilter = function (filter) {
        var filterValue = filter.toLowerCase();
        this.families = this.pureStore.filter(function (family) {
            var familyName = "";
            family.childrens.forEach(function (children) {
                familyName += children.name.toLowerCase() + ", ";
            });
            family.guardians.forEach(function (guardian) {
                familyName += guardian.name.toLowerCase() + ", ";
            });
            return familyName.indexOf(filterValue) !== -1;
        });
    };
    CentreFamiliesComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-centre-families',
            template: __webpack_require__(939),
            styles: [__webpack_require__(889)],
            providers: [__WEBPACK_IMPORTED_MODULE_2__family_manager_service__["a" /* FamilyManagerService */]],
            encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__family_manager_service__["a" /* FamilyManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__family_manager_service__["a" /* FamilyManagerService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__shared_rooms_manager_service__["a" /* RoomsManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__shared_rooms_manager_service__["a" /* RoomsManagerService */]) === 'function' && _b) || Object])
    ], CentreFamiliesComponent);
    return CentreFamiliesComponent;
    var _a, _b;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/centre-families.component.js.map

/***/ },
/* 744 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs__ = __webpack_require__(673);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_http_client_service__ = __webpack_require__(669);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_lite_app_api__ = __webpack_require__(670);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__family_model__ = __webpack_require__(745);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared_models_child_model__ = __webpack_require__(685);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return FamilyManagerService; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var FamilyManagerService = (function () {
    function FamilyManagerService(http) {
        // this.loadFamilies().subscribe(families => {
        //   this.families = families;
        //   this.store.next(this.families);
        // }, error => {
        //   console.error('Error loading Family', error);
        // });
        this.http = http;
        this.families = [];
        this.store = new __WEBPACK_IMPORTED_MODULE_1_rxjs__["BehaviorSubject"]([]);
        /***** Fake Data ******/
        this.families = [{
                id: "1", name: "", childrens: [new __WEBPACK_IMPORTED_MODULE_5__shared_models_child_model__["a" /* Child */]({ name: "Ben Mille", birthdate: "", roomId: "1", startdate: "" })], guardians: [new __WEBPACK_IMPORTED_MODULE_4__family_model__["a" /* Guardian */]({ name: "mother", email: "m@mail.com", phone: "123456", address: "aaa" })]
            }];
        this.store.next(this.families);
        /***** //Fake Data ******/
    }
    Object.defineProperty(FamilyManagerService.prototype, "store$", {
        get: function () {
            return this.store.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    //get Families by id
    FamilyManagerService.prototype.getFamilyById = function (id) {
        return this.families.find(function (family) { return family.id === id; });
    };
    //get all Families
    FamilyManagerService.prototype.getAll = function () {
        return this.families;
    };
    //add new Family
    FamilyManagerService.prototype.addFamily = function (family) {
        // return this.http.post(LiteAppAPI.FAMILY_ENDPOINT, family).map( res => {
        //   let _family = new Family(res.json());
        //   this.families.push(_family);
        //   this.store.next(this.families);
        //   return _family;
        // });
        /******** push fake data ********/
        this.families.push(family);
        this.store.next(this.families);
        /******** //push fake data ********/
    };
    //update Family by family.id
    FamilyManagerService.prototype.updateFamily = function (family) {
        // return this.http.put(LiteAppAPI.FAMILY_ENDPOINT + '/' + family.id, family).map( res => {
        //   let response = new Family(res.json());
        //   this.families = this.families.map(_family => {
        //     return _family.id === family.id ? response : _family;
        //   });
        //   this.store.next(this.families);
        //   return response;
        // });
        /******** push fake data ********/
        this.families = this.families.map(function (_family) {
            return _family.id === family.id ? family : _family;
        });
        this.store.next(this.families);
        /******** //push fake data ********/
    };
    FamilyManagerService.prototype.loadFamilies = function () {
        return this.http.get(__WEBPACK_IMPORTED_MODULE_3__shared_lite_app_api__["a" /* LiteAppAPI */].FAMILY_ENDPOINT).map(function (response) {
            return response.json().map(function (family) { return new __WEBPACK_IMPORTED_MODULE_4__family_model__["b" /* Family */](family); });
        });
    };
    FamilyManagerService = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__shared_http_client_service__["a" /* HttpClientService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__shared_http_client_service__["a" /* HttpClientService */]) === 'function' && _a) || Object])
    ], FamilyManagerService);
    return FamilyManagerService;
    var _a;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/family-manager.service.js.map

/***/ },
/* 745 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return Guardian; });
/* harmony export (binding) */ __webpack_require__.d(exports, "b", function() { return Family; });
//Guardian Model
var Guardian = (function () {
    function Guardian(data) {
        Object.assign(this, data);
    }
    return Guardian;
}());
// Family model
var Family = (function () {
    function Family(data) {
        Object.assign(this, data);
    }
    return Family;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/family.model.js.map

/***/ },
/* 746 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_rooms_manager_service__ = __webpack_require__(674);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return CentreRoomsComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


// Review: Age groups with spaces
var CentreRoomsComponent = (function () {
    function CentreRoomsComponent(roomsManager) {
        var _this = this;
        this.roomsManager = roomsManager;
        this.rooms = [];
        this.pureStore = [];
        this.showModal = false;
        this.loading = true;
        this.tableOptions = {
            tooltips: [
                {
                    value: 'name',
                    caption: 'Room name',
                    className: 'name-col'
                },
                {
                    value: 'ageGroup',
                    caption: 'Age Group',
                    sortTransform: function (ageGroup) {
                        if (ageGroup) {
                            var ages = ageGroup.split('-');
                            var fromIndex = _this.roomsManager.AGES_FROM.indexOf(ages[0]);
                            var toIndex = _this.roomsManager.AGES_TO.indexOf(ages[1]);
                            var delta = fromIndex + toIndex;
                            return delta;
                        }
                        return 0;
                    }
                },
                {
                    value: 'capacity',
                    caption: 'Capacity'
                },
                {
                    value: 'Remove',
                    inactive: true
                }
            ]
        };
    }
    CentreRoomsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.sub = this.roomsManager.loadRooms()
            .map(function (res) { return res.json(); }).subscribe(function (rooms) {
            _this.rooms = rooms;
            _this.pureStore = rooms.slice();
            _this.loading = false;
        }, function (e) {
            _this.loading = false;
            console.log(e);
        });
    };
    CentreRoomsComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    CentreRoomsComponent.prototype.editRoom = function (room) {
        this.selectedRoom = room;
        this.showModal = true;
    };
    CentreRoomsComponent.prototype.deleteRoom = function (event, room) {
        event.stopPropagation();
        this.deleteMessage = 'Are you sure you want to delete the room "' + room.name + '" ?';
        this.confirmDelete = room;
    };
    CentreRoomsComponent.prototype.confirmDeleteRoom = function (confirm) {
        if (confirm === true) {
            this.roomsManager.removeRoom(this.confirmDelete);
        }
        this.confirmDelete = null;
    };
    CentreRoomsComponent.prototype.modalClosed = function () {
        this.showModal = false;
        this.selectedRoom = null;
    };
    CentreRoomsComponent.prototype.handleFilter = function (filter) {
        var filterValue = filter.toLowerCase();
        this.rooms = this.pureStore.filter(function (room) {
            var roomName = room.name.toLowerCase();
            return roomName.indexOf(filterValue) !== -1;
        });
    };
    CentreRoomsComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-centre-rooms',
            template: __webpack_require__(941),
            styles: [__webpack_require__(891)],
            encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_rooms_manager_service__["a" /* RoomsManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__shared_rooms_manager_service__["a" /* RoomsManagerService */]) === 'function' && _a) || Object])
    ], CentreRoomsComponent);
    return CentreRoomsComponent;
    var _a;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/centre-rooms.component.js.map

/***/ },
/* 747 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_profile_manager_service__ = __webpack_require__(679);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return CentreSubventionsComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var CentreSubventionsComponent = (function () {
    function CentreSubventionsComponent(profileManager) {
        var _this = this;
        this.profileManager = profileManager;
        this.saving = false;
        this.editing = false;
        var profile = this.profileManager.getProfile();
        if (profile) {
            this.centre = JSON.parse(JSON.stringify(profile.additional));
        }
        this.sub = this.profileManager.store$.subscribe(function (profile) {
            _this.centre = JSON.parse(JSON.stringify(profile.additional));
        });
    }
    CentreSubventionsComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    CentreSubventionsComponent.prototype.valueSet = function (event) {
        console.log(event);
    };
    CentreSubventionsComponent.prototype.cancel = function () {
        this.editing = false;
        var profile = this.profileManager.getProfile();
        if (profile) {
            this.centre = JSON.parse(JSON.stringify(profile.additional));
        }
    };
    CentreSubventionsComponent.prototype.saveDetails = function () {
        var _this = this;
        this.saving = true;
        this.profileManager.updateCrecheProfile(this.centre).toPromise().then(function (res) {
            _this.saving = false;
            _this.editing = false;
        }, function (error) {
            _this.saving = false;
            console.error(error);
        });
    };
    CentreSubventionsComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-centre-subventions',
            template: __webpack_require__(942),
            styles: [__webpack_require__(892)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_profile_manager_service__["a" /* ProfileManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__shared_profile_manager_service__["a" /* ProfileManagerService */]) === 'function' && _a) || Object])
    ], CentreSubventionsComponent);
    return CentreSubventionsComponent;
    var _a;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/centre-subventions.component.js.map

/***/ },
/* 748 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return SettingsComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var SettingsComponent = (function () {
    function SettingsComponent() {
        this.routes = [{
                path: 'families',
                link: 'FAMILIES',
            }, {
                path: 'rooms',
                link: 'ROOMS'
            }, {
                path: 'children',
                link: 'CHILDREN'
            }, {
                path: 'details',
                link: 'CENTRE DETAILS'
            }, {
                path: 'subventions',
                link: 'SUBVENTIONS'
            }];
    }
    SettingsComponent.prototype.ngOnInit = function () {
    };
    SettingsComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-settings',
            template: __webpack_require__(946)
        }), 
        __metadata('design:paramtypes', [])
    ], SettingsComponent);
    return SettingsComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/settings.component.js.map

/***/ },
/* 749 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return AttendanceStates; });
/**
 * Enum for Attendance States
 */
var AttendanceStates;
(function (AttendanceStates) {
    AttendanceStates[AttendanceStates["IN"] = 0] = "IN";
    AttendanceStates[AttendanceStates["OUT"] = 1] = "OUT";
    AttendanceStates[AttendanceStates["ABSENT"] = 2] = "ABSENT";
    AttendanceStates[AttendanceStates["UNKNOWN"] = 3] = "UNKNOWN";
})(AttendanceStates || (AttendanceStates = {}));
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/general.model.js.map

/***/ },
/* 750 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__subventions_manager_service__ = __webpack_require__(702);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return SubventionsComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var SubventionsComponent = (function () {
    function SubventionsComponent(subventionsManager) {
        var _this = this;
        this.subventionsManager = subventionsManager;
        this.subventions = [];
        this.store = [];
        this.loading = true;
        this.tableOptions = {
            tooltips: [
                {
                    value: 'name',
                    caption: 'Child Name',
                    className: 'child-name',
                    sortTransform: function (name) { return name.toLowerCase(); }
                },
                {
                    value: 'startDate',
                    caption: 'Start Date',
                    className: 'start-date'
                },
                {
                    value: 'status',
                    caption: 'Status',
                    className: 'status',
                    sortTransform: function (status) { return !status; } // Revert results for Status
                },
                {
                    value: 'days',
                    caption: 'Days In Attendance',
                    className: 'attendance',
                    sortTransform: function (days) { return days.length; }
                }
            ]
        };
        this.subventionsManager.store$.subscribe(function (grants) {
            _this.subventions = grants.slice();
            _this.store = grants.slice();
            _this.loading = false;
        }, function (e) {
            _this.loading = false;
            console.error(e);
        });
    }
    SubventionsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subventionsManager.getChildren().subscribe(function (grants) {
            _this.subventions = grants.slice();
        });
    };
    SubventionsComponent.prototype.handleFilter = function (filterValue) {
        var filter = filterValue.toLowerCase();
        this.subventions = this.store.filter(function (grant) {
            var name = grant.name.toLowerCase();
            return name.indexOf(filter) !== -1;
        });
    };
    SubventionsComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-subventions',
            template: __webpack_require__(957),
            styles: [__webpack_require__(906)],
            encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__subventions_manager_service__["a" /* SubventionsManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__subventions_manager_service__["a" /* SubventionsManagerService */]) === 'function' && _a) || Object])
    ], SubventionsComponent);
    return SubventionsComponent;
    var _a;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/subventions.component.js.map

/***/ },
/* 751 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_profile_manager_service__ = __webpack_require__(679);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return VerifyComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var VerifyComponent = (function () {
    function VerifyComponent(route, router, profileManager) {
        this.route = route;
        this.router = router;
        this.profileManager = profileManager;
        this.message = 'Please check your email and follow the link to confirm your email address.';
    }
    VerifyComponent.prototype.ngOnInit = function () {
        var _this = this;
        var verificationCode;
        this.sub = this.route.params.filter(function (params) { return !!params['token']; }).switchMap(function (params) {
            verificationCode = params['token'];
            _this.loading = true;
            _this.message = 'Verifying your account.';
            return _this.profileManager.verifyProfile(verificationCode);
        }).subscribe(function (res) {
            _this.router.navigate(['dashboard']);
        }, function (error) {
            _this.loading = false;
            try {
                var errorBody = error.json();
                _this.message = errorBody.message || 'Failed to verify your account.';
            }
            catch (e) {
                _this.message = 'Invalid or expired code: ' + verificationCode;
            }
        });
    };
    VerifyComponent.prototype.ngOnDestroy = function () {
        this.sub.unsubscribe();
    };
    VerifyComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-verify',
            template: __webpack_require__(958),
            styles: [__webpack_require__(907)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* ActivatedRoute */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* ActivatedRoute */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__angular_router__["d" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_router__["d" /* Router */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_2__shared_profile_manager_service__["a" /* ProfileManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__shared_profile_manager_service__["a" /* ProfileManagerService */]) === 'function' && _c) || Object])
    ], VerifyComponent);
    return VerifyComponent;
    var _a, _b, _c;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/verify.component.js.map

/***/ },
/* 752 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * angular2-cookie - Implementation of Angular 1.x $cookies service to Angular 2
 * @version v1.2.5
 * @link https://github.com/salemdar/angular2-cookie#readme
 * @license MIT
 */
"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
var services_1 = __webpack_require__(753);
__export(__webpack_require__(753));
exports.ANGULAR2_COOKIE_PROVIDERS = [
    { provide: services_1.CookieOptions, useClass: services_1.BaseCookieOptions },
    { provide: services_1.CookieService, useFactory: cookieServiceFactory, deps: [services_1.CookieOptions] }
];
function cookieServiceFactory(options) {
    return new services_1.CookieService(options);
}
exports.cookieServiceFactory = cookieServiceFactory;

//# sourceMappingURL=core.js.map


/***/ },
/* 753 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * angular2-cookie - Implementation of Angular 1.x $cookies service to Angular 2
 * @version v1.2.5
 * @link https://github.com/salemdar/angular2-cookie#readme
 * @license MIT
 */
"use strict";
var base_cookie_options_1 = __webpack_require__(754);
exports.BaseCookieOptions = base_cookie_options_1.BaseCookieOptions;
exports.CookieOptions = base_cookie_options_1.CookieOptions;
var cookies_service_1 = __webpack_require__(856);
exports.CookieService = cookies_service_1.CookieService;

//# sourceMappingURL=services.js.map


/***/ },
/* 754 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * angular2-cookie - Implementation of Angular 1.x $cookies service to Angular 2
 * @version v1.2.5
 * @link https://github.com/salemdar/angular2-cookie#readme
 * @license MIT
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var common_1 = __webpack_require__(100);
var core_1 = __webpack_require__(0);
/** @private */
var CookieOptions = (function () {
    function CookieOptions(_a) {
        var _b = _a === void 0 ? {} : _a, path = _b.path, domain = _b.domain, expires = _b.expires, secure = _b.secure;
        this.path = this.isPresent(path) ? path : null;
        this.domain = this.isPresent(domain) ? domain : null;
        this.expires = this.isPresent(expires) ? expires : null;
        this.secure = this.isPresent(secure) ? secure : false;
    }
    CookieOptions.prototype.merge = function (options) {
        return new CookieOptions({
            path: this.isPresent(options) && this.isPresent(options.path) ? options.path : this.path,
            domain: this.isPresent(options) && this.isPresent(options.domain) ? options.domain :
                this.domain,
            expires: this.isPresent(options) && this.isPresent(options.expires) ? options.expires :
                this.expires,
            secure: this.isPresent(options) && this.isPresent(options.secure) ? options.secure :
                this.secure,
        });
    };
    CookieOptions.prototype.isPresent = function (obj) {
        return obj !== undefined && obj !== null;
    };
    return CookieOptions;
}());
exports.CookieOptions = CookieOptions;
/** @private */
var BaseCookieOptions = (function (_super) {
    __extends(BaseCookieOptions, _super);
    function BaseCookieOptions(baseHref) {
        _super.call(this, { path: baseHref || '/' });
        this.baseHref = baseHref;
    }
    BaseCookieOptions = __decorate([
        core_1.Injectable(),
        __param(0, core_1.Optional()),
        __param(0, core_1.Inject(common_1.APP_BASE_HREF)), 
        __metadata('design:paramtypes', [String])
    ], BaseCookieOptions);
    return BaseCookieOptions;
}(CookieOptions));
exports.BaseCookieOptions = BaseCookieOptions;

//# sourceMappingURL=base-cookie-options.js.map


/***/ },
/* 755 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* unused harmony export MdlBadgeDirective */
/* unused harmony export MdlBadgeOverlapDirective */
/* unused harmony export MdlBadgeNoBackgroundDirective */
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlBadgeModule; });

var MdlBadgeDirective = (function () {
    function MdlBadgeDirective(elementRef, renderer) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.el = elementRef.nativeElement;
    }
    MdlBadgeDirective.prototype.ngOnChanges = function () {
        this.renderer.setElementAttribute(this.el, 'data-badge', this.mdlBadgeContent);
    };
    MdlBadgeDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: '[mdl-badge]',
                    host: {
                        '[class.mdl-badge]': 'true'
                    }
                },] },
    ];
    /** @nocollapse */
    MdlBadgeDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
    ]; };
    MdlBadgeDirective.propDecorators = {
        'mdlBadgeContent': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-badge',] },],
    };
    return MdlBadgeDirective;
}());
var MdlBadgeOverlapDirective = (function () {
    function MdlBadgeOverlapDirective() {
    }
    MdlBadgeOverlapDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: '[mdl-badge-overlap]',
                    host: {
                        '[class.mdl-badge--overlap]': 'true'
                    }
                },] },
    ];
    /** @nocollapse */
    MdlBadgeOverlapDirective.ctorParameters = function () { return []; };
    return MdlBadgeOverlapDirective;
}());
var MdlBadgeNoBackgroundDirective = (function () {
    function MdlBadgeNoBackgroundDirective() {
    }
    MdlBadgeNoBackgroundDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: '[mdl-badge-no-background]',
                    host: {
                        '[class.mdl-badge--no-background]': 'true'
                    }
                },] },
    ];
    /** @nocollapse */
    MdlBadgeNoBackgroundDirective.ctorParameters = function () { return []; };
    return MdlBadgeNoBackgroundDirective;
}());
var MDL_BADGE_DIRECTIVES = [MdlBadgeDirective, MdlBadgeOverlapDirective, MdlBadgeNoBackgroundDirective];
var MdlBadgeModule = (function () {
    function MdlBadgeModule() {
    }
    MdlBadgeModule.forRoot = function () {
        return {
            ngModule: MdlBadgeModule,
            providers: []
        };
    };
    MdlBadgeModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [],
                    exports: MDL_BADGE_DIRECTIVES,
                    declarations: MDL_BADGE_DIRECTIVES,
                },] },
    ];
    /** @nocollapse */
    MdlBadgeModule.ctorParameters = function () { return []; };
    return MdlBadgeModule;
}());
//# sourceMappingURL=mdl-badge.directive.js.map

/***/ },
/* 756 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_mdl_error__ = __webpack_require__(675);
/* unused harmony export MdlCardComponent */
/* unused harmony export MdlCardChildStructure */
/* unused harmony export MdlCardTitleComponent */
/* unused harmony export MdlCardSupportingTextComponent */
/* unused harmony export MdlCardMediaComponent */
/* unused harmony export MdlCardActionsComponent */
/* unused harmony export MdlCardMenuComponent */
/* unused harmony export MdlCardTitleTextDirective */
/* unused harmony export MdlCardBorderDirective */
/* unused harmony export MdlCardExpandDirective */
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlCardModule; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};


var MdlCardComponent = (function () {
    function MdlCardComponent() {
    }
    MdlCardComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-card',
                    host: {
                        '[class.mdl-card]': 'true'
                    },
                    template: '<ng-content></ng-content>',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlCardComponent.ctorParameters = function () { return []; };
    return MdlCardComponent;
}());
var MdlCardChildStructure = (function () {
    function MdlCardChildStructure(mdlCardComponent, childComponentName) {
        this.mdlCardComponent = mdlCardComponent;
        this.childComponentName = childComponentName;
    }
    MdlCardChildStructure.prototype.ngOnInit = function () {
        if (this.mdlCardComponent === null) {
            throw new __WEBPACK_IMPORTED_MODULE_1__common_mdl_error__["b" /* MdlStructureError */](this.childComponentName, 'mdl-card');
        }
    };
    return MdlCardChildStructure;
}());
var MdlCardTitleComponent = (function (_super) {
    __extends(MdlCardTitleComponent, _super);
    function MdlCardTitleComponent(mdlCardComponent) {
        _super.call(this, mdlCardComponent, 'mdl-card-title');
    }
    MdlCardTitleComponent.prototype.ngOnInit = function () { _super.prototype.ngOnInit.call(this); };
    MdlCardTitleComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-card-title',
                    host: {
                        '[class.mdl-card__title]': 'true'
                    },
                    template: '<ng-content></ng-content>',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlCardTitleComponent.ctorParameters = function () { return [
        { type: MdlCardComponent, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Optional"] },] },
    ]; };
    return MdlCardTitleComponent;
}(MdlCardChildStructure));
var MdlCardSupportingTextComponent = (function (_super) {
    __extends(MdlCardSupportingTextComponent, _super);
    function MdlCardSupportingTextComponent(mdlCardComponent) {
        _super.call(this, mdlCardComponent, 'mdl-card-supporting-text');
    }
    MdlCardSupportingTextComponent.prototype.ngOnInit = function () { _super.prototype.ngOnInit.call(this); };
    MdlCardSupportingTextComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-card-supporting-text',
                    host: {
                        '[class.mdl-card__supporting-text]': 'true'
                    },
                    template: '<ng-content></ng-content>',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlCardSupportingTextComponent.ctorParameters = function () { return [
        { type: MdlCardComponent, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Optional"] },] },
    ]; };
    return MdlCardSupportingTextComponent;
}(MdlCardChildStructure));
var MdlCardMediaComponent = (function (_super) {
    __extends(MdlCardMediaComponent, _super);
    function MdlCardMediaComponent(mdlCardComponent) {
        _super.call(this, mdlCardComponent, 'mdl-card-media');
    }
    MdlCardMediaComponent.prototype.ngOnInit = function () { _super.prototype.ngOnInit.call(this); };
    MdlCardMediaComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-card-media',
                    host: {
                        '[class.mdl-card__media]': 'true'
                    },
                    template: '<ng-content></ng-content>',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlCardMediaComponent.ctorParameters = function () { return [
        { type: MdlCardComponent, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Optional"] },] },
    ]; };
    return MdlCardMediaComponent;
}(MdlCardChildStructure));
var MdlCardActionsComponent = (function (_super) {
    __extends(MdlCardActionsComponent, _super);
    function MdlCardActionsComponent(mdlCardComponent) {
        _super.call(this, mdlCardComponent, 'mdl-card-actions');
    }
    MdlCardActionsComponent.prototype.ngOnInit = function () { _super.prototype.ngOnInit.call(this); };
    MdlCardActionsComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-card-actions',
                    host: {
                        '[class.mdl-card__actions]': 'true'
                    },
                    template: '<ng-content></ng-content>',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlCardActionsComponent.ctorParameters = function () { return [
        { type: MdlCardComponent, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Optional"] },] },
    ]; };
    return MdlCardActionsComponent;
}(MdlCardChildStructure));
var MdlCardMenuComponent = (function (_super) {
    __extends(MdlCardMenuComponent, _super);
    function MdlCardMenuComponent(mdlCardComponent) {
        _super.call(this, mdlCardComponent, 'mdl-card-menu');
    }
    MdlCardMenuComponent.prototype.ngOnInit = function () { _super.prototype.ngOnInit.call(this); };
    MdlCardMenuComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-card-menu',
                    host: {
                        '[class.mdl-card__menu]': 'true'
                    },
                    template: '<ng-content></ng-content>',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlCardMenuComponent.ctorParameters = function () { return [
        { type: MdlCardComponent, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Optional"] },] },
    ]; };
    return MdlCardMenuComponent;
}(MdlCardChildStructure));
var MdlCardTitleTextDirective = (function () {
    function MdlCardTitleTextDirective() {
    }
    MdlCardTitleTextDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: '[mdl-card-title-text]',
                    host: {
                        '[class.mdl-card__title-text]': 'true'
                    }
                },] },
    ];
    /** @nocollapse */
    MdlCardTitleTextDirective.ctorParameters = function () { return []; };
    return MdlCardTitleTextDirective;
}());
var MdlCardBorderDirective = (function () {
    function MdlCardBorderDirective() {
    }
    MdlCardBorderDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: '[mdl-card-border]',
                    host: {
                        '[class.mdl-card--border]': 'true'
                    }
                },] },
    ];
    /** @nocollapse */
    MdlCardBorderDirective.ctorParameters = function () { return []; };
    return MdlCardBorderDirective;
}());
var MdlCardExpandDirective = (function () {
    function MdlCardExpandDirective() {
    }
    MdlCardExpandDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: '[mdl-card-expand]',
                    host: {
                        '[class.mdl-card--expand]': 'true'
                    }
                },] },
    ];
    /** @nocollapse */
    MdlCardExpandDirective.ctorParameters = function () { return []; };
    return MdlCardExpandDirective;
}());
var MDL_CARD_DIRECTIVES = [
    MdlCardComponent,
    MdlCardTitleComponent,
    MdlCardMediaComponent,
    MdlCardSupportingTextComponent,
    MdlCardActionsComponent,
    MdlCardMenuComponent,
    MdlCardTitleTextDirective,
    MdlCardBorderDirective,
    MdlCardExpandDirective
];
var MdlCardModule = (function () {
    function MdlCardModule() {
    }
    MdlCardModule.forRoot = function () {
        return {
            ngModule: MdlCardModule,
            providers: []
        };
    };
    MdlCardModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [],
                    exports: MDL_CARD_DIRECTIVES,
                    declarations: MDL_CARD_DIRECTIVES,
                },] },
    ];
    /** @nocollapse */
    MdlCardModule.ctorParameters = function () { return []; };
    return MdlCardModule;
}());
//# sourceMappingURL=mdl-card.component.js.map

/***/ },
/* 757 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__icon_mdl_icon_component__ = __webpack_require__(681);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mdl_chip_component__ = __webpack_require__(704);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mdl_chip_contact_directive__ = __webpack_require__(703);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlChipModule; });
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */







var DIRECTIVES = [__WEBPACK_IMPORTED_MODULE_3__mdl_chip_component__["a" /* MdlChipComponent */], __WEBPACK_IMPORTED_MODULE_4__mdl_chip_contact_directive__["a" /* MdlChipContactDirective */]];
var MdlChipModule = (function () {
    function MdlChipModule() {
    }
    MdlChipModule.forRoot = function () {
        return {
            ngModule: MdlChipModule,
            providers: []
        };
    };
    MdlChipModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [__WEBPACK_IMPORTED_MODULE_2__icon_mdl_icon_component__["a" /* MdlIconModule */], __WEBPACK_IMPORTED_MODULE_1__angular_common__["CommonModule"]],
                    exports: DIRECTIVES,
                    declarations: DIRECTIVES,
                },] },
    ];
    /** @nocollapse */
    MdlChipModule.ctorParameters = function () { return []; };
    return MdlChipModule;
}());
//# sourceMappingURL=index.js.map

/***/ },
/* 758 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return AppendViewContainerRefDirective; });

var AppendViewContainerRefDirective = (function () {
    function AppendViewContainerRefDirective(viewRef, renderer) {
        this.viewRef = viewRef;
        this.renderer = renderer;
    }
    AppendViewContainerRefDirective.prototype.ngAfterViewInit = function () {
        this.renderer.projectNodes(this.viewRef.element.nativeElement, [this.viewContainerRefToAppend.element.nativeElement]);
    };
    AppendViewContainerRefDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: '[append-view-container-ref]'
                },] },
    ];
    /** @nocollapse */
    AppendViewContainerRefDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewContainerRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
    ]; };
    AppendViewContainerRefDirective.propDecorators = {
        'viewContainerRefToAppend': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['append-view-container-ref',] },],
    };
    return AppendViewContainerRefDirective;
}());
//# sourceMappingURL=append-view-container-ref-directive.js.map

/***/ },
/* 759 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mdl_dialog_service__ = __webpack_require__(677);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mdl_dialog_component__ = __webpack_require__(762);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mdl_simple_dialog_component__ = __webpack_require__(709);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common_index__ = __webpack_require__(705);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__mdl_dialog_host_component__ = __webpack_require__(708);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__mdl_alert_component__ = __webpack_require__(761);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__dialog_outlet_index__ = __webpack_require__(692);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__button_mdl_button_component__ = __webpack_require__(680);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__mdl_dialog_configuration__ = __webpack_require__(858);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__mdl_dialog_configuration___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10__mdl_dialog_configuration__);
/* harmony export (binding) */ __webpack_require__.d(exports, "MdlDialogModule", function() { return MdlDialogModule; });
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* harmony namespace reexport (by used) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_10__mdl_dialog_configuration__, "MdlSnackbarService")) __webpack_require__.d(exports, "MdlSnackbarService", function() { return __WEBPACK_IMPORTED_MODULE_10__mdl_dialog_configuration__["MdlSnackbarService"]; });
/* harmony namespace reexport (by used) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_10__mdl_dialog_configuration__, "MdlDialogOutletService")) __webpack_require__.d(exports, "MdlDialogOutletService", function() { return __WEBPACK_IMPORTED_MODULE_10__mdl_dialog_configuration__["MdlDialogOutletService"]; });
/* unused harmony namespace reexport */














var PUBLIC_COMPONENTS = [
    __WEBPACK_IMPORTED_MODULE_3__mdl_dialog_component__["a" /* MdlDialogComponent */],
    __WEBPACK_IMPORTED_MODULE_7__mdl_alert_component__["a" /* MdlAlertComponent */]
];
var PRIVATE_COMPONENTS = [
    __WEBPACK_IMPORTED_MODULE_6__mdl_dialog_host_component__["a" /* MdlDialogHostComponent */],
    __WEBPACK_IMPORTED_MODULE_4__mdl_simple_dialog_component__["a" /* MdlSimpleDialogComponent */]
];
var MdlDialogModule = (function () {
    function MdlDialogModule() {
    }
    MdlDialogModule.forRoot = function () {
        return {
            ngModule: MdlDialogModule,
            providers: [__WEBPACK_IMPORTED_MODULE_2__mdl_dialog_service__["d" /* MdlDialogService */]]
        };
    };
    MdlDialogModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [
                        __WEBPACK_IMPORTED_MODULE_1__angular_common__["CommonModule"],
                        __WEBPACK_IMPORTED_MODULE_5__common_index__["a" /* MdlCommonsModule */],
                        __WEBPACK_IMPORTED_MODULE_9__button_mdl_button_component__["b" /* MdlButtonModule */],
                        __WEBPACK_IMPORTED_MODULE_8__dialog_outlet_index__["a" /* MdlDialogOutletModule */].forRoot()
                    ],
                    exports: PUBLIC_COMPONENTS.slice(),
                    declarations: PUBLIC_COMPONENTS.concat(PRIVATE_COMPONENTS),
                    entryComponents: PUBLIC_COMPONENTS.concat(PRIVATE_COMPONENTS)
                },] },
    ];
    /** @nocollapse */
    MdlDialogModule.ctorParameters = function () { return []; };
    return MdlDialogModule;
}());
//# sourceMappingURL=index.js.map

/***/ },
/* 760 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Subject__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rxjs_Subject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_dialog_service__ = __webpack_require__(677);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return InternalMdlDialogReference; });


/**
 * Internal representation of the dialog ref. the service
 * user should not have access to the created components
 * and internal implementations.
 */
var InternalMdlDialogReference = (function () {
    function InternalMdlDialogReference(config) {
        this.config = config;
        this.onHideSubject = new __WEBPACK_IMPORTED_MODULE_0_rxjs_Subject__["Subject"]();
        this.onVisibleSubject = new __WEBPACK_IMPORTED_MODULE_0_rxjs_Subject__["Subject"]();
        this.isModal = false;
        this.dialogRef = new __WEBPACK_IMPORTED_MODULE_1__mdl_dialog_service__["b" /* MdlDialogReference */](this);
    }
    Object.defineProperty(InternalMdlDialogReference.prototype, "hostDialog", {
        get: function () {
            return this.hostDialogComponentRef.instance;
        },
        enumerable: true,
        configurable: true
    });
    InternalMdlDialogReference.prototype.hide = function (data) {
        this.onHideSubject.next(data);
        this.onHideSubject.complete();
        this.closeCallback();
    };
    InternalMdlDialogReference.prototype.visible = function () {
        this.onVisibleSubject.next();
        this.onVisibleSubject.complete();
    };
    InternalMdlDialogReference.prototype.onHide = function () {
        return this.onHideSubject.asObservable();
    };
    InternalMdlDialogReference.prototype.onVisible = function () {
        return this.onVisibleSubject.asObservable();
    };
    return InternalMdlDialogReference;
}());
//# sourceMappingURL=internal-dialog-reference.js.map

/***/ },
/* 761 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_dialog_service__ = __webpack_require__(677);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlAlertComponent; });


var MdlAlertComponent = (function () {
    function MdlAlertComponent(mdlDialogService) {
        this.mdlDialogService = mdlDialogService;
        this.confirmed = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    MdlAlertComponent.prototype.show = function () {
        var _this = this;
        this.mdlDialogService.alert(this.message, this.okText, this.title).subscribe(function () {
            _this.confirmed.emit();
        });
    };
    MdlAlertComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-alert',
                    host: {
                        '[style.display]': '"none"'
                    },
                    template: "\n  ",
                    exportAs: 'mdlAlert'
                },] },
    ];
    /** @nocollapse */
    MdlAlertComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_1__mdl_dialog_service__["d" /* MdlDialogService */], },
    ]; };
    MdlAlertComponent.propDecorators = {
        'title': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'message': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'okText': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'confirmed': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    };
    return MdlAlertComponent;
}());
//# sourceMappingURL=mdl-alert.component.js.map

/***/ },
/* 762 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Subject__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Subject__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mdl_dialog_service__ = __webpack_require__(677);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_boolean_property__ = __webpack_require__(667);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlDialogComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var MdlDialogComponent = (function () {
    function MdlDialogComponent(dialogService) {
        this.dialogService = dialogService;
        this.showEmitter = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.hideEmitter = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.isShown = false;
        this.dialogRef = null;
    }
    MdlDialogComponent.prototype.show = function () {
        var _this = this;
        if (this.isShown) {
            throw new Error('Only one instance of an embedded mdl-dialog can exist!');
        }
        this.isShown = true;
        var mergedConfig = this.config || {};
        // mdl-modal overwrites config.isModal if present
        mergedConfig.isModal = typeof this.modal !== 'undefined' ? this.modal : mergedConfig.isModal;
        // default is true
        if (typeof mergedConfig.isModal === 'undefined') {
            mergedConfig.isModal = true;
        }
        var result = new __WEBPACK_IMPORTED_MODULE_1_rxjs_Subject__["Subject"]();
        var p = this.dialogService.showDialogTemplate(this.template, mergedConfig);
        p.subscribe(function (dialogRef) {
            _this.dialogRef = dialogRef;
            _this.dialogRef.onVisible().subscribe(function () {
                _this.showEmitter.emit(dialogRef);
                result.next(dialogRef);
                result.complete();
            });
            _this.dialogRef.onHide().subscribe(function () {
                _this.hideEmitter.emit(null);
                _this.dialogRef = null;
                _this.isShown = false;
            });
        });
        return result.asObservable();
    };
    MdlDialogComponent.prototype.close = function () {
        if (this.dialogRef) {
            this.dialogRef.hide();
        }
    };
    MdlDialogComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-dialog',
                    template: "\n    <div *dialogTemplate>\n      <ng-content></ng-content>\n    </div>\n  ",
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlDialogComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_2__mdl_dialog_service__["d" /* MdlDialogService */], },
    ]; };
    MdlDialogComponent.propDecorators = {
        'template': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"], args: [__WEBPACK_IMPORTED_MODULE_0__angular_core__["TemplateRef"],] },],
        'modal': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-modal',] },],
        'config': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-dialog-config',] },],
        'showEmitter': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"], args: ['show',] },],
        'hideEmitter': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"], args: ['hide',] },],
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlDialogComponent.prototype, "modal", void 0);
    return MdlDialogComponent;
}());
//# sourceMappingURL=mdl-dialog.component.js.map

/***/ },
/* 763 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(371);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__icon_mdl_icon_component__ = __webpack_require__(681);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__checkbox_mdl_checkbox_component__ = __webpack_require__(686);
/* unused harmony export MdlIconToggleComponent */
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlIconToggleModule; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};





var MdlIconToggleComponent = (function (_super) {
    __extends(MdlIconToggleComponent, _super);
    function MdlIconToggleComponent(elementRef, renderer) {
        _super.call(this, elementRef, renderer);
    }
    MdlIconToggleComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-icon-toggle',
                    providers: [{
                            provide: __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* NG_VALUE_ACCESSOR */],
                            useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["forwardRef"])(function () { return MdlIconToggleComponent; }),
                            multi: true }],
                    host: {
                        '(click)': 'onClick()',
                        '[class.mdl-icon-toggle]': 'true',
                        '[class.is-upgraded]': 'true',
                        '[class.is-checked]': 'value',
                        '[class.is-disabled]': 'disabled'
                    },
                    outputs: ['change'],
                    template: "\n  <input type=\"checkbox\" class=\"mdl-icon-toggle__input\" \n    (focus)=\"onFocus()\" \n    (blur)=\"onBlur()\"\n    [disabled]=\"disabled\"\n    [(ngModel)]=\"value\">\n  <mdl-icon class=\"mdl-icon-toggle__label\"><ng-content></ng-content></mdl-icon>\n  ",
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlIconToggleComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
    ]; };
    return MdlIconToggleComponent;
}(__WEBPACK_IMPORTED_MODULE_4__checkbox_mdl_checkbox_component__["a" /* MdlCheckboxComponent */]));
var MDL_ICON_TOGGLE_DIRECTIVES = [MdlIconToggleComponent];
var MdlIconToggleModule = (function () {
    function MdlIconToggleModule() {
    }
    MdlIconToggleModule.forRoot = function () {
        return {
            ngModule: MdlIconToggleModule,
            providers: []
        };
    };
    MdlIconToggleModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [__WEBPACK_IMPORTED_MODULE_3__icon_mdl_icon_component__["a" /* MdlIconModule */], __WEBPACK_IMPORTED_MODULE_1__angular_common__["CommonModule"], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["b" /* FormsModule */]],
                    exports: MDL_ICON_TOGGLE_DIRECTIVES,
                    declarations: MDL_ICON_TOGGLE_DIRECTIVES,
                },] },
    ];
    /** @nocollapse */
    MdlIconToggleModule.ctorParameters = function () { return []; };
    return MdlIconToggleModule;
}());
//# sourceMappingURL=mdl-icon-toggle.component.js.map

/***/ },
/* 764 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_layout_component__ = __webpack_require__(694);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mdl_layout_header_component__ = __webpack_require__(712);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mdl_layout_drawer_component__ = __webpack_require__(711);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mdl_layout_content_component__ = __webpack_require__(710);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mdl_layout_header_transparent_directive__ = __webpack_require__(766);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__mdl_layout_header_row_component__ = __webpack_require__(765);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__mdl_layout_title_component__ = __webpack_require__(768);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__mdl_layout_spacer_component__ = __webpack_require__(767);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__mdl_layout_tab_panel_component__ = __webpack_require__(713);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__icon_mdl_icon_component__ = __webpack_require__(681);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__common_mdl_ripple_directive__ = __webpack_require__(687);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__common_index__ = __webpack_require__(705);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__angular_common__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__tabs_index__ = __webpack_require__(695);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlLayoutModule; });
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */















var MDL_LAYOUT_DIRECTIVES = [
    __WEBPACK_IMPORTED_MODULE_1__mdl_layout_component__["a" /* MdlLayoutComponent */],
    __WEBPACK_IMPORTED_MODULE_2__mdl_layout_header_component__["a" /* MdlLayoutHeaderComponent */],
    __WEBPACK_IMPORTED_MODULE_3__mdl_layout_drawer_component__["a" /* MdlLayoutDrawerComponent */],
    __WEBPACK_IMPORTED_MODULE_4__mdl_layout_content_component__["a" /* MdlLayoutContentComponent */],
    __WEBPACK_IMPORTED_MODULE_5__mdl_layout_header_transparent_directive__["a" /* MdlLayoutHeaderTransparentDirective */],
    __WEBPACK_IMPORTED_MODULE_6__mdl_layout_header_row_component__["a" /* MdlLayoutHeaderRowComponent */],
    __WEBPACK_IMPORTED_MODULE_7__mdl_layout_title_component__["a" /* MdlLayoutTitleComponent */],
    __WEBPACK_IMPORTED_MODULE_8__mdl_layout_spacer_component__["a" /* MdlLayoutSpacerComponent */],
    __WEBPACK_IMPORTED_MODULE_9__mdl_layout_tab_panel_component__["a" /* MdlLayoutTabPanelComponent */]
];









var MdlLayoutModule = (function () {
    function MdlLayoutModule() {
    }
    MdlLayoutModule.forRoot = function () {
        return {
            ngModule: MdlLayoutModule,
            providers: [
                __WEBPACK_IMPORTED_MODULE_1__mdl_layout_component__["b" /* MdlScreenSizeService */]
            ]
        };
    };
    MdlLayoutModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [__WEBPACK_IMPORTED_MODULE_10__icon_mdl_icon_component__["a" /* MdlIconModule */], __WEBPACK_IMPORTED_MODULE_11__common_mdl_ripple_directive__["a" /* MdlRippleModule */], __WEBPACK_IMPORTED_MODULE_12__common_index__["a" /* MdlCommonsModule */], __WEBPACK_IMPORTED_MODULE_14__tabs_index__["b" /* MdlTabsModule */], __WEBPACK_IMPORTED_MODULE_13__angular_common__["CommonModule"]],
                    exports: MDL_LAYOUT_DIRECTIVES,
                    declarations: MDL_LAYOUT_DIRECTIVES,
                },] },
    ];
    /** @nocollapse */
    MdlLayoutModule.ctorParameters = function () { return []; };
    return MdlLayoutModule;
}());
//# sourceMappingURL=index.js.map

/***/ },
/* 765 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlLayoutHeaderRowComponent; });

var MdlLayoutHeaderRowComponent = (function () {
    function MdlLayoutHeaderRowComponent() {
    }
    MdlLayoutHeaderRowComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-layout-header-row',
                    host: {
                        '[class.mdl-layout__header-row]': 'true'
                    },
                    template: '<ng-content></ng-content>',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlLayoutHeaderRowComponent.ctorParameters = function () { return []; };
    return MdlLayoutHeaderRowComponent;
}());
//# sourceMappingURL=mdl-layout-header-row.component.js.map

/***/ },
/* 766 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlLayoutHeaderTransparentDirective; });

var MdlLayoutHeaderTransparentDirective = (function () {
    function MdlLayoutHeaderTransparentDirective() {
    }
    MdlLayoutHeaderTransparentDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: 'mdl-layout-header[mdl-layout-header-transparent]',
                    host: {
                        '[class.mdl-layout__header--transparent]': 'true'
                    }
                },] },
    ];
    /** @nocollapse */
    MdlLayoutHeaderTransparentDirective.ctorParameters = function () { return []; };
    return MdlLayoutHeaderTransparentDirective;
}());
//# sourceMappingURL=mdl-layout-header-transparent.directive.js.map

/***/ },
/* 767 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlLayoutSpacerComponent; });

var MdlLayoutSpacerComponent = (function () {
    function MdlLayoutSpacerComponent() {
    }
    MdlLayoutSpacerComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-layout-spacer',
                    host: {
                        '[class.mdl-layout-spacer]': 'true'
                    },
                    template: '',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlLayoutSpacerComponent.ctorParameters = function () { return []; };
    return MdlLayoutSpacerComponent;
}());
//# sourceMappingURL=mdl-layout-spacer.component.js.map

/***/ },
/* 768 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlLayoutTitleComponent; });

var MdlLayoutTitleComponent = (function () {
    function MdlLayoutTitleComponent() {
    }
    MdlLayoutTitleComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-layout-title',
                    host: {
                        '[class.mdl-layout-title]': 'true'
                    },
                    template: '<ng-content></ng-content>',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlLayoutTitleComponent.ctorParameters = function () { return []; };
    return MdlLayoutTitleComponent;
}());
//# sourceMappingURL=mdl-layout-title.component.js.map

/***/ },
/* 769 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_mdl_error__ = __webpack_require__(675);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_number_property__ = __webpack_require__(676);
/* unused harmony export MdlUnsupportedCountOfListItemLinesError */
/* unused harmony export MdlListComponent */
/* unused harmony export MdlListItemComponent */
/* unused harmony export MdlListItemPrimaryContentComponent */
/* unused harmony export MdlListItemSecondaryContentComponent */
/* unused harmony export MdlListItemSecondaryActionComponent */
/* unused harmony export MdlListItemSubTitleComponent */
/* unused harmony export MdlListItemSecondaryInfoComponent */
/* unused harmony export MdlListItemTextBodyComponent */
/* unused harmony export MdlListItemIconDirective */
/* unused harmony export MdlListItemAvatarDirective */
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlListModule; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var MdlUnsupportedCountOfListItemLinesError = (function (_super) {
    __extends(MdlUnsupportedCountOfListItemLinesError, _super);
    function MdlUnsupportedCountOfListItemLinesError(lines) {
        _super.call(this, "\"" + lines + "\" is not supported - max 3 lines please.");
    }
    return MdlUnsupportedCountOfListItemLinesError;
}(__WEBPACK_IMPORTED_MODULE_1__common_mdl_error__["a" /* MdlError */]));
var MdlListComponent = (function () {
    function MdlListComponent() {
    }
    MdlListComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-list',
                    host: {
                        '[class.mdl-list]': 'true'
                    },
                    template: '<ng-content></ng-content>',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlListComponent.ctorParameters = function () { return []; };
    return MdlListComponent;
}());
var MdlListItemComponent = (function () {
    function MdlListItemComponent(mdlListComponent) {
        this.mdlListComponent = mdlListComponent;
        this.lines = 1;
    }
    MdlListItemComponent.prototype.ngOnInit = function () {
        if (this.mdlListComponent === null) {
            throw new __WEBPACK_IMPORTED_MODULE_1__common_mdl_error__["b" /* MdlStructureError */]('mdl-list-item', 'mdl-list');
        }
    };
    MdlListItemComponent.prototype.ngOnChanges = function () {
        if (this.lines && this.lines > 3) {
            throw new MdlUnsupportedCountOfListItemLinesError(this.lines);
        }
    };
    /**
     * TODO check these conditions
     * .mdl-list__item-secondary-content	Defines the secondary content sub-division
     * requires .mdl-list__item-two-line or .mdl-list__item-three-line
     .mdl-list__item-secondary-info	Defines the information sub-division
     requires .mdl-list__item-two-line or .mdl-list__item-three-line
     .mdl-list__item-secondary-action	Defines the Action sub-division
     requires .mdl-list__item-two-line or .mdl-list__item-three-line
     .mdl-list__item-text-body	Defines the Text Body sub-division
     requires .mdl-list__item-three-line
     */
    MdlListItemComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-list-item',
                    host: {
                        '[class.mdl-list__item]': 'true',
                        '[class.mdl-list__item--two-line]': 'lines==2',
                        '[class.mdl-list__item--three-line]': 'lines==3'
                    },
                    template: '<ng-content></ng-content>',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlListItemComponent.ctorParameters = function () { return [
        { type: MdlListComponent, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Optional"] },] },
    ]; };
    MdlListItemComponent.propDecorators = {
        'lines': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common_number_property__["a" /* NumberProperty */])()
    ], MdlListItemComponent.prototype, "lines", void 0);
    return MdlListItemComponent;
}());
var MdlListItemPrimaryContentComponent = (function () {
    function MdlListItemPrimaryContentComponent(mdlListItemComponent) {
        this.mdlListItemComponent = mdlListItemComponent;
    }
    MdlListItemPrimaryContentComponent.prototype.ngOnInit = function () {
        if (this.mdlListItemComponent === null) {
            throw new __WEBPACK_IMPORTED_MODULE_1__common_mdl_error__["b" /* MdlStructureError */]('mdl-list-item-primary-content', 'mdl-list-item');
        }
    };
    MdlListItemPrimaryContentComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-list-item-primary-content',
                    host: {
                        '[class.mdl-list__item-primary-content]': 'true'
                    },
                    template: '<ng-content></ng-content>',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlListItemPrimaryContentComponent.ctorParameters = function () { return [
        { type: MdlListItemComponent, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Optional"] },] },
    ]; };
    return MdlListItemPrimaryContentComponent;
}());
var MdlListItemSecondaryContentComponent = (function () {
    function MdlListItemSecondaryContentComponent(mdlListItemComponent) {
        this.mdlListItemComponent = mdlListItemComponent;
    }
    MdlListItemSecondaryContentComponent.prototype.ngOnInit = function () {
        if (this.mdlListItemComponent === null) {
            throw new __WEBPACK_IMPORTED_MODULE_1__common_mdl_error__["b" /* MdlStructureError */]('mdl-list-item-secondary-content', 'mdl-list-item');
        }
    };
    MdlListItemSecondaryContentComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-list-item-secondary-content',
                    host: {
                        '[class.mdl-list__item-secondary-content]': 'true'
                    },
                    template: '<ng-content></ng-content>',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlListItemSecondaryContentComponent.ctorParameters = function () { return [
        { type: MdlListItemComponent, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Optional"] },] },
    ]; };
    return MdlListItemSecondaryContentComponent;
}());
var MdlListItemSecondaryActionComponent = (function () {
    function MdlListItemSecondaryActionComponent(mdlListItemComponent) {
        this.mdlListItemComponent = mdlListItemComponent;
    }
    MdlListItemSecondaryActionComponent.prototype.ngOnInit = function () {
        if (this.mdlListItemComponent === null) {
            throw new __WEBPACK_IMPORTED_MODULE_1__common_mdl_error__["b" /* MdlStructureError */]('mdl-list-item-secondary-action', 'mdl-list-item');
        }
    };
    MdlListItemSecondaryActionComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-list-item-secondary-action',
                    host: {
                        '[class.mdl-list__item-secondary-action]': 'true'
                    },
                    template: '<ng-content></ng-content>',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlListItemSecondaryActionComponent.ctorParameters = function () { return [
        { type: MdlListItemComponent, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Optional"] },] },
    ]; };
    return MdlListItemSecondaryActionComponent;
}());
var MdlListItemSubTitleComponent = (function () {
    function MdlListItemSubTitleComponent(mdlListItemComponent) {
        this.mdlListItemComponent = mdlListItemComponent;
    }
    MdlListItemSubTitleComponent.prototype.ngOnInit = function () {
        if (this.mdlListItemComponent === null) {
            throw new __WEBPACK_IMPORTED_MODULE_1__common_mdl_error__["b" /* MdlStructureError */]('mdl-list-item-sub-title', 'mdl-list-item-primary-content');
        }
    };
    MdlListItemSubTitleComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-list-item-sub-title',
                    host: {
                        '[class.mdl-list__item-sub-title]': 'true'
                    },
                    template: '<ng-content></ng-content>',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlListItemSubTitleComponent.ctorParameters = function () { return [
        { type: MdlListItemPrimaryContentComponent, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Optional"] },] },
    ]; };
    return MdlListItemSubTitleComponent;
}());
var MdlListItemSecondaryInfoComponent = (function () {
    function MdlListItemSecondaryInfoComponent(mdlListItemComponent) {
        this.mdlListItemComponent = mdlListItemComponent;
    }
    MdlListItemSecondaryInfoComponent.prototype.ngOnInit = function () {
        if (this.mdlListItemComponent === null) {
            throw new __WEBPACK_IMPORTED_MODULE_1__common_mdl_error__["b" /* MdlStructureError */]('mdl-list-item-secondary-info', 'mdl-list-item-secondary-content');
        }
    };
    MdlListItemSecondaryInfoComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-list-item-secondary-info',
                    host: {
                        '[class.mdl-list__item-secondary-info]': 'true'
                    },
                    template: '<ng-content></ng-content>',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlListItemSecondaryInfoComponent.ctorParameters = function () { return [
        { type: MdlListItemSecondaryContentComponent, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Optional"] },] },
    ]; };
    return MdlListItemSecondaryInfoComponent;
}());
var MdlListItemTextBodyComponent = (function () {
    function MdlListItemTextBodyComponent(mdlListItemComponent) {
        this.mdlListItemComponent = mdlListItemComponent;
    }
    MdlListItemTextBodyComponent.prototype.ngOnInit = function () {
        if (this.mdlListItemComponent === null) {
            throw new __WEBPACK_IMPORTED_MODULE_1__common_mdl_error__["b" /* MdlStructureError */]('mdl-list-item-text-body', 'mdl-list-item');
        }
    };
    MdlListItemTextBodyComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-list-item-text-body',
                    host: {
                        '[class.mdl-list__item-text-body]': 'true'
                    },
                    template: '<ng-content></ng-content>',
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlListItemTextBodyComponent.ctorParameters = function () { return [
        { type: MdlListItemComponent, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Optional"] },] },
    ]; };
    return MdlListItemTextBodyComponent;
}());
var MdlListItemIconDirective = (function () {
    function MdlListItemIconDirective() {
    }
    MdlListItemIconDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: 'mdl-icon[mdl-list-item-icon]',
                    host: {
                        '[class.mdl-list__item-icon]': 'true'
                    }
                },] },
    ];
    /** @nocollapse */
    MdlListItemIconDirective.ctorParameters = function () { return []; };
    return MdlListItemIconDirective;
}());
var MdlListItemAvatarDirective = (function () {
    function MdlListItemAvatarDirective() {
    }
    MdlListItemAvatarDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: 'mdl-icon[mdl-list-item-avatar]',
                    host: {
                        '[class.mdl-list__item-avatar]': 'true'
                    }
                },] },
    ];
    /** @nocollapse */
    MdlListItemAvatarDirective.ctorParameters = function () { return []; };
    return MdlListItemAvatarDirective;
}());
var MDL_LIST_DIRECTIVES = [
    MdlListComponent,
    MdlListItemComponent,
    MdlListItemPrimaryContentComponent,
    MdlListItemIconDirective,
    MdlListItemAvatarDirective,
    MdlListItemSecondaryContentComponent,
    MdlListItemSecondaryActionComponent,
    MdlListItemSubTitleComponent,
    MdlListItemSecondaryInfoComponent,
    MdlListItemTextBodyComponent
];
var MdlListModule = (function () {
    function MdlListModule() {
    }
    MdlListModule.forRoot = function () {
        return {
            ngModule: MdlListModule,
            providers: []
        };
    };
    MdlListModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [],
                    exports: MDL_LIST_DIRECTIVES,
                    declarations: MDL_LIST_DIRECTIVES,
                },] },
    ];
    /** @nocollapse */
    MdlListModule.ctorParameters = function () { return []; };
    return MdlListModule;
}());
//# sourceMappingURL=mdl-list.component.js.map

/***/ },
/* 770 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_menu_component__ = __webpack_require__(715);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mdl_menu_item_component__ = __webpack_require__(714);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mdl_menu_item_directive__ = __webpack_require__(771);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_common__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mdl_toggle_menu_directive__ = __webpack_require__(859);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlMenuModule; });
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */






var MDL_MENU_DIRECTIVES = [
    __WEBPACK_IMPORTED_MODULE_1__mdl_menu_component__["a" /* MdlMenuComponent */],
    __WEBPACK_IMPORTED_MODULE_2__mdl_menu_item_component__["a" /* MdlMenuItemComponent */],
    __WEBPACK_IMPORTED_MODULE_3__mdl_menu_item_directive__["a" /* MdlMenuItemFullBleedDeviderComponent */],
    __WEBPACK_IMPORTED_MODULE_5__mdl_toggle_menu_directive__["a" /* MdlToggleMenuDirective */]
];



var MdlMenuModule = (function () {
    function MdlMenuModule() {
    }
    MdlMenuModule.forRoot = function () {
        return {
            ngModule: MdlMenuModule,
            providers: [__WEBPACK_IMPORTED_MODULE_1__mdl_menu_component__["b" /* MdlMenuRegisty */]]
        };
    };
    MdlMenuModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [__WEBPACK_IMPORTED_MODULE_4__angular_common__["CommonModule"]],
                    exports: MDL_MENU_DIRECTIVES,
                    declarations: MDL_MENU_DIRECTIVES,
                },] },
    ];
    /** @nocollapse */
    MdlMenuModule.ctorParameters = function () { return []; };
    return MdlMenuModule;
}());
//# sourceMappingURL=index.js.map

/***/ },
/* 771 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlMenuItemFullBleedDeviderComponent; });

var MdlMenuItemFullBleedDeviderComponent = (function () {
    function MdlMenuItemFullBleedDeviderComponent() {
    }
    MdlMenuItemFullBleedDeviderComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: '[mdl-menu-item-full-bleed-divider]',
                    host: {
                        '[class.mdl-menu__item--full-bleed-divider]': 'true'
                    }
                },] },
    ];
    /** @nocollapse */
    MdlMenuItemFullBleedDeviderComponent.ctorParameters = function () { return []; };
    return MdlMenuItemFullBleedDeviderComponent;
}());
//# sourceMappingURL=mdl-menu-item.directive.js.map

/***/ },
/* 772 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_boolean_property__ = __webpack_require__(667);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(100);
/* unused harmony export MdlProgressComponent */
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlProgressModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var MdlProgressComponent = (function () {
    function MdlProgressComponent() {
        this.progress = 0;
        this.buffer = 100;
        this.aux = 0;
    }
    MdlProgressComponent.prototype.ngOnChanges = function (changes) {
        if (changes['buffer']) {
            this.setBuffer(changes['buffer'].currentValue);
        }
    };
    MdlProgressComponent.prototype.setBuffer = function (b) {
        this.aux = 100 - b;
    };
    MdlProgressComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-progress',
                    host: {
                        '[class.mdl-progress]': 'true',
                        '[class.mdl-progress__indeterminate]': 'indeterminate===true'
                    },
                    template: "\n    <div class=\"progressbar bar bar1\" [style.width]=\"progress + '%'\"></div>\n    <div class=\"bufferbar bar bar2\" [style.width]=\"buffer + '%'\"></div>\n    <div class=\"auxbar bar bar3\" [ngStyle]=\"{'width': aux+'%'}\"></div>\n  ",
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None,
                    changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ChangeDetectionStrategy"].OnPush,
                },] },
    ];
    /** @nocollapse */
    MdlProgressComponent.ctorParameters = function () { return []; };
    MdlProgressComponent.propDecorators = {
        'progress': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'buffer': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'aux': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'indeterminate': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlProgressComponent.prototype, "indeterminate", void 0);
    return MdlProgressComponent;
}());
var MDL_PROGRESS_DIRECTIVES = [MdlProgressComponent];
var MdlProgressModule = (function () {
    function MdlProgressModule() {
    }
    MdlProgressModule.forRoot = function () {
        return {
            ngModule: MdlProgressModule,
            providers: []
        };
    };
    MdlProgressModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [__WEBPACK_IMPORTED_MODULE_2__angular_common__["CommonModule"]],
                    exports: MDL_PROGRESS_DIRECTIVES,
                    declarations: MDL_PROGRESS_DIRECTIVES,
                },] },
    ];
    /** @nocollapse */
    MdlProgressModule.ctorParameters = function () { return []; };
    return MdlProgressModule;
}());
//# sourceMappingURL=mdl-progress.component.js.map

/***/ },
/* 773 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(371);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_boolean_property__ = __webpack_require__(667);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_number_property__ = __webpack_require__(676);
/* unused harmony export MdlRadioGroupRegisty */
/* unused harmony export MdlRadioComponent */
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlRadioModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var noop = function () { };
var IS_FOCUSED = 'is-focused';
// Registry for mdl-readio compnents. Is responsible to keep the
// right state of the radio buttons of a radio group. It would be
// easier if i had a mdl-radio-group component. but this would be
// a big braking change.
var MdlRadioGroupRegisty = (function () {
    function MdlRadioGroupRegisty() {
        this.defaultFormGroup = 'defaultFromGroup';
        this.radioComponents = [];
    }
    MdlRadioGroupRegisty.prototype.add = function (radioComponent, formGroupName) {
        this.radioComponents.push({
            radio: radioComponent,
            group: formGroupName || this.defaultFormGroup
        });
    };
    MdlRadioGroupRegisty.prototype.remove = function (radioComponent) {
        this.radioComponents = this.radioComponents.filter(function (radioComponentInArray) {
            return (radioComponentInArray.radio !== radioComponent);
        });
    };
    MdlRadioGroupRegisty.prototype.select = function (radioComponent, formGroupName) {
        // unselect every radioComponent that is not the provided radiocomponent
        // and has the same name and is in teh same group.
        var groupToTest = formGroupName || this.defaultFormGroup;
        this.radioComponents.forEach(function (component) {
            if (component.radio.name === radioComponent.name && component.group === groupToTest) {
                if (component.radio !== radioComponent) {
                    component.radio.deselect(radioComponent.value);
                }
            }
        });
    };
    MdlRadioGroupRegisty.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"] },
    ];
    /** @nocollapse */
    MdlRadioGroupRegisty.ctorParameters = function () { return []; };
    return MdlRadioGroupRegisty;
}());
/*
 <mdl-radio name="group1" value="1" [(ngModel)]="radioOption">Value 1</mdl-radio>
 */
var MdlRadioComponent = (function () {
    function MdlRadioComponent(elementRef, renderer, ragioGroupRegisty, formGroupName) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.ragioGroupRegisty = ragioGroupRegisty;
        this.formGroupName = formGroupName;
        this.disabled = false;
        this.tabindex = 1;
        this.change = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        // the internal state - used to set the underlaying radio button state.
        this.checked = false;
        this.onTouchedCallback = noop;
        this.onChangeCallback = noop;
        this.el = elementRef.nativeElement;
    }
    MdlRadioComponent.prototype.ngOnInit = function () {
        // we need a name and it must be the same as in the formcontrol.
        // a radio group without name is useless.
        this.checkName();
        // register the radio button - this is the only chance to unselect the
        // radio button that is no longer active - scope the radio button with it's group
        // if there is one.
        this.ragioGroupRegisty.add(this, this.formGroupName);
    };
    MdlRadioComponent.prototype.ngOnDestroy = function () {
        this.ragioGroupRegisty.remove(this);
    };
    MdlRadioComponent.prototype.writeValue = function (optionValue) {
        this.optionValue = optionValue;
        this.updateCheckState();
    };
    MdlRadioComponent.prototype.deselect = function (value) {
        // called from the registry. the value is the value of the selected radio button
        // e.g. the radio button get unselected if it isnÄt the selected one.
        this.writeValue(value);
    };
    MdlRadioComponent.prototype.registerOnChange = function (fn) {
        var _this = this;
        // wrap the callback, so that we can call select on the registry
        this.onChangeCallback = function () {
            fn(_this.value);
            _this.ragioGroupRegisty.select(_this, _this.formGroupName);
        };
    };
    MdlRadioComponent.prototype.registerOnTouched = function (fn) {
        this.onTouchedCallback = fn;
    };
    MdlRadioComponent.prototype.setDisabledState = function (isDisabled) {
        this.disabled = isDisabled;
    };
    MdlRadioComponent.prototype.onFocus = function () {
        this.renderer.setElementClass(this.el, IS_FOCUSED, true);
    };
    MdlRadioComponent.prototype.onBlur = function () {
        this.renderer.setElementClass(this.el, IS_FOCUSED, false);
    };
    MdlRadioComponent.prototype.onClick = function () {
        if (this.disabled) {
            return;
        }
        this.optionValue = this.value;
        this.updateCheckState();
        this.onChangeCallback();
        this.change.emit(this.optionValue);
    };
    MdlRadioComponent.prototype.updateCheckState = function () {
        this.checked = this.optionValue === this.value;
    };
    MdlRadioComponent.prototype.checkName = function () {
        if (this.name && this.formControlName && this.name !== this.formControlName) {
            this.throwNameError();
        }
        if (!this.name && this.formControlName) {
            this.name = this.formControlName;
        }
    };
    MdlRadioComponent.prototype.throwNameError = function () {
        throw new Error("\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <mdl-radio formControlName=\"food\" name=\"food\"></mdl-radio>\n    ");
    };
    MdlRadioComponent.prototype.spaceKeyPress = function (event) {
        this.checked = false; //in case of space key is pressed radio button value must remain same
    };
    MdlRadioComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-radio',
                    providers: [{
                            provide: __WEBPACK_IMPORTED_MODULE_1__angular_forms__["a" /* NG_VALUE_ACCESSOR */],
                            useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["forwardRef"])(function () { return MdlRadioComponent; }),
                            multi: true
                        }],
                    host: {
                        '(click)': 'onClick()',
                        '[class.mdl-radio]': 'true',
                        '[class.is-upgraded]': 'true',
                        '[class.is-checked]': 'checked',
                        '[class.is-disabled]': 'disabled'
                    },
                    template: "\n  <input type=\"checkbox\" class=\"mdl-radio__button\" \n    [attr.name]=\"name\"\n    (focus)=\"onFocus()\" \n    (blur)=\"onBlur()\"\n    (keyup.space)=\"spaceKeyPress($event)\"\n    [disabled]=\"disabled\"\n    [tabindex]=\"tabindex\"\n    [(ngModel)]=\"checked\">\n  <span class=\"mdl-radio__label\"><ng-content></ng-content></span>\n  <span class=\"mdl-radio__outer-circle\"></span>\n  <span class=\"mdl-radio__inner-circle\"></span>\n  ",
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlRadioComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
        { type: MdlRadioGroupRegisty, },
        { type: __WEBPACK_IMPORTED_MODULE_1__angular_forms__["c" /* FormGroupName */], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Optional"] },] },
    ]; };
    MdlRadioComponent.propDecorators = {
        'name': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'formControlName': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'tabindex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'change': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlRadioComponent.prototype, "disabled", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__common_number_property__["a" /* NumberProperty */])()
    ], MdlRadioComponent.prototype, "tabindex", void 0);
    return MdlRadioComponent;
}());
var MdlRadioModule = (function () {
    function MdlRadioModule() {
    }
    MdlRadioModule.forRoot = function () {
        return {
            ngModule: MdlRadioModule,
            providers: [MdlRadioGroupRegisty]
        };
    };
    MdlRadioModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [__WEBPACK_IMPORTED_MODULE_2__angular_common__["CommonModule"], __WEBPACK_IMPORTED_MODULE_1__angular_forms__["b" /* FormsModule */]],
                    exports: [MdlRadioComponent],
                    declarations: [MdlRadioComponent]
                },] },
    ];
    /** @nocollapse */
    MdlRadioModule.ctorParameters = function () { return []; };
    return MdlRadioModule;
}());
//# sourceMappingURL=mdl-radio.component.js.map

/***/ },
/* 774 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_mdl_error__ = __webpack_require__(675);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_number_property__ = __webpack_require__(676);
/* unused harmony export MdlUnsupportedShadowValueError */
/* unused harmony export MdlShadowDirective */
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlShadowModule; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var MdlUnsupportedShadowValueError = (function (_super) {
    __extends(MdlUnsupportedShadowValueError, _super);
    function MdlUnsupportedShadowValueError(value) {
        _super.call(this, "Shadow value \"" + value + "\" isn't supported (allowed: 2,3,4,6,8,16,24).");
    }
    return MdlUnsupportedShadowValueError;
}(__WEBPACK_IMPORTED_MODULE_1__common_mdl_error__["a" /* MdlError */]));
var MDL_SHADOW_VALUES = [0, 2, 3, 4, 6, 8, 16, 24];
var MdlShadowDirective = (function () {
    function MdlShadowDirective(elementRef, renderer) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.mdlShadow = 2;
        this.el = elementRef.nativeElement;
    }
    MdlShadowDirective.prototype.ngOnChanges = function (changes) {
        if (MDL_SHADOW_VALUES.indexOf(Number(this.mdlShadow)) === -1) {
            throw new MdlUnsupportedShadowValueError(this.mdlShadow);
        }
        var change = changes['mdlShadow'];
        if (!change.isFirstChange()) {
            this.renderer.setElementClass(this.el, "mdl-shadow--" + change.previousValue + "dp", false);
        }
        this.renderer.setElementClass(this.el, "mdl-shadow--" + change.currentValue + "dp", true);
    };
    MdlShadowDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: '[mdl-shadow]'
                },] },
    ];
    /** @nocollapse */
    MdlShadowDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
    ]; };
    MdlShadowDirective.propDecorators = {
        'mdlShadow': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-shadow',] },],
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common_number_property__["a" /* NumberProperty */])()
    ], MdlShadowDirective.prototype, "mdlShadow", void 0);
    return MdlShadowDirective;
}());
var MDL_SHADOW_DIRECTIVES = [MdlShadowDirective];
var MdlShadowModule = (function () {
    function MdlShadowModule() {
    }
    MdlShadowModule.forRoot = function () {
        return {
            ngModule: MdlShadowModule,
            providers: []
        };
    };
    MdlShadowModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [],
                    exports: MDL_SHADOW_DIRECTIVES,
                    declarations: MDL_SHADOW_DIRECTIVES,
                },] },
    ];
    /** @nocollapse */
    MdlShadowModule.ctorParameters = function () { return []; };
    return MdlShadowModule;
}());
//# sourceMappingURL=mdl-shadow.directive.js.map

/***/ },
/* 775 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(371);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_boolean_property__ = __webpack_require__(667);
/* unused harmony export MdlSliderComponent */
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlSliderModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var noop = function (_) { };
var MdlSliderComponent = (function () {
    function MdlSliderComponent(renderer, elRef) {
        this.renderer = renderer;
        this.elRef = elRef;
        this.disabled = false;
        this.onTouchedCallback = noop;
        this.onChangeCallback = noop;
    }
    Object.defineProperty(MdlSliderComponent.prototype, "value", {
        get: function () { return this.value_; },
        set: function (v) {
            this.value_ = v;
            this.updateSliderUI();
            this.onChangeCallback(v);
        },
        enumerable: true,
        configurable: true
    });
    ;
    MdlSliderComponent.prototype.writeValue = function (value) {
        this.value_ = value;
        this.updateSliderUI();
    };
    MdlSliderComponent.prototype.registerOnChange = function (fn) {
        this.onChangeCallback = fn;
    };
    MdlSliderComponent.prototype.registerOnTouched = function (fn) {
        this.onTouchedCallback = fn;
    };
    MdlSliderComponent.prototype.setDisabledState = function (isDisabled) {
        this.disabled = isDisabled;
    };
    MdlSliderComponent.prototype.updateSliderUI = function () {
        var fraction = (this.value_ - this.min) / (this.max - this.min);
        this.renderer.setElementClass(this.inputEl.nativeElement, 'is-lowest-value', fraction === 0);
        this.renderer.setElementStyle(this.lowerEl.nativeElement, 'flex', '' + fraction);
        this.renderer.setElementStyle(this.upperEl.nativeElement, 'flex', '' + (1 - fraction));
    };
    MdlSliderComponent.prototype.onMouseUp = function (event) {
        event.target.blur();
    };
    MdlSliderComponent.prototype.onMouseDown = function (event) {
        if (event.target !== this.elRef.nativeElement) {
            return;
        }
        // Discard the original event and create a new event that
        // is on the slider element.
        event.preventDefault();
        var newEvent = new MouseEvent('mousedown', {
            relatedTarget: event.relatedTarget,
            button: event.button,
            buttons: event.buttons,
            clientX: event.clientX,
            clientY: this.inputEl.nativeElement.getBoundingClientRect().y,
            screenX: event.screenX,
            screenY: event.screenY
        });
        this.renderer.invokeElementMethod(this.inputEl.nativeElement, 'dispatchEvent', [newEvent]);
    };
    MdlSliderComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-slider',
                    providers: [{
                            provide: __WEBPACK_IMPORTED_MODULE_1__angular_forms__["a" /* NG_VALUE_ACCESSOR */],
                            useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["forwardRef"])(function () { return MdlSliderComponent; }),
                            multi: true
                        }],
                    host: {
                        '[class.mdl-slider__container]': 'true',
                        '(mouseup)': 'onMouseUp($event)',
                        '(mousedown)': 'onMouseDown($event)'
                    },
                    template: "\n    <input class=\"mdl-slider is-upgraded\" \n            type=\"range\" \n            [min]=\"min\" \n            [max]=\"max\" \n            [step]=\"step\" \n            [(ngModel)]=\"value\" \n            [disabled]=\"disabled\"\n            tabindex=\"0\"\n            #input>\n    <div class=\"mdl-slider__background-flex\">\n      <div class=\"mdl-slider__background-lower\" #lower></div>\n      <div class=\"mdl-slider__background-upper\" #uppper></div>\n  </div>\n  ",
                    styles: [
                        "\n    :host {\n        height: 22px;\n        user-select: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n    }\n    "
                    ],
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlSliderComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
    ]; };
    MdlSliderComponent.propDecorators = {
        'min': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'max': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'step': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'lowerEl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"], args: ['lower',] },],
        'upperEl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"], args: ['uppper',] },],
        'inputEl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"], args: ['input',] },],
        'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlSliderComponent.prototype, "disabled", void 0);
    return MdlSliderComponent;
}());
var MDL_SLIDER_DIRECTIVES = [MdlSliderComponent];
var MdlSliderModule = (function () {
    function MdlSliderModule() {
    }
    MdlSliderModule.forRoot = function () {
        return {
            ngModule: MdlSliderModule,
            providers: []
        };
    };
    MdlSliderModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [__WEBPACK_IMPORTED_MODULE_1__angular_forms__["b" /* FormsModule */], __WEBPACK_IMPORTED_MODULE_2__angular_common__["CommonModule"]],
                    exports: MDL_SLIDER_DIRECTIVES,
                    declarations: MDL_SLIDER_DIRECTIVES,
                },] },
    ];
    /** @nocollapse */
    MdlSliderModule.ctorParameters = function () { return []; };
    return MdlSliderModule;
}());
//# sourceMappingURL=mdl-slider.component.js.map

/***/ },
/* 776 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__dialog_outlet_mdl_dialog_outlet_service__ = __webpack_require__(688);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__dialog_outlet_index__ = __webpack_require__(692);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__);
/* unused harmony export MdlSnackbarComponent */
/* harmony export (binding) */ __webpack_require__.d(exports, "b", function() { return MdlSnackbarService; });
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlSnackbaModule; });





var ANIMATION_TIME = 250;
var MdlSnackbarComponent = (function () {
    function MdlSnackbarComponent() {
        this.showIt = false;
    }
    MdlSnackbarComponent.prototype.onClick = function () {
        this.onAction();
    };
    MdlSnackbarComponent.prototype.isActive = function () {
        return this.showIt;
    };
    MdlSnackbarComponent.prototype.show = function () {
        var _this = this;
        var result = new __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__["Subject"]();
        // wait unit the dom is in place - then showIt will change the css class
        setTimeout(function () {
            _this.showIt = true;
            // fire after the view animation is done
            setTimeout(function () {
                result.next(null);
                result.complete();
            }, ANIMATION_TIME);
        }, ANIMATION_TIME);
        return result.asObservable();
    };
    MdlSnackbarComponent.prototype.hide = function () {
        this.showIt = false;
        var result = new __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__["Subject"]();
        // fire after the view animation is done
        setTimeout(function () {
            result.next(null);
            result.complete();
        }, ANIMATION_TIME);
        return result.asObservable();
    };
    MdlSnackbarComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-snackbar-component',
                    template: "\n    <div id=\"demo-toast-example\" class=\" mdl-snackbar\" [ngClass]=\"{'mdl-snackbar--active': showIt }\">\n      <div class=\"mdl-snackbar__text\">{{message}}</div>\n      <button *ngIf=\"onAction\" class=\"mdl-snackbar__action\" type=\"button\" (click)=\"onClick()\" >{{actionText}}</button>\n    </div>\n  ",
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlSnackbarComponent.ctorParameters = function () { return []; };
    return MdlSnackbarComponent;
}());
var MdlSnackbarService = (function () {
    function MdlSnackbarService(componentFactoryResolver, dialogOutletService) {
        this.componentFactoryResolver = componentFactoryResolver;
        this.dialogOutletService = dialogOutletService;
        this.cFactory = this.componentFactoryResolver.resolveComponentFactory(MdlSnackbarComponent);
    }
    MdlSnackbarService.prototype.showToast = function (message, timeout) {
        return this.showSnackbar({
            message: message,
            timeout: timeout
        });
    };
    MdlSnackbarService.prototype.showSnackbar = function (snackbarMessage) {
        var optTimeout = snackbarMessage.timeout || 2750;
        var closeAfterTimeout = !!snackbarMessage.closeAfterTimeout;
        var viewContainerRef = this.dialogOutletService.viewContainerRef;
        if (!viewContainerRef) {
            throw new Error('You did not provide a ViewContainerRef. ' +
                'Please see https://github.com/mseemann/angular2-mdl/wiki/How-to-use-the-MdlDialogService');
        }
        var cRef = viewContainerRef.createComponent(this.cFactory, viewContainerRef.length);
        var mdlSnackbarComponent = cRef.instance;
        mdlSnackbarComponent.message = snackbarMessage.message;
        if (this.previousSnack) {
            var previousSnack_1 = this.previousSnack;
            var subscription_1 = previousSnack_1.component.hide()
                .subscribe(function () {
                previousSnack_1.cRef.destroy();
                subscription_1.unsubscribe();
            });
        }
        this.previousSnack = {
            component: mdlSnackbarComponent,
            cRef: cRef
        };
        if (snackbarMessage.action) {
            if (closeAfterTimeout) {
                this.hideAndDestroySnack(mdlSnackbarComponent, cRef, optTimeout);
            }
            mdlSnackbarComponent.actionText = snackbarMessage.action.text;
            mdlSnackbarComponent.onAction = function () {
                mdlSnackbarComponent.hide().subscribe(function () {
                    cRef.destroy();
                    snackbarMessage.action.handler();
                });
            };
        }
        else {
            this.hideAndDestroySnack(mdlSnackbarComponent, cRef, optTimeout);
        }
        var result = new __WEBPACK_IMPORTED_MODULE_4_rxjs_Subject__["Subject"]();
        mdlSnackbarComponent.show().subscribe(function () {
            result.next(mdlSnackbarComponent);
            result.complete();
        });
        return result.asObservable();
    };
    MdlSnackbarService.prototype.hideAndDestroySnack = function (component, componentRef, timeOut) {
        setTimeout(function () {
            component.hide()
                .subscribe(function () {
                componentRef.destroy();
            });
        }, timeOut);
    };
    MdlSnackbarService.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"] },
    ];
    /** @nocollapse */
    MdlSnackbarService.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ComponentFactoryResolver"], },
        { type: __WEBPACK_IMPORTED_MODULE_2__dialog_outlet_mdl_dialog_outlet_service__["a" /* MdlDialogOutletService */], },
    ]; };
    return MdlSnackbarService;
}());
var MdlSnackbaModule = (function () {
    function MdlSnackbaModule() {
    }
    MdlSnackbaModule.forRoot = function () {
        return {
            ngModule: MdlSnackbaModule,
            providers: [MdlSnackbarService]
        };
    };
    MdlSnackbaModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [__WEBPACK_IMPORTED_MODULE_1__angular_common__["CommonModule"], __WEBPACK_IMPORTED_MODULE_3__dialog_outlet_index__["a" /* MdlDialogOutletModule */].forRoot()],
                    exports: [MdlSnackbarComponent],
                    declarations: [MdlSnackbarComponent],
                    entryComponents: [MdlSnackbarComponent]
                },] },
    ];
    /** @nocollapse */
    MdlSnackbaModule.ctorParameters = function () { return []; };
    return MdlSnackbaModule;
}());
//# sourceMappingURL=mdl-snackbar.service.js.map

/***/ },
/* 777 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_boolean_property__ = __webpack_require__(667);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(100);
/* unused harmony export MdlSpinnerComponent */
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlSpinnerModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var MdlSpinnerComponent = (function () {
    function MdlSpinnerComponent() {
        this.layers = [1, 2, 3, 4];
    }
    MdlSpinnerComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-spinner',
                    host: {
                        '[class.mdl-spinner]': 'true',
                        '[class.is-upgraded]': 'true',
                        '[class.is-active]': 'active',
                        '[class.mdl-spinner--single-color]': 'singleColor',
                    },
                    // must be one line - otherwise the spinner is broken in the ui
                    /* tslint:disable */
                    template: "\n    <div *ngFor=\"let layer of layers;\" \n            class=\"mdl-spinner__layer mdl-spinner__layer-{{layer}}\">\n      <div class=\"mdl-spinner__circle-clipper mdl-spinner__left\">\n         <div class=\"mdl-spinner__circle\"></div>\n      </div><div class=\"mdl-spinner__gap-patch\"><div class=\"mdl-spinner__circle\"></div></div><div class=\"mdl-spinner__circle-clipper mdl-spinner__right\"><div class=\"mdl-spinner__circle\"></div></div>\n    </div>\n  ",
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlSpinnerComponent.ctorParameters = function () { return []; };
    MdlSpinnerComponent.propDecorators = {
        'active': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'singleColor': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['single-color',] },],
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlSpinnerComponent.prototype, "active", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlSpinnerComponent.prototype, "singleColor", void 0);
    return MdlSpinnerComponent;
}());
var MDL_SPINNER_DIRECTIVES = [MdlSpinnerComponent];
var MdlSpinnerModule = (function () {
    function MdlSpinnerModule() {
    }
    MdlSpinnerModule.forRoot = function () {
        return {
            ngModule: MdlSpinnerModule,
            providers: []
        };
    };
    MdlSpinnerModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [__WEBPACK_IMPORTED_MODULE_2__angular_common__["CommonModule"]],
                    exports: MDL_SPINNER_DIRECTIVES,
                    declarations: MDL_SPINNER_DIRECTIVES,
                },] },
    ];
    /** @nocollapse */
    MdlSpinnerModule.ctorParameters = function () { return []; };
    return MdlSpinnerModule;
}());
//# sourceMappingURL=mdl-spinner.component.js.map

/***/ },
/* 778 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(371);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__checkbox_mdl_checkbox_component__ = __webpack_require__(686);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_common__ = __webpack_require__(100);
/* unused harmony export MdlSwitchComponent */
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlSwitchModule; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};




var MdlSwitchComponent = (function (_super) {
    __extends(MdlSwitchComponent, _super);
    function MdlSwitchComponent(elementRef, renderer) {
        _super.call(this, elementRef, renderer);
    }
    MdlSwitchComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-switch',
                    providers: [{
                            provide: __WEBPACK_IMPORTED_MODULE_1__angular_forms__["a" /* NG_VALUE_ACCESSOR */],
                            useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["forwardRef"])(function () { return MdlSwitchComponent; }),
                            multi: true
                        }],
                    host: {
                        '(click)': 'onClick()',
                        '[class.mdl-switch]': 'true',
                        '[class.is-upgraded]': 'true',
                        '[class.is-checked]': 'value',
                        '[class.is-disabled]': 'disabled'
                    },
                    outputs: ['change'],
                    template: "\n    <input type=\"checkbox\" class=\"mdl-switch__input\" \n      (focus)=\"onFocus()\" \n      (blur)=\"onBlur()\"\n      [disabled]=\"disabled\"\n      [(ngModel)]=\"value\">\n    <span class=\"mdl-switch__label\"><ng-content></ng-content></span>\n    <div class=\"mdl-switch__track\"></div>\n    <div class=\"mdl-switch__thumb\"><span class=\"mdl-switch__focus-helper\"></span></div>\n  ",
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlSwitchComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
    ]; };
    return MdlSwitchComponent;
}(__WEBPACK_IMPORTED_MODULE_2__checkbox_mdl_checkbox_component__["a" /* MdlCheckboxComponent */]));
var MDL_SWITCH_DIRECTIVES = [MdlSwitchComponent];
var MdlSwitchModule = (function () {
    function MdlSwitchModule() {
    }
    MdlSwitchModule.forRoot = function () {
        return {
            ngModule: MdlSwitchModule,
            providers: []
        };
    };
    MdlSwitchModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [__WEBPACK_IMPORTED_MODULE_3__angular_common__["CommonModule"], __WEBPACK_IMPORTED_MODULE_1__angular_forms__["b" /* FormsModule */]],
                    exports: MDL_SWITCH_DIRECTIVES,
                    declarations: MDL_SWITCH_DIRECTIVES,
                },] },
    ];
    /** @nocollapse */
    MdlSwitchModule.ctorParameters = function () { return []; };
    return MdlSwitchModule;
}());
//# sourceMappingURL=mdl-switch.component.js.map

/***/ },
/* 779 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_table_component__ = __webpack_require__(780);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__checkbox_mdl_checkbox_component__ = __webpack_require__(686);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_mdl_ripple_directive__ = __webpack_require__(687);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_common__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_forms__ = __webpack_require__(371);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlTableModule; });
/* unused harmony namespace reexport */







var MDL_TABLE_DIRECTIVES = [
    __WEBPACK_IMPORTED_MODULE_1__mdl_table_component__["a" /* MdlTableComponent */],
    __WEBPACK_IMPORTED_MODULE_1__mdl_table_component__["b" /* MdlSelectableTableComponent */]
];
var MdlTableModule = (function () {
    function MdlTableModule() {
    }
    MdlTableModule.forRoot = function () {
        return {
            ngModule: MdlTableModule,
            providers: []
        };
    };
    MdlTableModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [__WEBPACK_IMPORTED_MODULE_2__checkbox_mdl_checkbox_component__["b" /* MdlCheckboxModule */], __WEBPACK_IMPORTED_MODULE_3__common_mdl_ripple_directive__["a" /* MdlRippleModule */], __WEBPACK_IMPORTED_MODULE_4__angular_common__["CommonModule"], __WEBPACK_IMPORTED_MODULE_5__angular_forms__["b" /* FormsModule */]],
                    exports: MDL_TABLE_DIRECTIVES,
                    declarations: MDL_TABLE_DIRECTIVES,
                },] },
    ];
    /** @nocollapse */
    MdlTableModule.ctorParameters = function () { return []; };
    return MdlTableModule;
}());
//# sourceMappingURL=index.js.map

/***/ },
/* 780 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* unused harmony export MdlDefaultTableModel */
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlTableComponent; });
/* harmony export (binding) */ __webpack_require__.d(exports, "b", function() { return MdlSelectableTableComponent; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};

var MdlDefaultTableModel = (function () {
    function MdlDefaultTableModel(columns) {
        this.data = new Array();
        this.columns = columns;
    }
    MdlDefaultTableModel.prototype.addAll = function (data) {
        (_a = this.data).push.apply(_a, data);
        var _a;
    };
    return MdlDefaultTableModel;
}());
var template = "\n        <table class=\"mdl-data-table\">\n           <thead>\n           <tr>\n              <th *ngIf=\"selectable\">\n                 <mdl-checkbox mdl-ripple [ngModel]=\"isAllSelected()\" (ngModelChange)=\"toogleAll()\"></mdl-checkbox>\n              </th>\n              <th *ngFor=\"let column of model.columns\"\n                  [ngClass]=\"{'mdl-data-table__cell--non-numeric': !column.numeric}\">\n                 {{column.name}}\n              </th>\n           </tr>\n           </thead>\n           <tbody>\n           <tr *ngFor=\"let data of model.data; let i = index\" [ngClass]=\"{'is-selected': selectable && data.selected}\">\n              <td *ngIf=\"selectable\">\n                 <mdl-checkbox mdl-ripple\n                      [(ngModel)]=\"data.selected\"\n                      (ngModelChange)=\"selectionChanged(data)\"></mdl-checkbox>\n              </td>\n              <td *ngFor=\"let column of model.columns\"\n                  [ngClass]=\"{'mdl-data-table__cell--non-numeric': !column.numeric}\">\n                 {{data[column.key]}}\n              </td>\n           </tr>\n           </tbody>\n        </table>  \n    ";
var styles = [
    "\n    :host{\n      display:inline-block;\n    }\n    "
];
var MdlTableComponent = (function () {
    function MdlTableComponent() {
        this.selectable = false;
    }
    MdlTableComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-table',
                    template: template,
                    styles: styles,
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlTableComponent.ctorParameters = function () { return []; };
    MdlTableComponent.propDecorators = {
        'model': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['table-model',] },],
    };
    return MdlTableComponent;
}());
var MdlSelectableTableComponent = (function (_super) {
    __extends(MdlSelectableTableComponent, _super);
    function MdlSelectableTableComponent() {
        _super.apply(this, arguments);
        this.selectionChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.selectable = true;
        this.allSelected = false;
    }
    MdlSelectableTableComponent.prototype.isAllSelected = function () {
        return this.model.data.every(function (data) { return data.selected; });
    };
    MdlSelectableTableComponent.prototype.toogleAll = function () {
        var selected = !this.isAllSelected();
        this.model.data.forEach(function (data) { return data.selected = selected; });
        this.updateSelected();
    };
    MdlSelectableTableComponent.prototype.updateSelected = function () {
        this.selected = this.model.data.filter(function (data) { return data.selected; });
        this.selectionChange.emit({ value: this.selected });
    };
    MdlSelectableTableComponent.prototype.selectionChanged = function (data) {
        this.updateSelected();
    };
    MdlSelectableTableComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-table-selectable',
                    template: template,
                    styles: styles,
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlSelectableTableComponent.ctorParameters = function () { return []; };
    MdlSelectableTableComponent.propDecorators = {
        'model': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['table-model',] },],
        'selected': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['table-model-selected',] },],
        'selectionChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"], args: ['table-model-selectionChanged',] },],
    };
    return MdlSelectableTableComponent;
}(MdlTableComponent));
//# sourceMappingURL=mdl-table.component.js.map

/***/ },
/* 781 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_boolean_property__ = __webpack_require__(667);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_number_property__ = __webpack_require__(676);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mdl_tab_panel_component__ = __webpack_require__(717);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlTabsComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var MdlTabsComponent = (function () {
    function MdlTabsComponent() {
        this.selectedIndex = 0;
        this.isRipple = false;
        this.selectedTabEmitter = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    MdlTabsComponent.prototype.ngAfterContentInit = function () {
        this.updateSelectedTabIndex();
    };
    MdlTabsComponent.prototype.ngOnChanges = function (changes) {
        if (changes['selectedIndex']) {
            this.updateSelectedTabIndex();
        }
    };
    MdlTabsComponent.prototype.updateSelectedTabIndex = function () {
        if (this.tabs) {
            this.tabs.forEach(function (tab) { return tab.isActive = false; });
            if (this.tabs.toArray().length > 0 && this.selectedIndex < this.tabs.toArray().length) {
                this.tabs.toArray()[this.selectedIndex].isActive = true;
            }
        }
    };
    MdlTabsComponent.prototype.tabSelected = function (tab) {
        if (tab.disabled) {
            return;
        }
        var index = this.tabs.toArray().indexOf(tab);
        if (index != this.selectedIndex) {
            this.selectedIndex = index;
            this.updateSelectedTabIndex();
            this.selectedTabEmitter.emit({ index: this.selectedIndex });
        }
    };
    MdlTabsComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-tabs',
                    host: {
                        '[class.mdl-tabs]': 'true',
                        '[class.is-upgraded]': 'true'
                    },
                    template: "\n   <div class=\"mdl-tabs__tab-bar\">\n      <div *ngFor=\"let tab of tabs.toArray()\">\n        <div\n          *ngIf=\"tab.titleComponent\"\n          class=\"mdl-tabs__tab\"\n          (click)=\"tabSelected(tab)\"\n          [mdl-ripple]=\"isRipple && !tab.disabled\"\n          [ngClass]=\"{'is-active': tab.isActive, 'disabled': tab.disabled}\"\n          [append-view-container-ref]=\"tab.titleComponent.vcRef\"></div>\n        <a *ngIf=\"!tab.titleComponent\" href=\"javascript:void(0)\"\n              (click)=\"tabSelected(tab)\"\n              class=\"mdl-tabs__tab\"\n              [mdl-ripple]=\"isRipple && !tab.disabled\"\n              [ngClass]=\"{'is-active': tab.isActive, 'disabled': tab.disabled}\">{{tab.title}}</a>\n       </div>\n  </div>\n  <ng-content></ng-content>\n  ",
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlTabsComponent.ctorParameters = function () { return []; };
    MdlTabsComponent.propDecorators = {
        'selectedIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-tab-active-index',] },],
        'isRipple': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-ripple',] },],
        'selectedTabEmitter': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"], args: ['mdl-tab-active-changed',] },],
        'tabs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ContentChildren"], args: [__WEBPACK_IMPORTED_MODULE_3__mdl_tab_panel_component__["a" /* MdlTabPanelComponent */],] },],
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common_number_property__["a" /* NumberProperty */])()
    ], MdlTabsComponent.prototype, "selectedIndex", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlTabsComponent.prototype, "isRipple", void 0);
    return MdlTabsComponent;
}());
//# sourceMappingURL=mdl-tabs.component.js.map

/***/ },
/* 782 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(371);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common_boolean_property__ = __webpack_require__(667);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common_number_property__ = __webpack_require__(676);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__button_mdl_button_component__ = __webpack_require__(680);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__icon_mdl_icon_component__ = __webpack_require__(681);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_common__ = __webpack_require__(100);
/* unused harmony export DISABLE_NATIVE_VALIDITY_CHECKING */
/* unused harmony export MdlTextFieldComponent */
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlTextFieldModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};








var DISABLE_NATIVE_VALIDITY_CHECKING = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["OpaqueToken"]('disableNativeValidityChecking');
var noop = function (_) { };
var nextId = 0;
var IS_FOCUSED = 'is-focused';
var IS_DISABLED = 'is-disabled';
var IS_INVALID = 'is-invalid';
var IS_DIRTY = 'is-dirty';
var MdlTextFieldComponent = (function () {
    function MdlTextFieldComponent(renderer, elmRef, nativeCheckGlobalDisabled) {
        this.renderer = renderer;
        this.elmRef = elmRef;
        this.nativeCheckGlobalDisabled = nativeCheckGlobalDisabled;
        this.blurEmitter = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.focusEmitter = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.type = 'text';
        this.id = "mdl-textfield-" + nextId++;
        this.disabled = false;
        this.readonly = false;
        this.required = false;
        this.autofocus = false;
        this.isFloatingLabel = false;
        this.rows = null;
        this.maxrows = -1;
        this.tabindex = 1;
        this.onTouchedCallback = noop;
        this.onChangeCallback = noop;
        this.el = elmRef.nativeElement;
    }
    Object.defineProperty(MdlTextFieldComponent.prototype, "value", {
        get: function () { return this.value_; },
        set: function (v) {
            this.value_ = this.type === 'number' ? (v === '' ? null : parseFloat(v)) : v;
            this.onChangeCallback(this.value);
        },
        enumerable: true,
        configurable: true
    });
    ;
    MdlTextFieldComponent.prototype.writeValue = function (value) {
        this.value_ = value;
        this.checkDirty();
    };
    MdlTextFieldComponent.prototype.registerOnChange = function (fn) {
        this.onChangeCallback = fn;
    };
    MdlTextFieldComponent.prototype.registerOnTouched = function (fn) {
        this.onTouchedCallback = fn;
    };
    MdlTextFieldComponent.prototype.setDisabledState = function (isDisabled) {
        this.disabled = isDisabled;
    };
    MdlTextFieldComponent.prototype.ngOnChanges = function () {
        this.checkDisabled();
    };
    MdlTextFieldComponent.prototype.ngDoCheck = function () {
        this.checkValidity();
        this.checkDirty();
    };
    MdlTextFieldComponent.prototype.setFocus = function () {
        if (!this.inputEl) {
            return;
        }
        this.renderer.invokeElementMethod(this.inputEl.nativeElement, 'focus', []);
    };
    MdlTextFieldComponent.prototype.onFocus = function (event) {
        this.renderer.setElementClass(this.el, IS_FOCUSED, true);
        this.focusEmitter.emit(event);
    };
    MdlTextFieldComponent.prototype.onBlur = function (event) {
        this.renderer.setElementClass(this.el, IS_FOCUSED, false);
        this.onTouchedCallback();
        this.blurEmitter.emit(event);
    };
    MdlTextFieldComponent.prototype.checkDisabled = function () {
        this.renderer.setElementClass(this.el, IS_DISABLED, this.disabled);
    };
    MdlTextFieldComponent.prototype.checkValidity = function () {
        // check the global setting - if globally disabled do no check
        if (this.nativeCheckGlobalDisabled === true) {
            return;
        }
        // check local setting - if locally disabled do no check
        if (this.disableNativeValidityChecking) {
            return;
        }
        if (this.inputEl && this.inputEl.nativeElement.validity) {
            this.renderer.setElementClass(this.el, IS_INVALID, !this.inputEl.nativeElement.validity.valid);
        }
    };
    MdlTextFieldComponent.prototype.checkDirty = function () {
        var dirty = this.inputEl && this.inputEl.nativeElement.value && this.inputEl.nativeElement.value.length > 0;
        this.renderer.setElementClass(this.el, IS_DIRTY, dirty);
    };
    MdlTextFieldComponent.prototype.keydownTextarea = function ($event) {
        var currentRowCount = this.inputEl.nativeElement.value.split('\n').length;
        if ($event.keyCode === 13) {
            if (currentRowCount >= this.maxrows && this.maxrows !== -1) {
                $event.preventDefault();
            }
        }
    };
    // hm only for test purposes to simulate a change to the input field that will change the
    // model value.
    MdlTextFieldComponent.prototype.triggerChange = function (event) {
        this.value = event.target.value;
        this.onTouchedCallback();
    };
    MdlTextFieldComponent.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                    selector: 'mdl-textfield',
                    host: {
                        '[class.mdl-textfield]': 'true',
                        '[class.is-upgraded]': 'true',
                        '[class.mdl-textfield--expandable]': 'icon',
                        '[class.mdl-textfield--floating-label]': 'isFloatingLabel',
                        '[class.has-placeholder]': 'placeholder'
                    },
                    template: "\n   <div *ngIf=\"!icon\">\n     <textarea\n        *ngIf=\"rows\"\n        #input\n        [rows]=\"rows\"\n        class=\"mdl-textfield__input\"\n        type=\"text\"\n        [attr.name]=\"name\"\n        [id]=\"id\"\n        [placeholder]=\"placeholder ? placeholder : ''\"\n        (focus)=\"onFocus($event)\"\n        (blur)=\"onBlur($event)\"\n        (keydown)=\"keydownTextarea($event)\"\n        [(ngModel)]=\"value\"\n        [disabled]=\"disabled\"\n        [required]=\"required\"\n        [autofocus]=\"autofocus\"\n        [readonly]=\"readonly\"\n        ></textarea>\n     <input\n        *ngIf=\"!rows\"\n        #input\n        class=\"mdl-textfield__input\"\n        [type]=\"type\"\n        [attr.name]=\"name\"\n        [id]=\"id\"\n        [pattern]=\"pattern ? pattern : '.*'\"\n        [attr.min]=\"min\"\n        [attr.max]=\"max\"\n        [attr.step]=\"step\"\n        [placeholder]=\"placeholder ? placeholder : ''\"\n        [autocomplete]=\"autocomplete ? autocomplete : ''\"\n        (focus)=\"onFocus($event)\"\n        (blur)=\"onBlur($event)\"\n        [(ngModel)]=\"value\"\n        [disabled]=\"disabled\"\n        [required]=\"required\"\n        [autofocus]=\"autofocus\"\n        [readonly]=\"readonly\"\n        [tabindex]=\"tabindex\"\n        >\n     <label class=\"mdl-textfield__label\" [attr.for]=\"id\">{{label}}</label>\n     <span class=\"mdl-textfield__error\">{{errorMessage}}</span>\n   </div>\n   <div *ngIf=\"icon\">\n      <button mdl-button mdl-button-type=\"icon\" (click)=\"setFocus()\">\n         <mdl-icon>{{icon}}</mdl-icon>\n      </button>\n      <div class=\"mdl-textfield__expandable-holder\">\n       <input\n          #input\n          class=\"mdl-textfield__input\"\n          [type]=\"type\"\n          [attr.name]=\"name\"\n          [id]=\"id\"\n          [pattern]=\"pattern ? pattern : '.*'\"\n          [attr.min]=\"min\"\n          [attr.max]=\"max\"\n          [attr.step]=\"step\"\n          [placeholder]=\"placeholder ? placeholder : ''\"\n          [autocomplete]=\"autocomplete ? autocomplete : ''\"\n          (focus)=\"onFocus($event)\"\n          (blur)=\"onBlur($event)\"\n          [(ngModel)]=\"value\"\n          [disabled]=\"disabled\"\n          [required]=\"required\"\n          [autofocus]=\"autofocus\"\n          [readonly]=\"readonly\"\n          [tabindex]=\"tabindex\"\n         >\n     <label class=\"mdl-textfield__label\" [attr.for]=\"id\">{{label}}</label>\n     <span class=\"mdl-textfield__error\">{{errorMessage}}</span>\n      </div>\n   </div>\n   ",
                    providers: [{
                            provide: __WEBPACK_IMPORTED_MODULE_1__angular_forms__["a" /* NG_VALUE_ACCESSOR */],
                            useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["forwardRef"])(function () { return MdlTextFieldComponent; }),
                            multi: true
                        }],
                    encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
                },] },
    ];
    /** @nocollapse */
    MdlTextFieldComponent.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], },
        { type: Boolean, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Optional"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Inject"], args: [DISABLE_NATIVE_VALIDITY_CHECKING,] },] },
    ]; };
    MdlTextFieldComponent.propDecorators = {
        'blurEmitter': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"], args: ['blur',] },],
        'focusEmitter': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"], args: ['focus',] },],
        'inputEl': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"], args: ['input',] },],
        'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'type': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'label': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'pattern': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'min': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'max': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'step': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'name': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'id': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'errorMessage': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['error-msg',] },],
        'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'readonly': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'required': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'autofocus': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'isFloatingLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['floating-label',] },],
        'placeholder': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'autocomplete': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'rows': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'maxrows': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'icon': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'tabindex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
        'disableNativeValidityChecking': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlTextFieldComponent.prototype, "disabled", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlTextFieldComponent.prototype, "readonly", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlTextFieldComponent.prototype, "required", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlTextFieldComponent.prototype, "autofocus", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlTextFieldComponent.prototype, "isFloatingLabel", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__common_number_property__["a" /* NumberProperty */])()
    ], MdlTextFieldComponent.prototype, "rows", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__common_number_property__["a" /* NumberProperty */])()
    ], MdlTextFieldComponent.prototype, "maxrows", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__common_number_property__["a" /* NumberProperty */])()
    ], MdlTextFieldComponent.prototype, "tabindex", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__common_boolean_property__["a" /* BooleanProperty */])()
    ], MdlTextFieldComponent.prototype, "disableNativeValidityChecking", void 0);
    return MdlTextFieldComponent;
}());
var MdlTextFieldModule = (function () {
    function MdlTextFieldModule() {
    }
    MdlTextFieldModule.forRoot = function () {
        return {
            ngModule: MdlTextFieldModule,
            providers: []
        };
    };
    MdlTextFieldModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [__WEBPACK_IMPORTED_MODULE_5__icon_mdl_icon_component__["a" /* MdlIconModule */], __WEBPACK_IMPORTED_MODULE_4__button_mdl_button_component__["b" /* MdlButtonModule */], __WEBPACK_IMPORTED_MODULE_1__angular_forms__["b" /* FormsModule */], __WEBPACK_IMPORTED_MODULE_6__angular_common__["CommonModule"]],
                    exports: [MdlTextFieldComponent],
                    declarations: [MdlTextFieldComponent],
                },] },
    ];
    /** @nocollapse */
    MdlTextFieldModule.ctorParameters = function () { return []; };
    return MdlTextFieldModule;
}());
//# sourceMappingURL=mdl-textfield.component.js.map

/***/ },
/* 783 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_tooltip_component__ = __webpack_require__(718);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mdl_tooltip_directive__ = __webpack_require__(784);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlTooltipModule; });
/* unused harmony namespace reexport */
/* unused harmony namespace reexport */



var MDL_TOOLTIP_DIRECTIVES = [
    __WEBPACK_IMPORTED_MODULE_1__mdl_tooltip_component__["a" /* MdlTooltipComponent */],
    __WEBPACK_IMPORTED_MODULE_2__mdl_tooltip_directive__["a" /* MdlTooltipLargeDirective */],
    __WEBPACK_IMPORTED_MODULE_2__mdl_tooltip_directive__["b" /* MdlTooltipDirective */]
];


var MdlTooltipModule = (function () {
    function MdlTooltipModule() {
    }
    MdlTooltipModule.forRoot = function () {
        return {
            ngModule: MdlTooltipModule,
            providers: []
        };
    };
    MdlTooltipModule.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                    imports: [],
                    exports: MDL_TOOLTIP_DIRECTIVES,
                    declarations: MDL_TOOLTIP_DIRECTIVES.concat([__WEBPACK_IMPORTED_MODULE_1__mdl_tooltip_component__["b" /* MdlSimpleTooltipComponent */]]),
                    entryComponents: [__WEBPACK_IMPORTED_MODULE_1__mdl_tooltip_component__["b" /* MdlSimpleTooltipComponent */]]
                },] },
    ];
    /** @nocollapse */
    MdlTooltipModule.ctorParameters = function () { return []; };
    return MdlTooltipModule;
}());
//# sourceMappingURL=index.js.map

/***/ },
/* 784 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mdl_tooltip_component__ = __webpack_require__(718);
/* unused harmony export AbstractMdlTooltipDirective */
/* harmony export (binding) */ __webpack_require__.d(exports, "b", function() { return MdlTooltipDirective; });
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlTooltipLargeDirective; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};


var AbstractMdlTooltipDirective = (function () {
    function AbstractMdlTooltipDirective(vcRef, large, componentFactoryResolver, renderer) {
        this.vcRef = vcRef;
        this.large = large;
        this.componentFactoryResolver = componentFactoryResolver;
        this.renderer = renderer;
    }
    AbstractMdlTooltipDirective.prototype.ngOnInit = function () {
        // if the tooltip is not an instance of MdlTooltipComponent
        // we create a simpleTooltipComponent on the fly.
        if (!(this.tooltip instanceof __WEBPACK_IMPORTED_MODULE_1__mdl_tooltip_component__["a" /* MdlTooltipComponent */])) {
            var cFactory = this.componentFactoryResolver.resolveComponentFactory(__WEBPACK_IMPORTED_MODULE_1__mdl_tooltip_component__["b" /* MdlSimpleTooltipComponent */]);
            var cRef = this.vcRef.createComponent(cFactory);
            this.tooltipComponent = cRef.instance;
            this.tooltipComponent.tooltipText = this.tooltip;
            this.configureTooltipComponent();
        }
        else {
            this.tooltipComponent = this.tooltip;
            this.configureTooltipComponent();
        }
    };
    AbstractMdlTooltipDirective.prototype.configureTooltipComponent = function () {
        this.tooltipComponent.large = this.large;
        this.tooltipComponent.position = this.position;
    };
    AbstractMdlTooltipDirective.prototype.onMouseEnter = function (event) {
        this.tooltipComponent.mouseEnter(event);
    };
    AbstractMdlTooltipDirective.prototype.onMouseLeave = function () {
        this.tooltipComponent.mouseLeave();
    };
    AbstractMdlTooltipDirective.propDecorators = {
        'onMouseLeave': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"], args: ['window:touchstart',] },],
    };
    return AbstractMdlTooltipDirective;
}());
var host = {
    '(mouseenter)': 'onMouseEnter($event)',
    '(touchend)': 'onMouseEnter($event)',
    '(mouseleave)': 'onMouseLeave()'
};
var MdlTooltipDirective = (function (_super) {
    __extends(MdlTooltipDirective, _super);
    function MdlTooltipDirective(vcRef, componentFactoryResolver, renderer) {
        _super.call(this, vcRef, false, componentFactoryResolver, renderer);
    }
    MdlTooltipDirective.prototype.ngOnInit = function () { _super.prototype.ngOnInit.call(this); };
    MdlTooltipDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: '[mdl-tooltip]',
                    host: host
                },] },
    ];
    /** @nocollapse */
    MdlTooltipDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewContainerRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ComponentFactoryResolver"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
    ]; };
    MdlTooltipDirective.propDecorators = {
        'tooltip': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-tooltip',] },],
        'position': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-tooltip-position',] },],
    };
    return MdlTooltipDirective;
}(AbstractMdlTooltipDirective));
var MdlTooltipLargeDirective = (function (_super) {
    __extends(MdlTooltipLargeDirective, _super);
    function MdlTooltipLargeDirective(vcRef, componentFactoryResolver, renderer) {
        _super.call(this, vcRef, true, componentFactoryResolver, renderer);
    }
    MdlTooltipLargeDirective.prototype.ngOnInit = function () { _super.prototype.ngOnInit.call(this); };
    MdlTooltipLargeDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: '[mdl-tooltip-large]',
                    host: host
                },] },
    ];
    /** @nocollapse */
    MdlTooltipLargeDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewContainerRef"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ComponentFactoryResolver"], },
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"], },
    ]; };
    MdlTooltipLargeDirective.propDecorators = {
        'tooltip': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-tooltip-large',] },],
        'position': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-tooltip-position',] },],
    };
    return MdlTooltipLargeDirective;
}(AbstractMdlTooltipDirective));
//# sourceMappingURL=mdl-tooltip.directive.js.map

/***/ },
/* 785 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(13);
var ConnectableObservable_1 = __webpack_require__(719);
var MulticastObservable = (function (_super) {
    __extends(MulticastObservable, _super);
    function MulticastObservable(source, subjectFactory, selector) {
        _super.call(this);
        this.source = source;
        this.subjectFactory = subjectFactory;
        this.selector = selector;
    }
    MulticastObservable.prototype._subscribe = function (subscriber) {
        var _a = this, selector = _a.selector, source = _a.source;
        var connectable = new ConnectableObservable_1.ConnectableObservable(source, this.subjectFactory);
        var subscription = selector(connectable).subscribe(subscriber);
        subscription.add(connectable.connect());
        return subscription;
    };
    return MulticastObservable;
}(Observable_1.Observable));
exports.MulticastObservable = MulticastObservable;
//# sourceMappingURL=MulticastObservable.js.map

/***/ },
/* 786 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var root_1 = __webpack_require__(46);
var tryCatch_1 = __webpack_require__(370);
var errorObject_1 = __webpack_require__(231);
var Observable_1 = __webpack_require__(13);
var Subscriber_1 = __webpack_require__(24);
var map_1 = __webpack_require__(101);
function getCORSRequest() {
    if (root_1.root.XMLHttpRequest) {
        var xhr = new root_1.root.XMLHttpRequest();
        if ('withCredentials' in xhr) {
            xhr.withCredentials = !!this.withCredentials;
        }
        return xhr;
    }
    else if (!!root_1.root.XDomainRequest) {
        return new root_1.root.XDomainRequest();
    }
    else {
        throw new Error('CORS is not supported by your browser');
    }
}
function getXMLHttpRequest() {
    if (root_1.root.XMLHttpRequest) {
        return new root_1.root.XMLHttpRequest();
    }
    else {
        var progId = void 0;
        try {
            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];
            for (var i = 0; i < 3; i++) {
                try {
                    progId = progIds[i];
                    if (new root_1.root.ActiveXObject(progId)) {
                        break;
                    }
                }
                catch (e) {
                }
            }
            return new root_1.root.ActiveXObject(progId);
        }
        catch (e) {
            throw new Error('XMLHttpRequest is not supported by your browser');
        }
    }
}
function ajaxGet(url, headers) {
    if (headers === void 0) { headers = null; }
    return new AjaxObservable({ method: 'GET', url: url, headers: headers });
}
exports.ajaxGet = ajaxGet;
;
function ajaxPost(url, body, headers) {
    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });
}
exports.ajaxPost = ajaxPost;
;
function ajaxDelete(url, headers) {
    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });
}
exports.ajaxDelete = ajaxDelete;
;
function ajaxPut(url, body, headers) {
    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });
}
exports.ajaxPut = ajaxPut;
;
function ajaxGetJSON(url, headers) {
    return new AjaxObservable({ method: 'GET', url: url, responseType: 'json', headers: headers })
        .lift(new map_1.MapOperator(function (x, index) { return x.response; }, null));
}
exports.ajaxGetJSON = ajaxGetJSON;
;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var AjaxObservable = (function (_super) {
    __extends(AjaxObservable, _super);
    function AjaxObservable(urlOrRequest) {
        _super.call(this);
        var request = {
            async: true,
            createXHR: function () {
                return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();
            },
            crossDomain: false,
            withCredentials: false,
            headers: {},
            method: 'GET',
            responseType: 'json',
            timeout: 0
        };
        if (typeof urlOrRequest === 'string') {
            request.url = urlOrRequest;
        }
        else {
            for (var prop in urlOrRequest) {
                if (urlOrRequest.hasOwnProperty(prop)) {
                    request[prop] = urlOrRequest[prop];
                }
            }
        }
        this.request = request;
    }
    AjaxObservable.prototype._subscribe = function (subscriber) {
        return new AjaxSubscriber(subscriber, this.request);
    };
    /**
     * Creates an observable for an Ajax request with either a request object with
     * url, headers, etc or a string for a URL.
     *
     * @example
     * source = Rx.Observable.ajax('/products');
     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });
     *
     * @param {string|Object} request Can be one of the following:
     *   A string of the URL to make the Ajax call.
     *   An object with the following properties
     *   - url: URL of the request
     *   - body: The body of the request
     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE
     *   - async: Whether the request is async
     *   - headers: Optional headers
     *   - crossDomain: true if a cross domain request, else false
     *   - createXHR: a function to override if you need to use an alternate
     *   XMLHttpRequest implementation.
     *   - resultSelector: a function to use to alter the output value type of
     *   the Observable. Gets {@link AjaxResponse} as an argument.
     * @return {Observable} An observable sequence containing the XMLHttpRequest.
     * @static true
     * @name ajax
     * @owner Observable
    */
    AjaxObservable.create = (function () {
        var create = function (urlOrRequest) {
            return new AjaxObservable(urlOrRequest);
        };
        create.get = ajaxGet;
        create.post = ajaxPost;
        create.delete = ajaxDelete;
        create.put = ajaxPut;
        create.getJSON = ajaxGetJSON;
        return create;
    })();
    return AjaxObservable;
}(Observable_1.Observable));
exports.AjaxObservable = AjaxObservable;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AjaxSubscriber = (function (_super) {
    __extends(AjaxSubscriber, _super);
    function AjaxSubscriber(destination, request) {
        _super.call(this, destination);
        this.request = request;
        this.done = false;
        var headers = request.headers = request.headers || {};
        // force CORS if requested
        if (!request.crossDomain && !headers['X-Requested-With']) {
            headers['X-Requested-With'] = 'XMLHttpRequest';
        }
        // ensure content type is set
        if (!('Content-Type' in headers) && !(root_1.root.FormData && request.body instanceof root_1.root.FormData) && typeof request.body !== 'undefined') {
            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';
        }
        // properly serialize body
        request.body = this.serializeBody(request.body, request.headers['Content-Type']);
        this.send();
    }
    AjaxSubscriber.prototype.next = function (e) {
        this.done = true;
        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;
        var response = new AjaxResponse(e, xhr, request);
        destination.next(response);
    };
    AjaxSubscriber.prototype.send = function () {
        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;
        var createXHR = request.createXHR;
        var xhr = tryCatch_1.tryCatch(createXHR).call(request);
        if (xhr === errorObject_1.errorObject) {
            this.error(errorObject_1.errorObject.e);
        }
        else {
            this.xhr = xhr;
            // open XHR first
            var result = void 0;
            if (user) {
                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async, user, password);
            }
            else {
                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async);
            }
            if (result === errorObject_1.errorObject) {
                this.error(errorObject_1.errorObject.e);
                return null;
            }
            // timeout and responseType can be set once the XHR is open
            xhr.timeout = request.timeout;
            xhr.responseType = request.responseType;
            // set headers
            this.setHeaders(xhr, headers);
            // now set up the events
            this.setupEvents(xhr, request);
            // finally send the request
            if (body) {
                xhr.send(body);
            }
            else {
                xhr.send();
            }
        }
        return xhr;
    };
    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {
        if (!body || typeof body === 'string') {
            return body;
        }
        else if (root_1.root.FormData && body instanceof root_1.root.FormData) {
            return body;
        }
        if (contentType) {
            var splitIndex = contentType.indexOf(';');
            if (splitIndex !== -1) {
                contentType = contentType.substring(0, splitIndex);
            }
        }
        switch (contentType) {
            case 'application/x-www-form-urlencoded':
                return Object.keys(body).map(function (key) { return (encodeURI(key) + "=" + encodeURI(body[key])); }).join('&');
            case 'application/json':
                return JSON.stringify(body);
            default:
                return body;
        }
    };
    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {
        for (var key in headers) {
            if (headers.hasOwnProperty(key)) {
                xhr.setRequestHeader(key, headers[key]);
            }
        }
    };
    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {
        var progressSubscriber = request.progressSubscriber;
        xhr.ontimeout = function xhrTimeout(e) {
            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;
            if (progressSubscriber) {
                progressSubscriber.error(e);
            }
            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.
        };
        xhr.ontimeout.request = request;
        xhr.ontimeout.subscriber = this;
        xhr.ontimeout.progressSubscriber = progressSubscriber;
        if (xhr.upload && 'withCredentials' in xhr && root_1.root.XDomainRequest) {
            if (progressSubscriber) {
                xhr.onprogress = function xhrProgress(e) {
                    var progressSubscriber = xhrProgress.progressSubscriber;
                    progressSubscriber.next(e);
                };
                xhr.onprogress.progressSubscriber = progressSubscriber;
            }
            xhr.onerror = function xhrError(e) {
                var _a = xhrError, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;
                if (progressSubscriber) {
                    progressSubscriber.error(e);
                }
                subscriber.error(new AjaxError('ajax error', this, request));
            };
            xhr.onerror.request = request;
            xhr.onerror.subscriber = this;
            xhr.onerror.progressSubscriber = progressSubscriber;
        }
        xhr.onreadystatechange = function xhrReadyStateChange(e) {
            var _a = xhrReadyStateChange, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;
            if (this.readyState === 4) {
                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)
                var status_1 = this.status === 1223 ? 204 : this.status;
                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);
                // fix status code when it is 0 (0 status is undocumented).
                // Occurs when accessing file resources or on Android 4.1 stock browser
                // while retrieving files from application cache.
                if (status_1 === 0) {
                    status_1 = response ? 200 : 0;
                }
                if (200 <= status_1 && status_1 < 300) {
                    if (progressSubscriber) {
                        progressSubscriber.complete();
                    }
                    subscriber.next(e);
                    subscriber.complete();
                }
                else {
                    if (progressSubscriber) {
                        progressSubscriber.error(e);
                    }
                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));
                }
            }
        };
        xhr.onreadystatechange.subscriber = this;
        xhr.onreadystatechange.progressSubscriber = progressSubscriber;
        xhr.onreadystatechange.request = request;
    };
    AjaxSubscriber.prototype.unsubscribe = function () {
        var _a = this, done = _a.done, xhr = _a.xhr;
        if (!done && xhr && xhr.readyState !== 4) {
            xhr.abort();
        }
        _super.prototype.unsubscribe.call(this);
    };
    return AjaxSubscriber;
}(Subscriber_1.Subscriber));
exports.AjaxSubscriber = AjaxSubscriber;
/**
 * A normalized AJAX response.
 *
 * @see {@link ajax}
 *
 * @class AjaxResponse
 */
var AjaxResponse = (function () {
    function AjaxResponse(originalEvent, xhr, request) {
        this.originalEvent = originalEvent;
        this.xhr = xhr;
        this.request = request;
        this.status = xhr.status;
        this.responseType = xhr.responseType || request.responseType;
        switch (this.responseType) {
            case 'json':
                if ('response' in xhr) {
                    //IE does not support json as responseType, parse it internally
                    this.response = xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');
                }
                else {
                    this.response = JSON.parse(xhr.responseText || 'null');
                }
                break;
            case 'xml':
                this.response = xhr.responseXML;
                break;
            case 'text':
            default:
                this.response = ('response' in xhr) ? xhr.response : xhr.responseText;
                break;
        }
    }
    return AjaxResponse;
}());
exports.AjaxResponse = AjaxResponse;
/**
 * A normalized AJAX error.
 *
 * @see {@link ajax}
 *
 * @class AjaxError
 */
var AjaxError = (function (_super) {
    __extends(AjaxError, _super);
    function AjaxError(message, xhr, request) {
        _super.call(this, message);
        this.message = message;
        this.xhr = xhr;
        this.request = request;
        this.status = xhr.status;
    }
    return AjaxError;
}(Error));
exports.AjaxError = AjaxError;
/**
 * @see {@link ajax}
 *
 * @class AjaxTimeoutError
 */
var AjaxTimeoutError = (function (_super) {
    __extends(AjaxTimeoutError, _super);
    function AjaxTimeoutError(xhr, request) {
        _super.call(this, 'ajax timeout', xhr, request);
    }
    return AjaxTimeoutError;
}(AjaxError));
exports.AjaxTimeoutError = AjaxTimeoutError;
//# sourceMappingURL=AjaxObservable.js.map

/***/ },
/* 787 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.
 * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.
 * If a comparator function is not provided, an equality check is used by default.
 * As the internal HashSet of this operator grows larger and larger, care should be taken in the domain of inputs this operator may see.
 * An optional parameter is also provided such that an Observable can be provided to queue the internal HashSet to flush the values it holds.
 * @param {function} [compare] optional comparison function called to test if an item is distinct from previous items in the source.
 * @param {Observable} [flushes] optional Observable for flushing the internal HashSet of the operator.
 * @return {Observable} an Observable that emits items from the source Observable with distinct values.
 * @method distinct
 * @owner Observable
 */
function distinct(compare, flushes) {
    return this.lift(new DistinctOperator(compare, flushes));
}
exports.distinct = distinct;
var DistinctOperator = (function () {
    function DistinctOperator(compare, flushes) {
        this.compare = compare;
        this.flushes = flushes;
    }
    DistinctOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new DistinctSubscriber(subscriber, this.compare, this.flushes));
    };
    return DistinctOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DistinctSubscriber = (function (_super) {
    __extends(DistinctSubscriber, _super);
    function DistinctSubscriber(destination, compare, flushes) {
        _super.call(this, destination);
        this.values = [];
        if (typeof compare === 'function') {
            this.compare = compare;
        }
        if (flushes) {
            this.add(subscribeToResult_1.subscribeToResult(this, flushes));
        }
    }
    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.values.length = 0;
    };
    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    DistinctSubscriber.prototype._next = function (value) {
        var found = false;
        var values = this.values;
        var len = values.length;
        try {
            for (var i = 0; i < len; i++) {
                if (this.compare(values[i], value)) {
                    found = true;
                    return;
                }
            }
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.values.push(value);
        this.destination.next(value);
    };
    DistinctSubscriber.prototype.compare = function (x, y) {
        return x === y;
    };
    return DistinctSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.DistinctSubscriber = DistinctSubscriber;
//# sourceMappingURL=distinct.js.map

/***/ },
/* 788 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
var tryCatch_1 = __webpack_require__(370);
var errorObject_1 = __webpack_require__(231);
/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.
 * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.
 * If a comparator function is not provided, an equality check is used by default.
 * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.
 * @return {Observable} an Observable that emits items from the source Observable with distinct values.
 * @method distinctUntilChanged
 * @owner Observable
 */
function distinctUntilChanged(compare, keySelector) {
    return this.lift(new DistinctUntilChangedOperator(compare, keySelector));
}
exports.distinctUntilChanged = distinctUntilChanged;
var DistinctUntilChangedOperator = (function () {
    function DistinctUntilChangedOperator(compare, keySelector) {
        this.compare = compare;
        this.keySelector = keySelector;
    }
    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));
    };
    return DistinctUntilChangedOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DistinctUntilChangedSubscriber = (function (_super) {
    __extends(DistinctUntilChangedSubscriber, _super);
    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {
        _super.call(this, destination);
        this.keySelector = keySelector;
        this.hasKey = false;
        if (typeof compare === 'function') {
            this.compare = compare;
        }
    }
    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {
        return x === y;
    };
    DistinctUntilChangedSubscriber.prototype._next = function (value) {
        var keySelector = this.keySelector;
        var key = value;
        if (keySelector) {
            key = tryCatch_1.tryCatch(this.keySelector)(value);
            if (key === errorObject_1.errorObject) {
                return this.destination.error(errorObject_1.errorObject.e);
            }
        }
        var result = false;
        if (this.hasKey) {
            result = tryCatch_1.tryCatch(this.compare)(this.key, key);
            if (result === errorObject_1.errorObject) {
                return this.destination.error(errorObject_1.errorObject.e);
            }
        }
        else {
            this.hasKey = true;
        }
        if (Boolean(result) === false) {
            this.key = key;
            this.destination.next(value);
        }
    };
    return DistinctUntilChangedSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=distinctUntilChanged.js.map

/***/ },
/* 789 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
/**
 * Emits only the first value emitted by the source Observable that meets some
 * condition.
 *
 * <span class="informal">Finds the first value that passes some test and emits
 * that.</span>
 *
 * <img src="./img/find.png" width="100%">
 *
 * `find` searches for the first item in the source Observable that matches the
 * specified condition embodied by the `predicate`, and returns the first
 * occurrence in the source. Unlike {@link first}, the `predicate` is required
 * in `find`, and does not emit an error if a valid value is not found.
 *
 * @example <caption>Find and emit the first click that happens on a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.find(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link first}
 * @see {@link findIndex}
 * @see {@link take}
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate
 * A function called with each item to test for condition matching.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable<T>} An Observable of the first item that matches the
 * condition.
 * @method find
 * @owner Observable
 */
function find(predicate, thisArg) {
    if (typeof predicate !== 'function') {
        throw new TypeError('predicate is not a function');
    }
    return this.lift(new FindValueOperator(predicate, this, false, thisArg));
}
exports.find = find;
var FindValueOperator = (function () {
    function FindValueOperator(predicate, source, yieldIndex, thisArg) {
        this.predicate = predicate;
        this.source = source;
        this.yieldIndex = yieldIndex;
        this.thisArg = thisArg;
    }
    FindValueOperator.prototype.call = function (observer, source) {
        return source._subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));
    };
    return FindValueOperator;
}());
exports.FindValueOperator = FindValueOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var FindValueSubscriber = (function (_super) {
    __extends(FindValueSubscriber, _super);
    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.source = source;
        this.yieldIndex = yieldIndex;
        this.thisArg = thisArg;
        this.index = 0;
    }
    FindValueSubscriber.prototype.notifyComplete = function (value) {
        var destination = this.destination;
        destination.next(value);
        destination.complete();
    };
    FindValueSubscriber.prototype._next = function (value) {
        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;
        var index = this.index++;
        try {
            var result = predicate.call(thisArg || this, value, index, this.source);
            if (result) {
                this.notifyComplete(this.yieldIndex ? index : value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    FindValueSubscriber.prototype._complete = function () {
        this.notifyComplete(this.yieldIndex ? -1 : undefined);
    };
    return FindValueSubscriber;
}(Subscriber_1.Subscriber));
exports.FindValueSubscriber = FindValueSubscriber;
//# sourceMappingURL=find.js.map

/***/ },
/* 790 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var ArrayObservable_1 = __webpack_require__(232);
var mergeAll_1 = __webpack_require__(147);
var isScheduler_1 = __webpack_require__(372);
/**
 * Creates an output Observable which concurrently emits all values from every
 * given input Observable.
 *
 * <span class="informal">Flattens multiple Observables together by blending
 * their values into one Observable.</span>
 *
 * <img src="./img/merge.png" width="100%">
 *
 * `merge` subscribes to each given input Observable (either the source or an
 * Observable given as argument), and simply forwards (without doing any
 * transformation) all the values from all the input Observables to the output
 * Observable. The output Observable only completes once all input Observables
 * have completed. Any error delivered by an input Observable will be immediately
 * emitted on the output Observable.
 *
 * @example <caption>Merge together two Observables: 1s interval and clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var clicksOrTimer = clicks.merge(timer);
 * clicksOrTimer.subscribe(x => console.log(x));
 *
 * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var concurrent = 2; // the argument
 * var merged = timer1.merge(timer2, timer3, concurrent);
 * merged.subscribe(x => console.log(x));
 *
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 *
 * @param {Observable} other An input Observable to merge with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The Scheduler to use for managing
 * concurrency of input Observables.
 * @return {Observable} an Observable that emits items that are the result of
 * every input Observable.
 * @method merge
 * @owner Observable
 */
function merge() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    observables.unshift(this);
    return mergeStatic.apply(this, observables);
}
exports.merge = merge;
/* tslint:enable:max-line-length */
/**
 * Creates an output Observable which concurrently emits all values from every
 * given input Observable.
 *
 * <span class="informal">Flattens multiple Observables together by blending
 * their values into one Observable.</span>
 *
 * <img src="./img/merge.png" width="100%">
 *
 * `merge` subscribes to each given input Observable (as arguments), and simply
 * forwards (without doing any transformation) all the values from all the input
 * Observables to the output Observable. The output Observable only completes
 * once all input Observables have completed. Any error delivered by an input
 * Observable will be immediately emitted on the output Observable.
 *
 * @example <caption>Merge together two Observables: 1s interval and clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var clicksOrTimer = Rx.Observable.merge(clicks, timer);
 * clicksOrTimer.subscribe(x => console.log(x));
 *
 * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var concurrent = 2; // the argument
 * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);
 * merged.subscribe(x => console.log(x));
 *
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 *
 * @param {Observable} input1 An input Observable to merge with others.
 * @param {Observable} input2 An input Observable to merge with others.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The Scheduler to use for managing
 * concurrency of input Observables.
 * @return {Observable} an Observable that emits items that are the result of
 * every input Observable.
 * @static true
 * @name merge
 * @owner Observable
 */
function mergeStatic() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var concurrent = Number.POSITIVE_INFINITY;
    var scheduler = null;
    var last = observables[observables.length - 1];
    if (isScheduler_1.isScheduler(last)) {
        scheduler = observables.pop();
        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {
            concurrent = observables.pop();
        }
    }
    else if (typeof last === 'number') {
        concurrent = observables.pop();
    }
    if (observables.length === 1) {
        return observables[0];
    }
    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(concurrent));
}
exports.mergeStatic = mergeStatic;
//# sourceMappingURL=merge.js.map

/***/ },
/* 791 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Projects each source value to the same Observable which is merged multiple
 * times in the output Observable.
 *
 * <span class="informal">It's like {@link mergeMap}, but maps each value always
 * to the same inner Observable.</span>
 *
 * <img src="./img/mergeMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then merges those resulting Observables into one
 * single Observable, which is the output Observable.
 *
 * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMapTo}
 * @see {@link merge}
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeScan}
 * @see {@link switchMapTo}
 *
 * @param {Observable} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits items from the given
 * `innerObservable` (and optionally transformed through `resultSelector`) every
 * time a value is emitted on the source Observable.
 * @method mergeMapTo
 * @owner Observable
 */
function mergeMapTo(innerObservable, resultSelector, concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
        resultSelector = null;
    }
    return this.lift(new MergeMapToOperator(innerObservable, resultSelector, concurrent));
}
exports.mergeMapTo = mergeMapTo;
// TODO: Figure out correct signature here: an Operator<Observable<T>, R>
//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>
var MergeMapToOperator = (function () {
    function MergeMapToOperator(ish, resultSelector, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        this.ish = ish;
        this.resultSelector = resultSelector;
        this.concurrent = concurrent;
    }
    MergeMapToOperator.prototype.call = function (observer, source) {
        return source._subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));
    };
    return MergeMapToOperator;
}());
exports.MergeMapToOperator = MergeMapToOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MergeMapToSubscriber = (function (_super) {
    __extends(MergeMapToSubscriber, _super);
    function MergeMapToSubscriber(destination, ish, resultSelector, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        _super.call(this, destination);
        this.ish = ish;
        this.resultSelector = resultSelector;
        this.concurrent = concurrent;
        this.hasCompleted = false;
        this.buffer = [];
        this.active = 0;
        this.index = 0;
    }
    MergeMapToSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            var resultSelector = this.resultSelector;
            var index = this.index++;
            var ish = this.ish;
            var destination = this.destination;
            this.active++;
            this._innerSub(ish, destination, resultSelector, value, index);
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeMapToSubscriber.prototype._innerSub = function (ish, destination, resultSelector, value, index) {
        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));
    };
    MergeMapToSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            this.destination.complete();
        }
    };
    MergeMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        if (resultSelector) {
            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            destination.next(innerValue);
        }
    };
    MergeMapToSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        var result;
        try {
            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        destination.next(result);
    };
    MergeMapToSubscriber.prototype.notifyError = function (err) {
        this.destination.error(err);
    };
    MergeMapToSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            this.destination.complete();
        }
    };
    return MergeMapToSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.MergeMapToSubscriber = MergeMapToSubscriber;
//# sourceMappingURL=mergeMapTo.js.map

/***/ },
/* 792 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var FromObservable_1 = __webpack_require__(379);
var isArray_1 = __webpack_require__(146);
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
function onErrorResumeNext() {
    var nextSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nextSources[_i - 0] = arguments[_i];
    }
    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {
        nextSources = nextSources[0];
    }
    return this.lift(new OnErrorResumeNextOperator(nextSources));
}
exports.onErrorResumeNext = onErrorResumeNext;
/* tslint:enable:max-line-length */
function onErrorResumeNextStatic() {
    var nextSources = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        nextSources[_i - 0] = arguments[_i];
    }
    var source = null;
    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {
        nextSources = nextSources[0];
    }
    source = nextSources.shift();
    return new FromObservable_1.FromObservable(source, null).lift(new OnErrorResumeNextOperator(nextSources));
}
exports.onErrorResumeNextStatic = onErrorResumeNextStatic;
var OnErrorResumeNextOperator = (function () {
    function OnErrorResumeNextOperator(nextSources) {
        this.nextSources = nextSources;
    }
    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));
    };
    return OnErrorResumeNextOperator;
}());
var OnErrorResumeNextSubscriber = (function (_super) {
    __extends(OnErrorResumeNextSubscriber, _super);
    function OnErrorResumeNextSubscriber(destination, nextSources) {
        _super.call(this, destination);
        this.destination = destination;
        this.nextSources = nextSources;
    }
    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype._error = function (err) {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype._complete = function () {
        this.subscribeToNextSource();
    };
    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {
        var next = this.nextSources.shift();
        if (next) {
            this.add(subscribeToResult_1.subscribeToResult(this, next));
        }
        else {
            this.destination.complete();
        }
    };
    return OnErrorResumeNextSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=onErrorResumeNext.js.map

/***/ },
/* 793 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isArray_1 = __webpack_require__(146);
var ArrayObservable_1 = __webpack_require__(232);
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Returns an Observable that mirrors the first source Observable to emit an item
 * from the combination of this Observable and supplied Observables
 * @param {...Observables} ...observables sources used to race for which Observable emits first.
 * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.
 * @method race
 * @owner Observable
 */
function race() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    // if the only argument is an array, it was most likely called with
    // `pair([obs1, obs2, ...])`
    if (observables.length === 1 && isArray_1.isArray(observables[0])) {
        observables = observables[0];
    }
    observables.unshift(this);
    return raceStatic.apply(this, observables);
}
exports.race = race;
function raceStatic() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    // if the only argument is an array, it was most likely called with
    // `pair([obs1, obs2, ...])`
    if (observables.length === 1) {
        if (isArray_1.isArray(observables[0])) {
            observables = observables[0];
        }
        else {
            return observables[0];
        }
    }
    return new ArrayObservable_1.ArrayObservable(observables).lift(new RaceOperator());
}
exports.raceStatic = raceStatic;
var RaceOperator = (function () {
    function RaceOperator() {
    }
    RaceOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new RaceSubscriber(subscriber));
    };
    return RaceOperator;
}());
exports.RaceOperator = RaceOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RaceSubscriber = (function (_super) {
    __extends(RaceSubscriber, _super);
    function RaceSubscriber(destination) {
        _super.call(this, destination);
        this.hasFirst = false;
        this.observables = [];
        this.subscriptions = [];
    }
    RaceSubscriber.prototype._next = function (observable) {
        this.observables.push(observable);
    };
    RaceSubscriber.prototype._complete = function () {
        var observables = this.observables;
        var len = observables.length;
        if (len === 0) {
            this.destination.complete();
        }
        else {
            for (var i = 0; i < len; i++) {
                var observable = observables[i];
                var subscription = subscribeToResult_1.subscribeToResult(this, observable, observable, i);
                if (this.subscriptions) {
                    this.subscriptions.push(subscription);
                    this.add(subscription);
                }
            }
            this.observables = null;
        }
    };
    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (!this.hasFirst) {
            this.hasFirst = true;
            for (var i = 0; i < this.subscriptions.length; i++) {
                if (i !== outerIndex) {
                    var subscription = this.subscriptions[i];
                    subscription.unsubscribe();
                    this.remove(subscription);
                }
            }
            this.subscriptions = null;
        }
        this.destination.next(innerValue);
    };
    return RaceSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.RaceSubscriber = RaceSubscriber;
//# sourceMappingURL=race.js.map

/***/ },
/* 794 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
var async_1 = __webpack_require__(666);
/**
 * @param scheduler
 * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}
 * @method timeInterval
 * @owner Observable
 */
function timeInterval(scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return this.lift(new TimeIntervalOperator(scheduler));
}
exports.timeInterval = timeInterval;
var TimeInterval = (function () {
    function TimeInterval(value, interval) {
        this.value = value;
        this.interval = interval;
    }
    return TimeInterval;
}());
exports.TimeInterval = TimeInterval;
;
var TimeIntervalOperator = (function () {
    function TimeIntervalOperator(scheduler) {
        this.scheduler = scheduler;
    }
    TimeIntervalOperator.prototype.call = function (observer, source) {
        return source._subscribe(new TimeIntervalSubscriber(observer, this.scheduler));
    };
    return TimeIntervalOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TimeIntervalSubscriber = (function (_super) {
    __extends(TimeIntervalSubscriber, _super);
    function TimeIntervalSubscriber(destination, scheduler) {
        _super.call(this, destination);
        this.scheduler = scheduler;
        this.lastTime = 0;
        this.lastTime = scheduler.now();
    }
    TimeIntervalSubscriber.prototype._next = function (value) {
        var now = this.scheduler.now();
        var span = now - this.lastTime;
        this.lastTime = now;
        this.destination.next(new TimeInterval(value, span));
    };
    return TimeIntervalSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=timeInterval.js.map

/***/ },
/* 795 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
var async_1 = __webpack_require__(666);
/**
 * @param scheduler
 * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}
 * @method timestamp
 * @owner Observable
 */
function timestamp(scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return this.lift(new TimestampOperator(scheduler));
}
exports.timestamp = timestamp;
var Timestamp = (function () {
    function Timestamp(value, timestamp) {
        this.value = value;
        this.timestamp = timestamp;
    }
    return Timestamp;
}());
exports.Timestamp = Timestamp;
;
var TimestampOperator = (function () {
    function TimestampOperator(scheduler) {
        this.scheduler = scheduler;
    }
    TimestampOperator.prototype.call = function (observer, source) {
        return source._subscribe(new TimestampSubscriber(observer, this.scheduler));
    };
    return TimestampOperator;
}());
var TimestampSubscriber = (function (_super) {
    __extends(TimestampSubscriber, _super);
    function TimestampSubscriber(destination, scheduler) {
        _super.call(this, destination);
        this.scheduler = scheduler;
    }
    TimestampSubscriber.prototype._next = function (value) {
        var now = this.scheduler.now();
        this.destination.next(new Timestamp(value, now));
    };
    return TimestampSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=timestamp.js.map

/***/ },
/* 796 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncAction_1 = __webpack_require__(689);
var AsyncScheduler_1 = __webpack_require__(690);
var VirtualTimeScheduler = (function (_super) {
    __extends(VirtualTimeScheduler, _super);
    function VirtualTimeScheduler(SchedulerAction, maxFrames) {
        var _this = this;
        if (SchedulerAction === void 0) { SchedulerAction = VirtualAction; }
        if (maxFrames === void 0) { maxFrames = Number.POSITIVE_INFINITY; }
        _super.call(this, SchedulerAction, function () { return _this.frame; });
        this.maxFrames = maxFrames;
        this.frame = 0;
        this.index = -1;
    }
    /**
     * Prompt the Scheduler to execute all of its queued actions, therefore
     * clearing its queue.
     * @return {void}
     */
    VirtualTimeScheduler.prototype.flush = function () {
        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;
        var error, action;
        while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        }
        if (error) {
            while (action = actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    VirtualTimeScheduler.frameTimeFactor = 10;
    return VirtualTimeScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.VirtualTimeScheduler = VirtualTimeScheduler;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var VirtualAction = (function (_super) {
    __extends(VirtualAction, _super);
    function VirtualAction(scheduler, work, index) {
        if (index === void 0) { index = scheduler.index += 1; }
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
        this.index = index;
        this.index = scheduler.index = index;
    }
    VirtualAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        return !this.id ?
            _super.prototype.schedule.call(this, state, delay) : this.add(new VirtualAction(this.scheduler, this.work)).schedule(state, delay);
    };
    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        this.delay = scheduler.frame + delay;
        var actions = scheduler.actions;
        actions.push(this);
        actions.sort(VirtualAction.sortActions);
        return true;
    };
    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        return undefined;
    };
    VirtualAction.sortActions = function (a, b) {
        if (a.delay === b.delay) {
            if (a.index === b.index) {
                return 0;
            }
            else if (a.index > b.index) {
                return 1;
            }
            else {
                return -1;
            }
        }
        else if (a.delay > b.delay) {
            return 1;
        }
        else {
            return -1;
        }
    };
    return VirtualAction;
}(AsyncAction_1.AsyncAction));
exports.VirtualAction = VirtualAction;
//# sourceMappingURL=VirtualTimeScheduler.js.map

/***/ },
/* 797 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var AsapAction_1 = __webpack_require__(1206);
var AsapScheduler_1 = __webpack_require__(1207);
exports.asap = new AsapScheduler_1.AsapScheduler(AsapAction_1.AsapAction);
//# sourceMappingURL=asap.js.map

/***/ },
/* 798 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var QueueAction_1 = __webpack_require__(1208);
var QueueScheduler_1 = __webpack_require__(1209);
exports.queue = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);
//# sourceMappingURL=queue.js.map

/***/ },
/* 799 */
/***/ function(module, exports) {

"use strict";
"use strict";
var SubscriptionLog = (function () {
    function SubscriptionLog(subscribedFrame, unsubscribedFrame) {
        if (unsubscribedFrame === void 0) { unsubscribedFrame = Number.POSITIVE_INFINITY; }
        this.subscribedFrame = subscribedFrame;
        this.unsubscribedFrame = unsubscribedFrame;
    }
    return SubscriptionLog;
}());
exports.SubscriptionLog = SubscriptionLog;
//# sourceMappingURL=SubscriptionLog.js.map

/***/ },
/* 800 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var SubscriptionLog_1 = __webpack_require__(799);
var SubscriptionLoggable = (function () {
    function SubscriptionLoggable() {
        this.subscriptions = [];
    }
    SubscriptionLoggable.prototype.logSubscribedFrame = function () {
        this.subscriptions.push(new SubscriptionLog_1.SubscriptionLog(this.scheduler.now()));
        return this.subscriptions.length - 1;
    };
    SubscriptionLoggable.prototype.logUnsubscribedFrame = function (index) {
        var subscriptionLogs = this.subscriptions;
        var oldSubscriptionLog = subscriptionLogs[index];
        subscriptionLogs[index] = new SubscriptionLog_1.SubscriptionLog(oldSubscriptionLog.subscribedFrame, this.scheduler.now());
    };
    return SubscriptionLoggable;
}());
exports.SubscriptionLoggable = SubscriptionLoggable;
//# sourceMappingURL=SubscriptionLoggable.js.map

/***/ },
/* 801 */
/***/ function(module, exports) {

"use strict";
"use strict";
function applyMixins(derivedCtor, baseCtors) {
    for (var i = 0, len = baseCtors.length; i < len; i++) {
        var baseCtor = baseCtors[i];
        var propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);
        for (var j = 0, len2 = propertyKeys.length; j < len2; j++) {
            var name_1 = propertyKeys[j];
            derivedCtor.prototype[name_1] = baseCtor.prototype[name_1];
        }
    }
}
exports.applyMixins = applyMixins;
//# sourceMappingURL=applyMixins.js.map

/***/ },
/* 802 */
/***/ function(module, exports) {

"use strict";
"use strict";
/* tslint:disable:no-empty */
function noop() { }
exports.noop = noop;
//# sourceMappingURL=noop.js.map

/***/ },
/* 803 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__popover__ = __webpack_require__(804);
/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__popover__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__popover__["b"]; });


//# sourceMappingURL=index.js.map


/***/ },
/* 804 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlPopoverComponent; });
/* harmony export (binding) */ __webpack_require__.d(exports, "b", function() { return MdlPopoverModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var MdlPopoverComponent = (function () {
    function MdlPopoverComponent(changeDetectionRef, elementRef) {
        this.changeDetectionRef = changeDetectionRef;
        this.elementRef = elementRef;
        this.hideOnClick = false;
        this.isVisible = false;
        this.directionUp = false;
    }
    MdlPopoverComponent.prototype.ngAfterViewInit = function () {
        // Add a hide listener to native element
        this.elementRef.nativeElement.addEventListener('hide', this.hide.bind(this));
    };
    MdlPopoverComponent.prototype.onDocumentClick = function (event) {
        if (this.isVisible &&
            (this.hideOnClick || !this.elementRef.nativeElement.contains(event.target))) {
            this.hide();
        }
    };
    MdlPopoverComponent.prototype.ngOnDestroy = function () {
        this.elementRef.nativeElement.removeEventListener('hide');
    };
    MdlPopoverComponent.prototype.toggle = function (event) {
        if (this.isVisible) {
            this.hide();
        }
        else {
            this.hideAllPopovers();
            this.show(event);
        }
    };
    MdlPopoverComponent.prototype.hide = function () {
        this.isVisible = false;
        this.changeDetectionRef.markForCheck();
    };
    MdlPopoverComponent.prototype.hideAllPopovers = function () {
        var nodeList = document.querySelectorAll('.mdl-popover.is-visible');
        for (var i = 0; i < nodeList.length; ++i) {
            nodeList[i].dispatchEvent(new Event('hide'));
        }
    };
    MdlPopoverComponent.prototype.show = function (event) {
        event.stopPropagation();
        this.isVisible = true;
        this.updateDirection(event);
    };
    MdlPopoverComponent.prototype.updateDirection = function (event) {
        var _this = this;
        var nativeEl = this.elementRef.nativeElement;
        var targetRect = event.target.getBoundingClientRect();
        var viewHeight = window.innerHeight;
        setTimeout(function () {
            var height = nativeEl.offsetHeight;
            if (height) {
                var spaceAvailable = {
                    top: targetRect.top,
                    bottom: viewHeight - targetRect.bottom
                };
                _this.directionUp = spaceAvailable.bottom < height;
                _this.changeDetectionRef.markForCheck();
            }
        });
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('hide-on-click'), 
        __metadata('design:type', Boolean)
    ], MdlPopoverComponent.prototype, "hideOnClick", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["HostBinding"])('class.is-visible'), 
        __metadata('design:type', Object)
    ], MdlPopoverComponent.prototype, "isVisible", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["HostBinding"])('class.direction-up'), 
        __metadata('design:type', Object)
    ], MdlPopoverComponent.prototype, "directionUp", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"])('document:click', ['$event']), 
        __metadata('design:type', Function), 
        __metadata('design:paramtypes', [Event]), 
        __metadata('design:returntype', void 0)
    ], MdlPopoverComponent.prototype, "onDocumentClick", null);
    MdlPopoverComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({selector: 'mdl-popover',
            host: {
                '[class.mdl-popover]': 'true'
            },
            template: "<ng-content></ng-content> ",
            encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None,
        }), 
        __metadata('design:paramtypes', [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ChangeDetectorRef"], __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"]])
    ], MdlPopoverComponent);
    return MdlPopoverComponent;
}());
var MdlPopoverModule = (function () {
    function MdlPopoverModule() {
    }
    MdlPopoverModule.forRoot = function () {
        return {
            ngModule: MdlPopoverModule,
            providers: []
        };
    };
    MdlPopoverModule = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [],
            exports: [MdlPopoverComponent],
            declarations: [MdlPopoverComponent],
        }), 
        __metadata('design:paramtypes', [])
    ], MdlPopoverModule);
    return MdlPopoverModule;
}());

//# sourceMappingURL=popover.js.map


/***/ },
/* 805 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__option__ = __webpack_require__(724);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__select__ = __webpack_require__(806);
/* unused harmony namespace reexport */
/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, "a", function() { return __WEBPACK_IMPORTED_MODULE_1__select__["a"]; });



//# sourceMappingURL=index.js.map


/***/ },
/* 806 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(371);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__popover_index__ = __webpack_require__(803);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__option__ = __webpack_require__(724);
/* unused harmony export SearchableComponent */
/* unused harmony export MdlSelectComponent */
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlSelectModule; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var uniq = function (array) { return Array.from(new Set(array)); };
function randomId() {
    var S4 = function () { return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1); };
    return (S4() + S4());
}
var MDL_SELECT_VALUE_ACCESSOR = {
    provide: __WEBPACK_IMPORTED_MODULE_1__angular_forms__["a" /* NG_VALUE_ACCESSOR */],
    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["forwardRef"])(function () { return MdlSelectComponent; }),
    multi: true
};
var SearchableComponent = (function () {
    function SearchableComponent(searchTimeout) {
        if (searchTimeout === void 0) { searchTimeout = 300; }
        this.clearTimeout = null;
        this.query = '';
        this.searchTimeout = searchTimeout;
    }
    SearchableComponent.prototype.updateSearchQuery = function (event) {
        var _this = this;
        if (this.clearTimeout) {
            clearTimeout(this.clearTimeout);
        }
        this.clearTimeout = setTimeout(function () {
            _this.query = '';
        }, this.searchTimeout);
        this.query += String.fromCharCode(event.keyCode).toLowerCase();
    };
    SearchableComponent.prototype.getSearchQuery = function () {
        return this.query;
    };
    return SearchableComponent;
}());
var MdlSelectComponent = (function (_super) {
    __extends(MdlSelectComponent, _super);
    function MdlSelectComponent(changeDetectionRef) {
        _super.call(this);
        this.changeDetectionRef = changeDetectionRef;
        this.disabled = false;
        this.placeholder = '';
        this.multiple = false;
        this.change = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"](true);
        this.text = '';
        this.textByValue = {};
        this.onChange = Function.prototype;
        this.onTouched = Function.prototype;
        this.focused = false;
        this.textfieldId = "mdl-textfield-" + randomId();
    }
    MdlSelectComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.bindOptions();
        this.renderValue(this.ngModel);
        this.optionComponents.changes.subscribe(function () { return _this.bindOptions(); });
    };
    MdlSelectComponent.prototype.onKeydown = function ($event) {
        if (!this.disabled && this.popoverComponent.isVisible) {
            var closeKeys = ["Escape", "Tab", "Enter"];
            var closeKeyCodes = [13, 27, 9];
            if (closeKeyCodes.indexOf($event.keyCode) != -1 || ($event.key && closeKeys.indexOf($event.key) != -1)) {
                this.popoverComponent.hide();
            }
            else if (!this.multiple) {
                if ($event.keyCode == 38 || ($event.key && $event.key == "ArrowUp")) {
                    this.onArrowUp($event);
                }
                else if ($event.keyCode == 40 || ($event.key && $event.key == "ArrowDown")) {
                    this.onArrowDown($event);
                }
                else if ($event.keyCode >= 31 && $event.keyCode <= 90) {
                    this.onCharacterKeydown($event);
                }
            }
        }
    };
    MdlSelectComponent.prototype.onCharacterKeydown = function ($event) {
        var _this = this;
        this.updateSearchQuery($event);
        var optionsList = this.optionComponents.toArray();
        var filteredOptions = optionsList.filter(function (option) {
            return option.text.toLowerCase().startsWith(_this.getSearchQuery());
        });
        var selectedOption = optionsList.find(function (option) { return option.selected; });
        if (filteredOptions.length > 0) {
            var selectedOptionInFiltered = filteredOptions.indexOf(selectedOption) != -1;
            if (!selectedOptionInFiltered && !filteredOptions[0].selected) {
                this.onSelect($event, filteredOptions[0].value);
            }
        }
        $event.preventDefault();
    };
    MdlSelectComponent.prototype.onArrowUp = function ($event) {
        var arr = this.optionComponents.toArray();
        for (var i = 0; i < arr.length; i++) {
            if (arr[i].selected) {
                if (i - 1 >= 0) {
                    this.onSelect($event, arr[i - 1].value);
                }
                break;
            }
        }
        $event.preventDefault();
    };
    MdlSelectComponent.prototype.onArrowDown = function ($event) {
        var arr = this.optionComponents.toArray();
        var selectedOption = arr.find(function (option) { return option.selected; });
        if (selectedOption) {
            var selectedOptionIndex = arr.indexOf(selectedOption);
            if (selectedOptionIndex + 1 < arr.length) {
                this.onSelect($event, arr[selectedOptionIndex + 1].value);
            }
        }
        else {
            this.onSelect($event, arr[0].value);
        }
        $event.preventDefault();
    };
    MdlSelectComponent.prototype.addFocus = function () {
        this.focused = true;
    };
    MdlSelectComponent.prototype.removeFocus = function () {
        this.focused = false;
    };
    MdlSelectComponent.prototype.isEmpty = function () {
        return this.multiple ? !this.ngModel.length : !this.ngModel;
    };
    // rebind options and reset value in connected select
    MdlSelectComponent.prototype.reset = function (resetValue) {
        if (resetValue === void 0) { resetValue = true; }
        if (resetValue && !this.isEmpty()) {
            this.ngModel = this.multiple ? [] : '';
            this.onChange(this.ngModel);
            this.change.emit(this.ngModel);
            this.renderValue(this.ngModel);
        }
    };
    MdlSelectComponent.prototype.bindOptions = function () {
        var _this = this;
        this.optionComponents.forEach(function (selectOptionComponent) {
            selectOptionComponent.setMultiple(_this.multiple);
            selectOptionComponent.onSelect = _this.onSelect.bind(_this);
            if (selectOptionComponent.value != null) {
                _this.textByValue[_this.stringifyValue(selectOptionComponent.value)] = selectOptionComponent.text;
            }
        });
    };
    MdlSelectComponent.prototype.renderValue = function (value) {
        var _this = this;
        if (this.multiple) {
            this.text = value.map(function (value) { return _this.textByValue[_this.stringifyValue(value)]; }).join(', ');
        }
        else {
            this.text = this.textByValue[this.stringifyValue(value)] || '';
        }
        this.changeDetectionRef.detectChanges();
        if (this.optionComponents) {
            this.optionComponents.forEach(function (selectOptionComponent) {
                selectOptionComponent.updateSelected(value);
            });
        }
    };
    MdlSelectComponent.prototype.stringifyValue = function (value) {
        switch (typeof value) {
            case 'number': return String(value);
            case 'object': return JSON.stringify(value);
            default: return (!!value) ? String(value) : '';
        }
    };
    MdlSelectComponent.prototype.toggle = function ($event) {
        if (!this.disabled) {
            this.popoverComponent.toggle($event);
            $event.stopPropagation();
        }
    };
    MdlSelectComponent.prototype.open = function ($event) {
        if (!this.disabled && !this.popoverComponent.isVisible) {
            this.popoverComponent.show($event);
        }
    };
    MdlSelectComponent.prototype.close = function ($event) {
        if (!this.disabled && this.popoverComponent.isVisible) {
            this.popoverComponent.hide();
        }
    };
    MdlSelectComponent.prototype.onSelect = function ($event, value) {
        if (this.multiple) {
            // prevent popup close on click inside popover when selecting multiple
            $event.stopPropagation();
        }
        else {
            var popover = this.popoverComponent.elementRef.nativeElement;
            var list = popover.querySelector(".mdl-list");
            var option_1 = null;
            this.optionComponents.forEach(function (o) {
                // not great for long lists because break is not available
                if (o.value == value) {
                    option_1 = o.contentWrapper.nativeElement;
                }
            });
            if (option_1) {
                if (option_1.offsetTop > popover.clientHeight) {
                    list.scrollTop += option_1.parentElement.clientHeight;
                }
                else if (option_1.offsetTop < list.scrollTop) {
                    list.scrollTop -= option_1.parentElement.clientHeight;
                }
            }
        }
        this.writeValue(value);
        this.change.emit(this.ngModel);
    };
    MdlSelectComponent.prototype.writeValue = function (value) {
        if (this.multiple) {
            this.ngModel = this.ngModel || [];
            if (!value || this.ngModel === value) {
            }
            else if (Array.isArray(value)) {
                this.ngModel = uniq(this.ngModel.concat(value));
            }
            else if (this.ngModel.indexOf(value) != -1) {
                this.ngModel = this.ngModel.filter(function (v) { return v !== value; }).slice();
            }
            else if (!!value) {
                this.ngModel = this.ngModel.concat([value]);
            }
        }
        else {
            this.ngModel = value;
        }
        this.onChange(this.ngModel);
        this.renderValue(this.ngModel);
    };
    MdlSelectComponent.prototype.registerOnChange = function (fn) {
        this.onChange = fn;
    };
    MdlSelectComponent.prototype.registerOnTouched = function (fn) {
        this.onTouched = fn;
    };
    MdlSelectComponent.prototype.getLabelVisibility = function () {
        return this.isFloatingLabel == null || (this.isFloatingLabel != null && this.text != null && this.text.length > 0) ? "block" : "none";
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Object)
    ], MdlSelectComponent.prototype, "ngModel", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Boolean)
    ], MdlSelectComponent.prototype, "disabled", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('floating-label'), 
        __metadata('design:type', Object)
    ], MdlSelectComponent.prototype, "isFloatingLabel", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', String)
    ], MdlSelectComponent.prototype, "placeholder", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Boolean)
    ], MdlSelectComponent.prototype, "multiple", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(), 
        __metadata('design:type', __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
    ], MdlSelectComponent.prototype, "change", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_3__popover_index__["a" /* MdlPopoverComponent */]), 
        __metadata('design:type', __WEBPACK_IMPORTED_MODULE_3__popover_index__["a" /* MdlPopoverComponent */])
    ], MdlSelectComponent.prototype, "popoverComponent", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ContentChildren"])(__WEBPACK_IMPORTED_MODULE_4__option__["a" /* MdlOptionComponent */]), 
        __metadata('design:type', __WEBPACK_IMPORTED_MODULE_0__angular_core__["QueryList"])
    ], MdlSelectComponent.prototype, "optionComponents", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"])('document:keydown', ['$event']), 
        __metadata('design:type', Function), 
        __metadata('design:paramtypes', [KeyboardEvent]), 
        __metadata('design:returntype', void 0)
    ], MdlSelectComponent.prototype, "onKeydown", null);
    MdlSelectComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({selector: 'mdl-select',
            host: {
                '[class.mdl-select]': 'true',
                '[class.mdl-select--floating-label]': 'isFloatingLabel != null'
            },
            template: "<div class=\"mdl-textfield is-upgraded has-placeholder\" [class.is-focused]=\"this.popoverComponent.isVisible || this.focused\" [class.is-disabled]=\"this.disabled\" [class.is-dirty]=\"text != null && text.length > 0\"> <span [attr.tabindex]=\"!this.disabled ? 0 : null\" (focus)=\"open($event);addFocus();\" (blur)=\"removeFocus()\"> <!-- don't want click to also trigger focus --> </span> <input readonly tabindex=\"-1\" [placeholder]=\"placeholder\" class=\"mdl-textfield__input\" (click)=\"toggle($event)\" [attr.id]=\"textfieldId\" [value]=\"text\"> <span class=\"mdl-select__toggle material-icons\" (click)=\"toggle($event)\"> keyboard_arrow_down </span> <label class=\"mdl-textfield__label\" [attr.for]=\"textfieldId\">{{ placeholder }}</label> <span class=\"mdl-textfield__error\"></span> <mdl-popover hide-on-click=\"!multiple\" [style.width.%]=\"100\"> <div class=\"mdl-list mdl-shadow--6dp\"> <ng-content></ng-content> </div> </mdl-popover> </div> ",
            encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None,
            providers: [MDL_SELECT_VALUE_ACCESSOR]
        }), 
        __metadata('design:paramtypes', [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ChangeDetectorRef"]])
    ], MdlSelectComponent);
    return MdlSelectComponent;
}(SearchableComponent));
var MdlSelectModule = (function () {
    function MdlSelectModule() {
    }
    MdlSelectModule.forRoot = function () {
        return {
            ngModule: MdlSelectModule,
            providers: []
        };
    };
    MdlSelectModule = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [
                __WEBPACK_IMPORTED_MODULE_2__angular_common__["CommonModule"],
                __WEBPACK_IMPORTED_MODULE_3__popover_index__["b" /* MdlPopoverModule */]
            ],
            exports: [
                MdlSelectComponent,
                __WEBPACK_IMPORTED_MODULE_4__option__["a" /* MdlOptionComponent */]
            ],
            declarations: [
                MdlSelectComponent,
                __WEBPACK_IMPORTED_MODULE_4__option__["a" /* MdlOptionComponent */]
            ],
            providers: [
                MDL_SELECT_VALUE_ACCESSOR
            ]
        }), 
        __metadata('design:paramtypes', [])
    ], MdlSelectModule);
    return MdlSelectModule;
}());

//# sourceMappingURL=select.js.map


/***/ },
/* 807 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_router__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__attendance_component__ = __webpack_require__(725);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return routing; });


var attendanceRoutes = [
    {
        path: '',
        redirectTo: 'all',
        terminal: true
    },
    {
        path: ':id',
        component: __WEBPACK_IMPORTED_MODULE_1__attendance_component__["a" /* AttendanceComponent */]
    }
];
var routing = __WEBPACK_IMPORTED_MODULE_0__angular_router__["b" /* RouterModule */].forChild(attendanceRoutes);
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/attendance.routing.js.map

/***/ },
/* 808 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_angular2_mdl__ = __webpack_require__(693);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_children_manager_service__ = __webpack_require__(684);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_models_general_model__ = __webpack_require__(749);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_models_child_model__ = __webpack_require__(685);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_moment__ = __webpack_require__(668);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_moment__);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return PresenceBarComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






// TODO: merge this component into attendance component
var PresenceBarComponent = (function () {
    function PresenceBarComponent(mdlSnackbarService, childrenManager) {
        this.mdlSnackbarService = mdlSnackbarService;
        this.childrenManager = childrenManager;
        this.attendanceStates = __WEBPACK_IMPORTED_MODULE_3__shared_models_general_model__["a" /* AttendanceStates */];
    }
    PresenceBarComponent.prototype.ngOnInit = function () { };
    PresenceBarComponent.prototype.updateAttendance = function (action) {
        var _this = this;
        var time = (new Date()).getTime();
        this.childrenManager.updateAttendance(this.child, action, time).toPromise().then(function (res) {
            var actionName = __WEBPACK_IMPORTED_MODULE_3__shared_models_general_model__["a" /* AttendanceStates */][action];
            var childName = _this.child.name;
            var parsedTime = __WEBPACK_IMPORTED_MODULE_5_moment__(time).format('HH:mm A');
            if (actionName == 'IN') {
                _this.child.attendanceStateInTime = res.json().time;
            }
            else if (actionName == 'OUT') {
                _this.child.attendanceStateOutTime = res.json().time;
            }
            else {
                _this.child.attendanceStateInTime = null;
                _this.child.attendanceStateOutTime = null;
            }
            if (_this.child.attendanceStateInTime && _this.child.attendanceStateOutTime) {
                _this.child.attendanceState = _this.child.attendanceStateInTime > _this.child.attendanceStateOutTime ? 'IN' : 'OUT';
            }
            else if (_this.child.attendanceStateInTime) {
                _this.child.attendanceState = 'IN';
            }
            else if (_this.child.attendanceStateOutTime) {
                _this.child.attendanceState = 'OUT';
            }
            else {
                _this.child.attendanceState = 'ABSENT';
            }
            _this.mdlSnackbarService
                .showToast(childName + " marked as " + actionName + " at " + parsedTime);
        }, console.error);
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', (typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_4__shared_models_child_model__["a" /* Child */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_4__shared_models_child_model__["a" /* Child */]) === 'function' && _a) || Object)
    ], PresenceBarComponent.prototype, "child", void 0);
    PresenceBarComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-presence-bar',
            template: __webpack_require__(909),
            styles: [__webpack_require__(862)]
        }), 
        __metadata('design:paramtypes', [(typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1_angular2_mdl__["MdlSnackbarService"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1_angular2_mdl__["MdlSnackbarService"]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_2__shared_children_manager_service__["a" /* ChildrenManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__shared_children_manager_service__["a" /* ChildrenManagerService */]) === 'function' && _c) || Object])
    ], PresenceBarComponent);
    return PresenceBarComponent;
    var _a, _b, _c;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/presence-bar.component.js.map

/***/ },
/* 809 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment__ = __webpack_require__(668);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_moment__);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return TimepickerComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var TimepickerComponent = (function () {
    function TimepickerComponent() {
        this.timeChanged = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.innerDate = __WEBPACK_IMPORTED_MODULE_1_moment__();
    }
    TimepickerComponent.prototype.ngOnChanges = function (changes) {
        if (changes.currentTime.currentValue) {
            this.innerDate = __WEBPACK_IMPORTED_MODULE_1_moment__(changes.currentTime.currentValue);
            this.updateTimeout();
        }
    };
    TimepickerComponent.prototype.parseDate = function () {
        return this.innerDate.format('HH:mm A');
    };
    TimepickerComponent.prototype.setTime = function () {
        this.timeChanged.emit(+this.innerDate.format('x'));
    };
    TimepickerComponent.prototype.addMinutes = function () {
        this.innerDate.add('5', 'minutes');
        this.updateTimeout();
    };
    TimepickerComponent.prototype.subtractMinutes = function () {
        this.innerDate.subtract('5', 'minutes');
        this.updateTimeout();
    };
    TimepickerComponent.prototype.updateTimeout = function () {
        var _this = this;
        if (this.timeout != null) {
            clearTimeout(this.timeout);
        }
        this.timeout = setTimeout(function () { return _this.setTime(); }, 3000);
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Object)
    ], TimepickerComponent.prototype, "currentTime", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(), 
        __metadata('design:type', (typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]) === 'function' && _a) || Object)
    ], TimepickerComponent.prototype, "timeChanged", void 0);
    TimepickerComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-timepicker',
            template: __webpack_require__(910),
            styles: [__webpack_require__(863)]
        }), 
        __metadata('design:paramtypes', [])
    ], TimepickerComponent);
    return TimepickerComponent;
    var _a;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/timepicker.component.js.map

/***/ },
/* 810 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_router__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dashboard_info_component__ = __webpack_require__(726);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return routing; });


var dashboardInfoRouting = [
    {
        path: '',
        component: __WEBPACK_IMPORTED_MODULE_1__dashboard_info_component__["a" /* DashboardInfoComponent */]
    }
];
var routing = __WEBPACK_IMPORTED_MODULE_0__angular_router__["b" /* RouterModule */].forChild(dashboardInfoRouting);
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/dashboard-info.routing.js.map

/***/ },
/* 811 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_router__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dashboard_component__ = __webpack_require__(727);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return dashboardRouting; });


var dashboardRoutes = [
    {
        path: '',
        component: __WEBPACK_IMPORTED_MODULE_1__dashboard_component__["a" /* DashboardComponent */],
        children: [{
                path: '',
                redirectTo: 'info',
            },
            {
                path: 'info',
                loadChildren: 'app/dashboard-info/dashboard-info.module#DashboardInfoModule'
            }, {
                path: 'subventions',
                loadChildren: 'app/subventions/subventions.module#SubventionsModule'
            }, {
                path: 'settings',
                loadChildren: 'app/settings/settings.module#SettingsModule'
            }, {
                path: 'attendance',
                loadChildren: 'app/attendance/attendance.module#AttendanceModule'
            }, {
                path: 'reports',
                loadChildren: 'app/reports/reports.module#ReportsModule'
            }, {
                path: 'easy-fees',
                loadChildren: 'app/easy-fees/easy-fees.module#EasyFeesModule'
            }, {
                path: 'occupancy',
                loadChildren: 'app/occupancy/occupancy.module#OccupancyModule'
            }]
    }
];
var dashboardRouting = __WEBPACK_IMPORTED_MODULE_0__angular_router__["b" /* RouterModule */].forChild(dashboardRoutes);
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/dashboard.routing.js.map

/***/ },
/* 812 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return AccordionPaymentsViewComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var AccordionPaymentsViewComponent = (function () {
    function AccordionPaymentsViewComponent() {
        this.showPopup = false;
    }
    AccordionPaymentsViewComponent.prototype.ngOnInit = function () {
    };
    AccordionPaymentsViewComponent.prototype.printMandate = function () {
        this.showPopup = true;
    };
    AccordionPaymentsViewComponent.prototype.popupClosed = function () {
        this.showPopup = false;
    };
    AccordionPaymentsViewComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-accordion-payments-view',
            template: __webpack_require__(913),
            styles: [__webpack_require__(866), __webpack_require__(696)]
        }), 
        __metadata('design:paramtypes', [])
    ], AccordionPaymentsViewComponent);
    return AccordionPaymentsViewComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/accordion-payments-view.component.js.map

/***/ },
/* 813 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return ChooseOrgTypeComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var ChooseOrgTypeComponent = (function () {
    function ChooseOrgTypeComponent() {
        this.closeModal = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    ChooseOrgTypeComponent.prototype.ngOnInit = function () {
    };
    ChooseOrgTypeComponent.prototype.setOrgType = function (key) {
        this.closeModal.emit(key);
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])('closeModal'), 
        __metadata('design:type', Object)
    ], ChooseOrgTypeComponent.prototype, "closeModal", void 0);
    ChooseOrgTypeComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-choose-org-type',
            template: __webpack_require__(914),
            styles: [__webpack_require__(867)]
        }), 
        __metadata('design:paramtypes', [])
    ], ChooseOrgTypeComponent);
    return ChooseOrgTypeComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/choose-org-type.component.js.map

/***/ },
/* 814 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__popup_animations__ = __webpack_require__(815);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return PopupPrintMandateComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var PopupPrintMandateComponent = (function () {
    function PopupPrintMandateComponent() {
        this.showPopup = false;
        this.closePopup = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    PopupPrintMandateComponent.prototype.ngOnInit = function () {
    };
    PopupPrintMandateComponent.prototype.destroy = function () {
        this.closePopup.emit('close');
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Boolean)
    ], PopupPrintMandateComponent.prototype, "showPopup", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(), 
        __metadata('design:type', Object)
    ], PopupPrintMandateComponent.prototype, "closePopup", void 0);
    PopupPrintMandateComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-popup-print-mandate',
            template: __webpack_require__(915),
            styles: [__webpack_require__(868), __webpack_require__(696)],
            animations: __WEBPACK_IMPORTED_MODULE_1__popup_animations__["a" /* popupAnimations */].slice()
        }), 
        __metadata('design:paramtypes', [])
    ], PopupPrintMandateComponent);
    return PopupPrintMandateComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/popup-print-mandate.component.js.map

/***/ },
/* 815 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return popupAnimations; });

var animationCurve = 'cubic-bezier(0.47,0,0.745,0.715)';
var timingCurve = function (time) {
    if (time === void 0) { time = .2; }
    return time + 's ' + animationCurve;
};
var popupAnimations = [
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["trigger"])('modal', [
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["state"])('true', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ transform: 'none' })),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["state"])('false', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ transform: 'translateY(-80vh)' })),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["transition"])('0 => 1', [
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["animate"])(timingCurve(.3), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ transform: 'none', opacity: 1 }))
        ]),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["transition"])('1 => 0', [
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ opacity: 0.3 }),
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["animate"])(timingCurve(), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ transform: 'translateY(-80vh)', opacity: 0 }))
        ])
    ]),
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["trigger"])('backdrop', [
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["state"])('true', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ visibility: 'visible' })),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["state"])('false', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ visibility: 'hidden' })),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["transition"])('0 => 1', [
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["animate"])(timingCurve(), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ opacity: 1 }))
        ]),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["transition"])('1 => 0', [
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["animate"])(timingCurve(), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ opacity: 0 }))
        ])
    ])
];
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/popup.animations.js.map

/***/ },
/* 816 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_router__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__easy_fees_component__ = __webpack_require__(732);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__easy_fees_intro_easy_fees_intro_component__ = __webpack_require__(729);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__easy_fees_dashboard_easy_fees_dashboard_component__ = __webpack_require__(728);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__easy_fees_setup_easy_fees_setup_component__ = __webpack_require__(731);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return routing; });





var easyFeesRoutes = [
    {
        path: '',
        component: __WEBPACK_IMPORTED_MODULE_1__easy_fees_component__["a" /* EasyFeesComponent */],
        children: [
            { path: '', redirectTo: 'intro', terminal: true },
            { path: 'intro', component: __WEBPACK_IMPORTED_MODULE_2__easy_fees_intro_easy_fees_intro_component__["a" /* EasyFeesIntroComponent */] },
            { path: 'view', component: __WEBPACK_IMPORTED_MODULE_3__easy_fees_dashboard_easy_fees_dashboard_component__["a" /* EasyFeesDashboardComponent */] },
            { path: 'setup', component: __WEBPACK_IMPORTED_MODULE_4__easy_fees_setup_easy_fees_setup_component__["a" /* EasyFeesSetupComponent */] }
        ]
    }
];
var routing = __WEBPACK_IMPORTED_MODULE_0__angular_router__["b" /* RouterModule */].forChild(easyFeesRoutes);
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/easy-fees.routing.js.map

/***/ },
/* 817 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_router__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__landing_page_component__ = __webpack_require__(733);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return routing; });


var landingPageRouting = [
    {
        path: '',
        component: __WEBPACK_IMPORTED_MODULE_1__landing_page_component__["a" /* LandingPageComponent */]
    }
];
var routing = __WEBPACK_IMPORTED_MODULE_0__angular_router__["b" /* RouterModule */].forChild(landingPageRouting);
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/landing-page.routing.js.map

/***/ },
/* 818 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_profile_manager_service__ = __webpack_require__(679);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return LoginCardComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var LoginCardComponent = (function () {
    function LoginCardComponent(profileManager, router) {
        this.profileManager = profileManager;
        this.router = router;
    }
    LoginCardComponent.prototype.ngOnInit = function () { };
    LoginCardComponent.prototype.login = function () {
        var _this = this;
        if (this.username && this.password) {
            this.loading = true;
            this.profileManager.login(this.username, this.password).take(1).subscribe(function (profile) {
                _this.router.navigate(['dashboard']);
            }, function (error) {
                _this.loading = false;
                _this.errorMessage = error.json().message;
            });
        }
        else {
            this.errorMessage = 'Please fill in the credentials';
        }
    };
    LoginCardComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-login-card',
            template: __webpack_require__(921)
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__shared_profile_manager_service__["a" /* ProfileManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__shared_profile_manager_service__["a" /* ProfileManagerService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__angular_router__["d" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_router__["d" /* Router */]) === 'function' && _b) || Object])
    ], LoginCardComponent);
    return LoginCardComponent;
    var _a, _b;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/login-card.component.js.map

/***/ },
/* 819 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_http_client_service__ = __webpack_require__(669);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(371);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return RegisterCardComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var RegisterCardComponent = (function () {
    function RegisterCardComponent(http, router, fb) {
        this.http = http;
        this.router = router;
        this.fb = fb;
        this.email = new __WEBPACK_IMPORTED_MODULE_3__angular_forms__["d" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].compose([
            __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required,
            __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].pattern('^[a-z]+[a-z0-9._]+@[a-z]+\.[a-z.]{2,5}$')
        ]));
        this.name = new __WEBPACK_IMPORTED_MODULE_3__angular_forms__["d" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required);
        this.password = new __WEBPACK_IMPORTED_MODULE_3__angular_forms__["d" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].minLength(6));
        this.businessName = new __WEBPACK_IMPORTED_MODULE_3__angular_forms__["d" /* FormControl */]('', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["f" /* Validators */].required);
        this.registerForm = this.fb.group({
            email: this.email,
            name: this.name,
            password: this.password,
            businessName: this.businessName
        });
    }
    RegisterCardComponent.prototype.ngOnInit = function () {
    };
    RegisterCardComponent.prototype.register = function () {
        var _this = this;
        if (this.registerForm.valid && !this.loading) {
            this.loading = true;
            var _a = this.registerForm.value, email = _a.email, password = _a.password, name = _a.name, businessName = _a.businessName;
            this.http.requestRegister(email, password, name, businessName).subscribe(function (res) {
                _this.loading = false;
                if (res.status === 200) {
                    _this.router.navigate(['verify']);
                }
            }, function (error) {
                _this.loading = false;
                if (error.status === 400) {
                    _this.errorMessage = error.json().message;
                }
                else {
                    _this.errorMessage = 'Bad response from the serve :/ Please try again later.';
                }
            });
        }
        return;
    };
    RegisterCardComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-register-card',
            template: __webpack_require__(922),
            styles: [__webpack_require__(873)],
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__shared_http_client_service__["a" /* HttpClientService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__shared_http_client_service__["a" /* HttpClientService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__angular_router__["d" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_router__["d" /* Router */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_3__angular_forms__["h" /* FormBuilder */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__angular_forms__["h" /* FormBuilder */]) === 'function' && _c) || Object])
    ], RegisterCardComponent);
    return RegisterCardComponent;
    var _a, _b, _c;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/register-card.component.js.map

/***/ },
/* 820 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__occupancy_service__ = __webpack_require__(736);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__occupancy_modal_occupancy_modal_animations__ = __webpack_require__(683);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__occupancy_model__ = __webpack_require__(678);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return AddStaffComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var AddStaffComponent = (function () {
    function AddStaffComponent(OccupancyService) {
        this.OccupancyService = OccupancyService;
        this.closeModal = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.title = "";
        this.rooms = [];
        this.qualification = [];
        this.showOccupancyModal = false;
        this.isEdit = false;
        this.ageGroup = [];
        this.errorMessage = "";
        this.saving = false;
        /******************** fake data ********************* */
        this.ageGroup = [
            { id: "1", serviceType: 0, name: "0-1 years", adultNo: 1, childNo: 3 },
            { id: "2", serviceType: 0, name: "1-2.5 years", adultNo: 1, childNo: 5 },
            { id: "3", serviceType: 0, name: "2.5-6 years", adultNo: 1, childNo: 11 },
            { id: "4", serviceType: 1, name: "0-1 years", adultNo: 1, childNo: 3 },
            { id: "5", serviceType: 1, name: "1-2 years", adultNo: 1, childNo: 5 },
            { id: "6", serviceType: 1, name: "2-3 years", adultNo: 1, childNo: 6 },
            { id: "7", serviceType: 1, name: "3-6 years", adultNo: 1, childNo: 8 }
        ];
    }
    AddStaffComponent.prototype.ngOnInit = function () {
        this.staff = new __WEBPACK_IMPORTED_MODULE_3__occupancy_model__["a" /* Staff */]({ id: "", name: "", qualification: "0", startdate: "", enddate: "", assignedRoom: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } } });
    };
    AddStaffComponent.prototype.ngOnChanges = function () {
        this.errorMessage = "";
    };
    AddStaffComponent.prototype.destroy = function () {
        this.closeModal.emit('close');
    };
    //save staff
    AddStaffComponent.prototype.saveStaff = function () {
        var _this = this;
        if (this.isValid() && !this.saving) {
            this.saving = true;
            if (this.isEdit) {
                /**************************
                 * update fake data
                 */
                this.OccupancyService.updateStaff(this.staff);
                this.saving = false;
                this.destroy();
            }
            else {
                /**************************
                 * add fake data
                 */
                this.OccupancyService.addStaff(this.staff);
                this.saving = false;
                this.destroy();
            }
            //a staff assign to room////////////////////////////////////////////////////////////////////////////
            this.rooms.forEach(function (room, index) {
                var _staff = room.assignedStaff.find(function (staff) { return staff.id === _this.staff.id; });
                //if already exist, delete in assignedStaff.
                if (_staff != undefined) {
                    room.assignedStaff.splice(room.assignedStaff.indexOf(_staff), 1);
                }
                //after check, assign to room
                if (_this.checkRoom(_this.staff, room.id)) {
                    _this.rooms[index].assignedStaff.push(_this.staff);
                }
                //count capacity  
                var childCountByRoomID = _this.ageGroup.find(function (age) { return age.id === room.ageGroup; }).childNo;
                if (room.assignedStaff.length > 0) {
                    var mon_am_1 = 0;
                    var mon_pm_1 = 0;
                    var tue_am_1 = 0;
                    var tue_pm_1 = 0;
                    var wed_am_1 = 0;
                    var wed_pm_1 = 0;
                    var thu_am_1 = 0;
                    var thu_pm_1 = 0;
                    var fri_am_1 = 0;
                    var fri_pm_1 = 0;
                    room.assignedStaff.forEach(function (staff) {
                        if (staff.assignedRoom.mon.am == room.id)
                            mon_am_1++;
                        if (staff.assignedRoom.mon.pm == room.id)
                            mon_pm_1++;
                        if (staff.assignedRoom.tue.am == room.id)
                            tue_am_1++;
                        if (staff.assignedRoom.tue.pm == room.id)
                            tue_pm_1++;
                        if (staff.assignedRoom.wed.am == room.id)
                            wed_am_1++;
                        if (staff.assignedRoom.wed.pm == room.id)
                            wed_pm_1++;
                        if (staff.assignedRoom.thu.am == room.id)
                            thu_am_1++;
                        if (staff.assignedRoom.thu.pm == room.id)
                            thu_pm_1++;
                        if (staff.assignedRoom.fri.am == room.id)
                            fri_am_1++;
                        if (staff.assignedRoom.fri.pm == room.id)
                            fri_pm_1++;
                    });
                    _this.rooms[index].capacity.mon.am = (mon_am_1 * childCountByRoomID).toString();
                    _this.rooms[index].capacity.mon.pm = (mon_pm_1 * childCountByRoomID).toString();
                    _this.rooms[index].capacity.tue.am = (tue_am_1 * childCountByRoomID).toString();
                    _this.rooms[index].capacity.tue.pm = (tue_pm_1 * childCountByRoomID).toString();
                    _this.rooms[index].capacity.wed.am = (wed_am_1 * childCountByRoomID).toString();
                    _this.rooms[index].capacity.wed.pm = (wed_pm_1 * childCountByRoomID).toString();
                    _this.rooms[index].capacity.thu.am = (thu_am_1 * childCountByRoomID).toString();
                    _this.rooms[index].capacity.thu.pm = (thu_pm_1 * childCountByRoomID).toString();
                    _this.rooms[index].capacity.fri.am = (fri_am_1 * childCountByRoomID).toString();
                    _this.rooms[index].capacity.fri.pm = (fri_pm_1 * childCountByRoomID).toString();
                }
                else {
                    _this.rooms[index].capacity.mon.am = "0";
                    _this.rooms[index].capacity.mon.pm = "0";
                    _this.rooms[index].capacity.tue.am = "0";
                    _this.rooms[index].capacity.tue.pm = "0";
                    _this.rooms[index].capacity.wed.am = "0";
                    _this.rooms[index].capacity.wed.pm = "0";
                    _this.rooms[index].capacity.thu.am = "0";
                    _this.rooms[index].capacity.thu.pm = "0";
                    _this.rooms[index].capacity.fri.am = "0";
                    _this.rooms[index].capacity.fri.pm = "0";
                }
            });
        }
        else {
            this.errorMessage = 'All Required. Please!';
        }
    };
    //check Staff existing in the room
    AddStaffComponent.prototype.checkRoom = function (staff, id) {
        var exist = false;
        if (staff.assignedRoom.mon.am == id ||
            staff.assignedRoom.mon.pm == id ||
            staff.assignedRoom.tue.am == id ||
            staff.assignedRoom.tue.pm == id ||
            staff.assignedRoom.wed.am == id ||
            staff.assignedRoom.wed.pm == id ||
            staff.assignedRoom.thu.am == id ||
            staff.assignedRoom.thu.pm == id ||
            staff.assignedRoom.fri.am == id ||
            staff.assignedRoom.fri.pm == id) {
            exist = true;
        }
        return exist;
    };
    AddStaffComponent.prototype.isValid = function () {
        return this.staff.name && this.staff.startdate;
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(), 
        __metadata('design:type', Object)
    ], AddStaffComponent.prototype, "closeModal", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', String)
    ], AddStaffComponent.prototype, "title", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', (typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_3__occupancy_model__["a" /* Staff */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__occupancy_model__["a" /* Staff */]) === 'function' && _a) || Object)
    ], AddStaffComponent.prototype, "staff", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Array)
    ], AddStaffComponent.prototype, "rooms", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Object)
    ], AddStaffComponent.prototype, "qualification", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Boolean)
    ], AddStaffComponent.prototype, "showOccupancyModal", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Boolean)
    ], AddStaffComponent.prototype, "isEdit", void 0);
    AddStaffComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-add-staff',
            template: __webpack_require__(923),
            styles: [__webpack_require__(874), __webpack_require__(672)],
            animations: __WEBPACK_IMPORTED_MODULE_2__occupancy_modal_occupancy_modal_animations__["a" /* occupancyModalAnimations */].slice()
        }), 
        __metadata('design:paramtypes', [(typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__occupancy_service__["a" /* OccupancyService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__occupancy_service__["a" /* OccupancyService */]) === 'function' && _b) || Object])
    ], AddStaffComponent);
    return AddStaffComponent;
    var _a, _b;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/add-staff.component.js.map

/***/ },
/* 821 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__occupancy_modal_occupancy_modal_animations__ = __webpack_require__(683);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__occupancy_model__ = __webpack_require__(678);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MoveClassComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var MoveClassComponent = (function () {
    function MoveClassComponent() {
        this.closeModal = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.title = "";
        this.showOccupancyModal = false;
        this.rooms = [];
        this.name = "Harrison Brophy";
        this.movedate = "2016/12/24";
        this.moveRoomId = 1;
        this.roomId = 1;
        this.rooms = [
            { id: "1", name: "Baby Room 1", ageGroup: "1", capacity: { mon: { am: "3", pm: "0" }, tue: { am: "0", pm: "3" }, wed: { am: "3", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "3", pm: "0" } }, transitionRoom: "2", transitionAge: "1", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "2", name: "Baby Room 2", ageGroup: "2", capacity: { mon: { am: "0", pm: "5" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "5" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "5" } }, transitionRoom: "3", transitionAge: "2", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "3", name: "Wobbler Room 1", ageGroup: "3", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "11" }, fri: { am: "0", pm: "0" } }, transitionRoom: "4", transitionAge: "3", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "4", name: "Toddler Room 1", ageGroup: "4", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } }, transitionRoom: "5", transitionAge: "4", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "5", name: "Pre-Montessori Room 1", ageGroup: "5", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } }, transitionRoom: "6", transitionAge: "5", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "6", name: "Montessori Room 1", ageGroup: "6", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } }, transitionRoom: "7", transitionAge: "5", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "7", name: "After School", ageGroup: "7", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } }, transitionRoom: "1", transitionAge: "7", ecceCapitations: "", selected: false, assignedStaff: [] }
        ];
    }
    MoveClassComponent.prototype.ngOnInit = function () {
    };
    MoveClassComponent.prototype.ngOnChanges = function () {
        if (this.child) {
            this.name = this.child.name;
            this.title = this.child.birthdate;
        }
    };
    MoveClassComponent.prototype.destroy = function () {
        this.closeModal.emit('close');
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(), 
        __metadata('design:type', Object)
    ], MoveClassComponent.prototype, "closeModal", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', (typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__occupancy_model__["c" /* Child */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__occupancy_model__["c" /* Child */]) === 'function' && _a) || Object)
    ], MoveClassComponent.prototype, "child", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', String)
    ], MoveClassComponent.prototype, "title", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Boolean)
    ], MoveClassComponent.prototype, "showOccupancyModal", void 0);
    MoveClassComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-move-class',
            template: __webpack_require__(924),
            styles: [__webpack_require__(875), __webpack_require__(672)],
            animations: __WEBPACK_IMPORTED_MODULE_1__occupancy_modal_occupancy_modal_animations__["a" /* occupancyModalAnimations */].slice()
        }), 
        __metadata('design:paramtypes', [])
    ], MoveClassComponent);
    return MoveClassComponent;
    var _a;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/move-class.component.js.map

/***/ },
/* 822 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__occupancy_modal_occupancy_modal_animations__ = __webpack_require__(683);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__occupancy_model__ = __webpack_require__(678);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return OccupancyChlidComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var OccupancyChlidComponent = (function () {
    function OccupancyChlidComponent() {
        this.closeModal = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.showChildModal = false;
        this.title = "";
        this.errorMessage = "";
    }
    OccupancyChlidComponent.prototype.ngOnInit = function () {
    };
    OccupancyChlidComponent.prototype.ngOnChanges = function () {
        this.title = this.child.name;
    };
    OccupancyChlidComponent.prototype.destroy = function () {
        this.closeModal.emit('close');
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(), 
        __metadata('design:type', Object)
    ], OccupancyChlidComponent.prototype, "closeModal", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Boolean)
    ], OccupancyChlidComponent.prototype, "showChildModal", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', (typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__occupancy_model__["c" /* Child */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__occupancy_model__["c" /* Child */]) === 'function' && _a) || Object)
    ], OccupancyChlidComponent.prototype, "child", void 0);
    OccupancyChlidComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-occupancy-chlid',
            template: __webpack_require__(925),
            styles: [__webpack_require__(876), __webpack_require__(672)],
            animations: __WEBPACK_IMPORTED_MODULE_1__occupancy_modal_occupancy_modal_animations__["a" /* occupancyModalAnimations */].slice()
        }), 
        __metadata('design:paramtypes', [])
    ], OccupancyChlidComponent);
    return OccupancyChlidComponent;
    var _a;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/occupancy-chlid.component.js.map

/***/ },
/* 823 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__occupancy_modal_animations__ = __webpack_require__(683);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return OccupancyModalComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var OccupancyModalComponent = (function () {
    function OccupancyModalComponent() {
        this.closeModal = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.showOccupancyModal = false;
        this.title = "";
        this.name = "";
    }
    OccupancyModalComponent.prototype.destroy = function () {
        this.closeModal.emit('close');
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(), 
        __metadata('design:type', Object)
    ], OccupancyModalComponent.prototype, "closeModal", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Boolean)
    ], OccupancyModalComponent.prototype, "showOccupancyModal", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', String)
    ], OccupancyModalComponent.prototype, "title", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', String)
    ], OccupancyModalComponent.prototype, "name", void 0);
    OccupancyModalComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-occupancy-modal',
            template: __webpack_require__(926),
            styles: [__webpack_require__(877)],
            animations: __WEBPACK_IMPORTED_MODULE_1__occupancy_modal_animations__["a" /* occupancyModalAnimations */].slice()
        }), 
        __metadata('design:paramtypes', [])
    ], OccupancyModalComponent);
    return OccupancyModalComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/occupancy-modal.component.js.map

/***/ },
/* 824 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__occupancy_modal_occupancy_modal_animations__ = __webpack_require__(683);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__occupancy_model__ = __webpack_require__(678);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return RemoveWaitingChildComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var RemoveWaitingChildComponent = (function () {
    function RemoveWaitingChildComponent() {
        this.closeModal = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.moveFromWaitRoomToRoom = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.rooms = [];
        this.showOccupancyModal = false;
        this.title = "";
        this.errorMessage = "";
        this.deposit = [];
        this.roomId = 1;
        this.deposit = [
            { id: "1", name: "PAID" },
            { id: "2", name: "NOT PAID" },
            { id: "3", name: "ENQUIRE ONLY" }
        ];
    }
    RemoveWaitingChildComponent.prototype.ngOnInit = function () {
    };
    RemoveWaitingChildComponent.prototype.ngOnChanges = function () {
        this.title = this.child.name;
        this.errorMessage = "";
    };
    RemoveWaitingChildComponent.prototype.destroy = function () {
        this.closeModal.emit('close');
    };
    //get deposit name by deposit.id
    RemoveWaitingChildComponent.prototype.getDepositNameById = function (id) {
        var _deposit = this.deposit.find(function (deposit) { return deposit.id === id; });
        return id == "0" ? "NOT IN" : _deposit.name;
    };
    RemoveWaitingChildComponent.prototype.moveFromWaitRoom = function () {
        this.moveFromWaitRoomToRoom.emit(this.child);
    };
    RemoveWaitingChildComponent.prototype.moveToRoom = function () {
        if (this.child.deposit != "1") {
            this.errorMessage = "Not PAID";
        }
        else {
            if (this.isValid()) {
                this.moveFromWaitRoom();
                this.destroy();
            }
            else {
                this.errorMessage = "Required. Please!";
            }
        }
    };
    RemoveWaitingChildComponent.prototype.isValid = function () {
        return this.child.assignedRoom && this.child.roomStartdate;
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(), 
        __metadata('design:type', Object)
    ], RemoveWaitingChildComponent.prototype, "closeModal", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(), 
        __metadata('design:type', Object)
    ], RemoveWaitingChildComponent.prototype, "moveFromWaitRoomToRoom", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', (typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__occupancy_model__["c" /* Child */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__occupancy_model__["c" /* Child */]) === 'function' && _a) || Object)
    ], RemoveWaitingChildComponent.prototype, "child", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Array)
    ], RemoveWaitingChildComponent.prototype, "rooms", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Boolean)
    ], RemoveWaitingChildComponent.prototype, "showOccupancyModal", void 0);
    RemoveWaitingChildComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-remove-waiting-child',
            template: __webpack_require__(927),
            styles: [__webpack_require__(878), __webpack_require__(672)],
            animations: __WEBPACK_IMPORTED_MODULE_1__occupancy_modal_occupancy_modal_animations__["a" /* occupancyModalAnimations */].slice()
        }), 
        __metadata('design:paramtypes', [])
    ], RemoveWaitingChildComponent);
    return RemoveWaitingChildComponent;
    var _a;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/remove-waiting-child.component.js.map

/***/ },
/* 825 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__occupancy_model__ = __webpack_require__(678);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return RoomInfoAccordianComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var RoomInfoAccordianComponent = (function () {
    function RoomInfoAccordianComponent() {
        this.initSelectedRoomID = "0";
        this.intiSelectedDate = "0";
        this.showOccupancyModal = false;
        this.title = "07/ 07/ 2015";
        this.weekTabs = [
            { name: "MON", fullname: "Monday", active: true },
            { name: "TUE", fullname: "Tuesday", active: false },
            { name: "WED", fullname: "Wednesday", active: false },
            { name: "THU", fullname: "Thursday", active: false },
            { name: "FRI", fullname: "Friday", active: false }
        ];
        this.staff = [];
        this.selectedWeeKFullName = "Monday";
        this.rooms = [
            { id: "1", name: "Baby Room 1", ageGroup: "1", capacity: { mon: { am: "3", pm: "0" }, tue: { am: "0", pm: "3" }, wed: { am: "3", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "3", pm: "0" } }, transitionRoom: "2", transitionAge: "1", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "2", name: "Baby Room 2", ageGroup: "2", capacity: { mon: { am: "0", pm: "5" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "5" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "5" } }, transitionRoom: "3", transitionAge: "2", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "3", name: "Wobbler Room 1", ageGroup: "3", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "11" }, fri: { am: "0", pm: "0" } }, transitionRoom: "4", transitionAge: "3", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "4", name: "Toddler Room 1", ageGroup: "4", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } }, transitionRoom: "5", transitionAge: "4", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "5", name: "Pre-Montessori Room 1", ageGroup: "5", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } }, transitionRoom: "6", transitionAge: "5", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "6", name: "Montessori Room 1", ageGroup: "6", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } }, transitionRoom: "7", transitionAge: "5", ecceCapitations: "", selected: false, assignedStaff: [] },
            { id: "7", name: "After School", ageGroup: "7", capacity: { mon: { am: "0", pm: "0" }, tue: { am: "0", pm: "0" }, wed: { am: "0", pm: "0" }, thu: { am: "0", pm: "0" }, fri: { am: "0", pm: "0" } }, transitionRoom: "1", transitionAge: "7", ecceCapitations: "", selected: false, assignedStaff: [] }
        ];
    }
    RoomInfoAccordianComponent.prototype.ngOnInit = function () {
        this.roomInfo = { id: "", mdate: "", personInfo: { staff: [], child: [] }, available: { am: "0", pm: "0" }, active: false };
        this.roomID = "1";
    };
    RoomInfoAccordianComponent.prototype.ngOnChanges = function () {
        if ((this.initSelectedRoomID !== this.roomID || this.intiSelectedDate !== this.roomInfo.mdate) && this.roomInfo != undefined) {
            this.selectWeekPicker(0);
        }
    };
    //get room name by room.id
    RoomInfoAccordianComponent.prototype.getRoomNameById = function (id) {
        var _room = this.rooms.find(function (room) { return room.id === id; });
        return id == "0" ? "NOT IN" : _room.name;
    };
    //filter data whenselect weekpicker
    RoomInfoAccordianComponent.prototype.selectWeekPicker = function (idx) {
        this.weekTabs.forEach(function (tab) {
            tab.active = false;
        });
        this.weekTabs[idx].active = true;
        this.selectedWeeKFullName = this.weekTabs[idx].fullname;
        this.staff = [];
        if (this.weekTabs[idx].name == "MON") {
            this.getMondayResult();
        }
        else if (this.weekTabs[idx].name == "TUE") {
            this.getTuesdayResult();
        }
        else if (this.weekTabs[idx].name == "WED") {
            this.getWednesdayResult();
        }
        else if (this.weekTabs[idx].name == "THU") {
            this.getThursdayResult();
        }
        else {
            this.getFridayResult();
        }
    };
    RoomInfoAccordianComponent.prototype.getMondayResult = function () {
        var _this = this;
        if (this.roomInfo.personInfo.child.length > 0) {
            this.childStoreAM = this.roomInfo.personInfo.child.filter(function (_child) {
                return _child.assignedRoom === _this.roomID && _child.assignedState.mon.am;
            });
            this.childStorePM = this.roomInfo.personInfo.child.filter(function (_child) {
                return _child.assignedRoom === _this.roomID && _child.assignedState.mon.pm;
            });
        }
        if (this.roomInfo.personInfo.staff.length > 0) {
            this.staffStore = this.roomInfo.personInfo.staff.filter(function (_staff) {
                return _staff.assignedRoom.mon.am === _this.roomID || _staff.assignedRoom.mon.am === _this.roomID;
            });
            this.staffStore.forEach(function (_staff) {
                _this.staff.push({ id: _staff.id, name: _staff.name, am: _staff.assignedRoom.mon.am, pm: _staff.assignedRoom.mon.pm });
            });
        }
    };
    RoomInfoAccordianComponent.prototype.getTuesdayResult = function () {
        var _this = this;
        if (this.roomInfo.personInfo.child.length > 0) {
            this.childStoreAM = this.roomInfo.personInfo.child.filter(function (_child) {
                return _child.assignedRoom === _this.roomID && _child.assignedState.tue.am;
            });
            this.childStorePM = this.roomInfo.personInfo.child.filter(function (_child) {
                return _child.assignedRoom === _this.roomID && _child.assignedState.tue.pm;
            });
        }
        if (this.roomInfo.personInfo.staff.length > 0) {
            this.staffStore = this.roomInfo.personInfo.staff.filter(function (_staff) {
                return _staff.assignedRoom.tue.am === _this.roomID || _staff.assignedRoom.tue.am === _this.roomID;
            });
            this.staffStore.forEach(function (_staff) {
                _this.staff.push({ id: _staff.id, name: _staff.name, am: _staff.assignedRoom.tue.am, pm: _staff.assignedRoom.tue.pm });
            });
        }
    };
    RoomInfoAccordianComponent.prototype.getWednesdayResult = function () {
        var _this = this;
        if (this.roomInfo.personInfo.child.length > 0) {
            this.childStoreAM = this.roomInfo.personInfo.child.filter(function (_child) {
                return _child.assignedRoom === _this.roomID && _child.assignedState.wed.am;
            });
            this.childStorePM = this.roomInfo.personInfo.child.filter(function (_child) {
                return _child.assignedRoom === _this.roomID && _child.assignedState.wed.pm;
            });
        }
        if (this.roomInfo.personInfo.staff.length > 0) {
            this.staffStore = this.roomInfo.personInfo.staff.filter(function (_staff) {
                return _staff.assignedRoom.wed.am === _this.roomID || _staff.assignedRoom.wed.am === _this.roomID;
            });
            this.staffStore.forEach(function (_staff) {
                _this.staff.push({ id: _staff.id, name: _staff.name, am: _staff.assignedRoom.wed.am, pm: _staff.assignedRoom.wed.pm });
            });
        }
    };
    RoomInfoAccordianComponent.prototype.getThursdayResult = function () {
        var _this = this;
        if (this.roomInfo.personInfo.child.length > 0) {
            this.childStoreAM = this.roomInfo.personInfo.child.filter(function (_child) {
                return _child.assignedRoom === _this.roomID && _child.assignedState.thu.am;
            });
            this.childStorePM = this.roomInfo.personInfo.child.filter(function (_child) {
                return _child.assignedRoom === _this.roomID && _child.assignedState.thu.pm;
            });
        }
        if (this.roomInfo.personInfo.staff.length > 0) {
            this.staffStore = this.roomInfo.personInfo.staff.filter(function (_staff) {
                return _staff.assignedRoom.thu.am === _this.roomID || _staff.assignedRoom.thu.am === _this.roomID;
            });
            this.staffStore.forEach(function (_staff) {
                _this.staff.push({ id: _staff.id, name: _staff.name, am: _staff.assignedRoom.thu.am, pm: _staff.assignedRoom.thu.pm });
            });
        }
    };
    RoomInfoAccordianComponent.prototype.getFridayResult = function () {
        var _this = this;
        if (this.roomInfo.personInfo.child.length > 0) {
            this.childStoreAM = this.roomInfo.personInfo.child.filter(function (_child) {
                return _child.assignedRoom === _this.roomID && _child.assignedState.fri.am;
            });
            this.childStorePM = this.roomInfo.personInfo.child.filter(function (_child) {
                return _child.assignedRoom === _this.roomID && _child.assignedState.fri.pm;
            });
        }
        if (this.roomInfo.personInfo.staff.length > 0) {
            this.staffStore = this.roomInfo.personInfo.staff.filter(function (_staff) {
                return _staff.assignedRoom.fri.am === _this.roomID || _staff.assignedRoom.fri.am === _this.roomID;
            });
            this.staffStore.forEach(function (_staff) {
                _this.staff.push({ id: _staff.id, name: _staff.name, am: _staff.assignedRoom.fri.am, pm: _staff.assignedRoom.fri.pm });
            });
        }
    };
    RoomInfoAccordianComponent.prototype.selectChild = function (child) {
        this.selectedChild = child;
        this.showOccupancyModal = true;
    };
    RoomInfoAccordianComponent.prototype.modalClosed = function () {
        this.showOccupancyModal = false;
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', (typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__occupancy_model__["b" /* RoomInfo */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__occupancy_model__["b" /* RoomInfo */]) === 'function' && _a) || Object)
    ], RoomInfoAccordianComponent.prototype, "roomInfo", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', String)
    ], RoomInfoAccordianComponent.prototype, "roomID", void 0);
    RoomInfoAccordianComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-room-info-accordian',
            template: __webpack_require__(928),
            styles: [__webpack_require__(879), __webpack_require__(672)]
        }), 
        __metadata('design:paramtypes', [])
    ], RoomInfoAccordianComponent);
    return RoomInfoAccordianComponent;
    var _a;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/room-info-accordian.component.js.map

/***/ },
/* 826 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return ScrollNavbarComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var ScrollNavbarComponent = (function () {
    function ScrollNavbarComponent() {
        this.sendData = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.currentTranslation = 0;
        this.thresholdLeft = 0;
        this.arrowWidth = 60;
        this.boundTransition = this.handleTransition.bind(this);
    }
    ScrollNavbarComponent.prototype.selectData = function (id) {
        this.sendData.emit(id);
    };
    ScrollNavbarComponent.prototype.ngOnInit = function () {
        this.scrollElement = this.nav.nativeElement;
    };
    ScrollNavbarComponent.prototype.ngOnChanges = function (changes) {
        var _this = this;
        var datas = changes['datas'].currentValue;
        if (datas && datas.length) {
            // TODO: Fix Change Detection Strategy
            setTimeout(function (_) {
                _a = _this.shouldShowArrows(), _this.showRightArrow = _a[0], _this.showLeftArrow = _a[1];
                var _a;
            }, 500);
        }
        else if (!changes['datas'].isFirstChange()) {
            console.log('Please provide datas');
        }
    };
    ScrollNavbarComponent.prototype.onResize = function (event) {
        if (this.datas && this.datas.length) {
            this.thresholdRight = this.calculateRightThreshold();
            _a = this.shouldShowArrows(), this.showRightArrow = _a[0], this.showLeftArrow = _a[1];
            // Reset transform
            this.transformScroll(0, false);
        }
        var _a;
    };
    /**
     *  Returns [boolean, boolean] corresponding right arrow, left arrow.
     */
    ScrollNavbarComponent.prototype.shouldShowArrows = function () {
        var parentBoundingRect = this.scrollElement.parentElement.getBoundingClientRect();
        var scrollBoundingRect = this.scrollElement.getBoundingClientRect();
        var threshold = this.calculateRightThreshold();
        if (parentBoundingRect.width - this.arrowWidth * 2 > scrollBoundingRect.width) {
            return [false, false];
        }
        return [
            !!threshold,
            !!this.currentTranslation
        ];
    };
    ScrollNavbarComponent.prototype.calculateRightThreshold = function () {
        var arrowEl = this.arrowRight.nativeElement;
        var arrowBoundingRect = arrowEl.getBoundingClientRect();
        var lastChildBoundingRect = this.getLastChild();
        this.arrowWidth = arrowBoundingRect.width;
        return arrowBoundingRect.left - lastChildBoundingRect.right;
    };
    // TODO: Test, if translition completes when there is no element in the remaining space
    ScrollNavbarComponent.prototype.scroll = function (direction) {
        var _this = this;
        if (direction === void 0) { direction = 'left'; }
        if (!this.thresholdRight) {
            this.thresholdRight = this.calculateRightThreshold();
        }
        var shift;
        var scrollPower = function (width) { return Math.max(_this.arrowWidth, width); };
        if (direction === 'right') {
            var last = this.getLastChild();
            var lastVisible = this.getLastVisibleChild();
            if (last.left === lastVisible.left) {
                shift = this.thresholdRight;
            }
            else {
                shift = Math.max(this.currentTranslation - scrollPower(last.width) * 2, this.thresholdRight);
            }
        }
        else {
            var first = this.getFirstChild();
            var firstVisible = this.getFirstVisibleChild();
            if (first.left === firstVisible.left) {
                shift = this.thresholdLeft;
            }
            else {
                shift = Math.min(this.currentTranslation + scrollPower(first.width) * 2, this.thresholdLeft);
            }
        }
        this.transformScroll(shift);
    };
    ScrollNavbarComponent.prototype.transformScroll = function (shift, notify) {
        if (notify === void 0) { notify = true; }
        this.scrollElement.style.transform = "translateX(" + shift + "px)";
        this.currentTranslation = shift;
        if (notify) {
            this.scrollElement.addEventListener('transitionend', this.boundTransition, false);
        }
    };
    ScrollNavbarComponent.prototype.handleTransition = function () {
        _a = this.shouldShowArrows(), this.showRightArrow = _a[0], this.showLeftArrow = _a[1];
        this.scrollElement.removeEventListener('transitionend', this.boundTransition, false);
        var _a;
    };
    ScrollNavbarComponent.prototype.getLastVisibleChild = function () {
        var items = this.scrollElement.children;
        var offsetWidth = this.scrollElement.parentElement.offsetWidth - this.arrowWidth * 2;
        for (var i = 0; i < items.length; i++) {
            var itemBr = items[i].getBoundingClientRect();
            if (offsetWidth <= itemBr.left) {
                return itemBr;
            }
        }
        return this.getLastChild();
    };
    ScrollNavbarComponent.prototype.getFirstVisibleChild = function () {
        var items = this.scrollElement.children;
        for (var i = 0; i < items.length; i++) {
            var itemBr = items[i].getBoundingClientRect();
            if (itemBr.right >= this.arrowWidth) {
                return itemBr;
            }
        }
        return this.getFirstChild();
    };
    ScrollNavbarComponent.prototype.getLastChild = function () {
        var children = this.scrollElement.children;
        return children[children.length - 1].getBoundingClientRect();
    };
    ScrollNavbarComponent.prototype.getFirstChild = function () {
        var children = this.scrollElement.children;
        return children[0].getBoundingClientRect();
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('nav'), 
        __metadata('design:type', Object)
    ], ScrollNavbarComponent.prototype, "nav", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('arrow'), 
        __metadata('design:type', Object)
    ], ScrollNavbarComponent.prototype, "arrowRight", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Object)
    ], ScrollNavbarComponent.prototype, "datas", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(), 
        __metadata('design:type', Object)
    ], ScrollNavbarComponent.prototype, "sendData", void 0);
    ScrollNavbarComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-scroll-navbar',
            template: __webpack_require__(929),
            styles: [__webpack_require__(880)]
        }), 
        __metadata('design:paramtypes', [])
    ], ScrollNavbarComponent);
    return ScrollNavbarComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/scroll-navbar.component.js.map

/***/ },
/* 827 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_router__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__occupancy_component__ = __webpack_require__(735);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__plan_dashboard_plan_dashboard_component__ = __webpack_require__(737);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__plan_room_lists_plan_room_lists_component__ = __webpack_require__(738);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__plan_setup_plan_setup_component__ = __webpack_require__(739);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__occupancy_transitions_occupancy_transitions_component__ = __webpack_require__(734);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return routing; });






var occupancyRouting = [
    {
        path: '',
        component: __WEBPACK_IMPORTED_MODULE_1__occupancy_component__["a" /* OccupancyComponent */],
        children: [
            { path: '', redirectTo: 'all', terminal: true },
            { path: 'all', component: __WEBPACK_IMPORTED_MODULE_2__plan_dashboard_plan_dashboard_component__["a" /* PlanDashboardComponent */] },
            { path: 'rooms', component: __WEBPACK_IMPORTED_MODULE_3__plan_room_lists_plan_room_lists_component__["a" /* PlanRoomListsComponent */] },
            { path: 'setup', component: __WEBPACK_IMPORTED_MODULE_4__plan_setup_plan_setup_component__["a" /* PlanSetupComponent */] },
            { path: 'trans', component: __WEBPACK_IMPORTED_MODULE_5__occupancy_transitions_occupancy_transitions_component__["a" /* OccupancyTransitionsComponent */] }
        ]
    }
];
var routing = __WEBPACK_IMPORTED_MODULE_0__angular_router__["b" /* RouterModule */].forChild(occupancyRouting);
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/occupancy.routing.js.map

/***/ },
/* 828 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return AttendanceStatusComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var AttendanceStatusComponent = (function () {
    function AttendanceStatusComponent() {
    }
    AttendanceStatusComponent.prototype.ngOnInit = function () {
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Object)
    ], AttendanceStatusComponent.prototype, "record", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Object)
    ], AttendanceStatusComponent.prototype, "inactive", void 0);
    AttendanceStatusComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-attendance-status',
            template: __webpack_require__(935),
            styles: [__webpack_require__(885)]
        }), 
        __metadata('design:paramtypes', [])
    ], AttendanceStatusComponent);
    return AttendanceStatusComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/attendance-status.component.js.map

/***/ },
/* 829 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_router__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__reports_component__ = __webpack_require__(740);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return routing; });


var reportRoutes = [
    {
        path: '',
        redirectTo: 'all',
        terminal: true
    },
    {
        path: ':id',
        component: __WEBPACK_IMPORTED_MODULE_1__reports_component__["a" /* ReportsComponent */]
    }
];
var routing = __WEBPACK_IMPORTED_MODULE_0__angular_router__["b" /* RouterModule */].forChild(reportRoutes);
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/reports.routing.js.map

/***/ },
/* 830 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return addFamiliesModalAnimations; });

var animationCurve = 'cubic-bezier(0.47,0,0.745,0.715)';
var timingCurve = function (time) {
    if (time === void 0) { time = .2; }
    return time + 's ' + animationCurve;
};
var addFamiliesModalAnimations = [
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["trigger"])('modal', [
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["state"])('true', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ transform: 'none' })),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["state"])('false', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ transform: 'translateY(-80vh)' })),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["transition"])('0 => 1', [
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["animate"])(timingCurve(0.3), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ transform: 'none', opacity: 1 }))
        ]),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["transition"])('1 => 0', [
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ opacity: 0.3 }),
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["animate"])(timingCurve(), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ transform: 'translateY(-80vh)', opacity: 0 }))
        ])
    ]),
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["trigger"])('backdrop', [
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["state"])('true', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ visibility: 'visible' })),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["state"])('false', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ visibility: 'hidden' })),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["transition"])('0 => 1', [
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["animate"])(timingCurve(), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ opacity: 1 }))
        ]),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["transition"])('1 => 0', [
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["animate"])(timingCurve(), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ opacity: 0 }))
        ])
    ])
];
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/add-new-families.animations.js.map

/***/ },
/* 831 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__add_new_families_animations__ = __webpack_require__(830);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__family_manager_service__ = __webpack_require__(744);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__family_model__ = __webpack_require__(745);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__shared_models_child_model__ = __webpack_require__(685);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return AddNewFamiliesComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var AddNewFamiliesComponent = (function () {
    function AddNewFamiliesComponent(familyManager) {
        this.familyManager = familyManager;
        this.closeModal = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.rooms = [];
        this.showModal = false;
        this.isEdit = false;
        this.maxID = 0;
        this.saving = false;
        this.isTablet = true;
        this.roomId = 0;
        this.errorMessage = "";
        //Fake init data
        this.initChild = { name: "", birthdate: "", roomId: 0, startdate: "" };
        this.initGuard = { name: "", email: "", phone: "", address: "" };
    }
    AddNewFamiliesComponent.prototype.ngOnInit = function () {
    };
    AddNewFamiliesComponent.prototype.ngOnChanges = function () {
        //when click add button for add new family, init family
        if (!this.isEdit) {
            this.family = new __WEBPACK_IMPORTED_MODULE_3__family_model__["b" /* Family */]({ id: this.maxID, childrens: [new __WEBPACK_IMPORTED_MODULE_4__shared_models_child_model__["a" /* Child */](this.initChild)], guardians: [new __WEBPACK_IMPORTED_MODULE_3__family_model__["a" /* Guardian */](this.initGuard)] });
        }
        this.errorMessage = "";
    };
    AddNewFamiliesComponent.prototype.destroy = function () {
        this.closeModal.emit('close');
    };
    //add another children
    AddNewFamiliesComponent.prototype.addAnotherChild = function () {
        this.family.childrens.push(new __WEBPACK_IMPORTED_MODULE_4__shared_models_child_model__["a" /* Child */](this.initChild));
    };
    //add another guardain
    AddNewFamiliesComponent.prototype.addAnotherGuard = function () {
        this.family.guardians.push(new __WEBPACK_IMPORTED_MODULE_3__family_model__["a" /* Guardian */](this.initGuard));
    };
    //save family
    AddNewFamiliesComponent.prototype.saveFamilies = function () {
        if (this.isValid() && !this.saving) {
            this.saving = true;
            if (this.isEdit) {
                // this.familyManager.updateFamily(this.family).toPromise().then(() => {
                //   this.saving = false;
                //   this.destroy();
                // }, console.error);
                /**************************
                 * update fake data
                 */
                this.familyManager.updateFamily(this.family);
                this.saving = false;
                this.destroy();
            }
            else {
                // this.familyManager.addFamily(this.family).toPromise().then(() => {
                //   this.saving = false;
                //   this.destroy();
                // }, console.error);
                /**************************
                 * add fake data
                 */
                this.familyManager.addFamily(this.family);
                this.saving = false;
                this.destroy();
            }
        }
        else {
            this.errorMessage = 'All Required. Please!';
        }
    };
    AddNewFamiliesComponent.prototype.isValid = function () {
        var valid = false;
        this.family.childrens.forEach(function (children) {
            if (children.name && children.birthdate && children.startdate) {
                valid = true;
            }
            else {
                valid = false;
            }
        });
        this.family.guardians.forEach(function (guardian) {
            if (guardian.name && guardian.email && guardian.phone && guardian.address) {
                valid = true;
            }
            else {
                valid = false;
            }
        });
        return valid;
    };
    //Click 1.add children or 2.add guardian then call.
    AddNewFamiliesComponent.prototype.selectFamiliesType = function (idx) {
        this.selectedTabIndex = idx;
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(), 
        __metadata('design:type', Object)
    ], AddNewFamiliesComponent.prototype, "closeModal", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', (typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_3__family_model__["b" /* Family */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__family_model__["b" /* Family */]) === 'function' && _a) || Object)
    ], AddNewFamiliesComponent.prototype, "family", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Object)
    ], AddNewFamiliesComponent.prototype, "rooms", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Boolean)
    ], AddNewFamiliesComponent.prototype, "showModal", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Boolean)
    ], AddNewFamiliesComponent.prototype, "isEdit", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Number)
    ], AddNewFamiliesComponent.prototype, "selectedTabIndex", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Number)
    ], AddNewFamiliesComponent.prototype, "maxID", void 0);
    AddNewFamiliesComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-add-new-families',
            template: __webpack_require__(940),
            styles: [__webpack_require__(890)],
            animations: __WEBPACK_IMPORTED_MODULE_1__add_new_families_animations__["a" /* addFamiliesModalAnimations */].slice()
        }), 
        __metadata('design:paramtypes', [(typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__family_manager_service__["a" /* FamilyManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__family_manager_service__["a" /* FamilyManagerService */]) === 'function' && _b) || Object])
    ], AddNewFamiliesComponent);
    return AddNewFamiliesComponent;
    var _a, _b;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/add-new-families.component.js.map

/***/ },
/* 832 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_children_manager_service__ = __webpack_require__(684);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_models_child_model__ = __webpack_require__(685);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment__ = __webpack_require__(668);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_moment__);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return AddChildComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var AddChildComponent = (function () {
    function AddChildComponent(childrenManager) {
        this.childrenManager = childrenManager;
        this.closeModal = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.rooms = [];
        this.isEdit = false;
        this.saving = false;
    }
    AddChildComponent.prototype.ngOnChanges = function (changes) {
        if (changes.child && changes.child.currentValue) {
            this.isEdit = true;
        }
        else {
            this.isEdit = false;
        }
        this.init();
    };
    AddChildComponent.prototype.init = function () {
        if (this.isEdit) {
            this.name = this.child.name;
            this.birthdate = this.child.birthdate;
            this.roomId = this.child.roomId;
        }
        else {
            this.name = '';
            this.birthdate = null;
            this.roomId = '';
        }
    };
    AddChildComponent.prototype.saveChild = function () {
        var _this = this;
        if (this.isValid() && !this.saving) {
            this.saving = true;
            if (this.isEdit) {
                var _name_1 = this.child.name;
                var _birthdate_1 = this.child.birthdate;
                var _roomId_1 = this.child.roomId;
                var _room_1 = this.child.room;
                var room = this.rooms.find(function (room) { return room.id == _this.roomId; });
                this.child.name = this.name;
                this.child.birthdate = this.birthdate;
                this.child.roomId = this.roomId;
                this.child.room = room ? room.name : '';
                this.childrenManager.updateChild(this.child).toPromise().then(function () {
                    _this.saving = false;
                    _this.dismiss("Child \"" + _this.child.name + "\" updated");
                }, function () {
                    _this.child.name = _name_1;
                    _this.child.birthdate = _birthdate_1;
                    _this.child.roomId = _roomId_1;
                    _this.child.room = _room_1;
                });
            }
            else {
                this.childrenManager.addChild({
                    name: this.name,
                    birthdate: this.birthdate,
                    roomId: this.roomId
                }).toPromise().then(function () {
                    _this.saving = false;
                    _this.dismiss('New Child added');
                }, console.error);
            }
        }
        else {
            if (!this.name) {
                this.errorMessage = 'Child name is required';
            }
            else if (!this.birthdate) {
                this.errorMessage = 'Child date of birth is required';
            }
            else if (!this.roomId) {
                this.errorMessage = 'Child room is required';
            }
            else if (this.saving) {
                this.errorMessage = 'Processing Request';
            }
        }
    };
    AddChildComponent.prototype.dismiss = function (message) {
        this.closeModal.emit(message);
    };
    Object.defineProperty(AddChildComponent.prototype, "date", {
        get: function () {
            return this.birthdate ? __WEBPACK_IMPORTED_MODULE_3_moment__["unix"](this.birthdate / 1000).format('Do MMMM YYYY') : null;
        },
        set: function (value) {
            this.birthdate = +__WEBPACK_IMPORTED_MODULE_3_moment__(value).format('x');
        },
        enumerable: true,
        configurable: true
    });
    AddChildComponent.prototype.isValid = function () {
        return !!this.name && !!this.birthdate && !!this.roomId;
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])('closeModal'), 
        __metadata('design:type', Object)
    ], AddChildComponent.prototype, "closeModal", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', (typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__shared_models_child_model__["a" /* Child */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__shared_models_child_model__["a" /* Child */]) === 'function' && _a) || Object)
    ], AddChildComponent.prototype, "child", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Object)
    ], AddChildComponent.prototype, "rooms", void 0);
    AddChildComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-add-child',
            template: __webpack_require__(943),
            styles: [__webpack_require__(893)]
        }), 
        __metadata('design:paramtypes', [(typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__shared_children_manager_service__["a" /* ChildrenManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__shared_children_manager_service__["a" /* ChildrenManagerService */]) === 'function' && _b) || Object])
    ], AddChildComponent);
    return AddChildComponent;
    var _a, _b;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/add-child.component.js.map

/***/ },
/* 833 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shared_rooms_manager_service__ = __webpack_require__(674);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return AddRoomComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var AddRoomComponent = (function () {
    function AddRoomComponent(roomsManager) {
        this.roomsManager = roomsManager;
        this.closeModal = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.saving = false;
        this.ageFromAvailable = this.roomsManager.AGES_FROM;
        this.ageToAvailable = this.roomsManager.AGES_TO;
    }
    AddRoomComponent.prototype.ngOnInit = function () {
        this.resetForm();
        this.init();
    };
    AddRoomComponent.prototype.ngOnChanges = function (changes) {
        if (changes.room.currentValue) {
            this.init();
        }
        else {
            this.resetForm();
        }
    };
    AddRoomComponent.prototype.init = function () {
        var _this = this;
        if (this.room) {
            this.name = this.room.name;
            this.capacity = this.room.capacity;
            this.ecceCapitations = this.room.ecceCapitations;
            if (this.room.ageGroup) {
                var ageGroup = this.room.ageGroup.split('-');
                this.ageFrom = ageGroup[0];
                this.ageTo = ageGroup[1];
                this.ageGroup = this.room.ageGroup;
                this.ageToAvailable = this.ageToAvailable.filter(function (option, index) {
                    return index >= _this.ageFromAvailable.indexOf(_this.ageFrom) - 1;
                });
            }
        }
    };
    AddRoomComponent.prototype.saveRoom = function () {
        var _this = this;
        if (this.isValid() && !this.saving) {
            this.saving = true;
            if (!this.room) {
                this.roomsManager.addRoom({
                    name: this.name,
                    ageGroup: this.ageGroup,
                    capacity: +this.capacity,
                    ecceCapitations: this.ecceCapitations
                }).toPromise().then(function (res) {
                    _this.saving = false;
                    _this.dismiss();
                }, function (error) {
                    console.error(error);
                });
            }
            else {
                this.roomsManager.updateRoom({
                    id: this.room.id,
                    name: this.name,
                    ageGroup: this.ageGroup,
                    capacity: +this.capacity,
                    ecceCapitations: this.ecceCapitations
                }).toPromise().then(function (res) {
                    _this.saving = false;
                    _this.dismiss();
                }, function (error) {
                    console.error(error);
                });
            }
        }
        else {
            if (!this.name) {
                this.errorMessage = 'Room name is required';
            }
            else if (!this.ageGroup) {
                this.errorMessage = 'Age group boundaries should be set';
            }
            else if (!this.capacity) {
                this.errorMessage = 'Capacity has to be set';
            }
            else if (this.saving) {
                this.errorMessage = 'Processing Request';
            }
        }
    };
    AddRoomComponent.prototype.resetForm = function () {
        this.name = '';
        this.ageFrom = null;
        this.ageTo = null;
        this.ageGroup = null;
        this.capacity = null;
        this.ecceCapitations = null;
        this.errorMessage = null;
        this.saving = false;
        this.ageFromAvailable = this.roomsManager.AGES_FROM;
        this.ageToAvailable = this.roomsManager.AGES_TO;
    };
    AddRoomComponent.prototype.dismiss = function () {
        this.closeModal.emit();
        this.resetForm();
    };
    AddRoomComponent.prototype.handleSelect = function (value, handler) {
        var _this = this;
        if (handler === 'from') {
            this.ageToAvailable = this.roomsManager.AGES_TO
                .filter(function (option, index) {
                return index >= _this.ageFromAvailable.indexOf(value) - 1;
            });
            if (this.ageToAvailable.indexOf(this.ageTo) === -1) {
                this.ageTo = this.ageToAvailable[0];
            }
        }
        this.ageGroup = this.ageFrom + "-" + this.ageTo;
    };
    AddRoomComponent.prototype.isValid = function () {
        return !!this.name &&
            !!this.ageGroup &&
            !!this.capacity &&
            !isNaN(Number(this.capacity));
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])('closeModal'), 
        __metadata('design:type', Object)
    ], AddRoomComponent.prototype, "closeModal", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Object)
    ], AddRoomComponent.prototype, "room", void 0);
    AddRoomComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-add-room',
            template: __webpack_require__(944),
            styles: [__webpack_require__(894)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__shared_rooms_manager_service__["a" /* RoomsManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__shared_rooms_manager_service__["a" /* RoomsManagerService */]) === 'function' && _a) || Object])
    ], AddRoomComponent);
    return AddRoomComponent;
    var _a;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/add-room.component.js.map

/***/ },
/* 834 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return EcceCapitationsComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var EcceCapitationsComponent = (function () {
    function EcceCapitationsComponent() {
        this.valueSet = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    EcceCapitationsComponent.prototype.ngOnChanges = function (changes) {
        this.value = changes.model.currentValue;
    };
    EcceCapitationsComponent.prototype.setValue = function (value) {
        if (this.value == value) {
            this.value = null;
        }
        else {
            this.value = value;
        }
        this.valueSet.emit(this.value);
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Object)
    ], EcceCapitationsComponent.prototype, "model", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(), 
        __metadata('design:type', Object)
    ], EcceCapitationsComponent.prototype, "valueSet", void 0);
    EcceCapitationsComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-ecce-capitations',
            template: __webpack_require__(945),
            styles: [__webpack_require__(895)]
        }), 
        __metadata('design:paramtypes', [])
    ], EcceCapitationsComponent);
    return EcceCapitationsComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/ecce-capitations.component.js.map

/***/ },
/* 835 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_router__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__settings_component__ = __webpack_require__(748);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__centre_rooms_centre_rooms_component__ = __webpack_require__(746);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__centre_families_centre_families_component__ = __webpack_require__(743);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__centre_children_centre_children_component__ = __webpack_require__(741);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__centre_details_centre_details_component__ = __webpack_require__(742);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__centre_subventions_centre_subventions_component__ = __webpack_require__(747);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return routing; });







var settingsRouting = [
    {
        path: '',
        component: __WEBPACK_IMPORTED_MODULE_1__settings_component__["a" /* SettingsComponent */],
        children: [
            { path: '', redirectTo: 'families', terminal: true },
            { path: 'families', component: __WEBPACK_IMPORTED_MODULE_3__centre_families_centre_families_component__["a" /* CentreFamiliesComponent */] },
            { path: 'rooms', component: __WEBPACK_IMPORTED_MODULE_2__centre_rooms_centre_rooms_component__["a" /* CentreRoomsComponent */] },
            { path: 'children', component: __WEBPACK_IMPORTED_MODULE_4__centre_children_centre_children_component__["a" /* CentreChildrenComponent */] },
            { path: 'details', component: __WEBPACK_IMPORTED_MODULE_5__centre_details_centre_details_component__["a" /* CentreDetailsComponent */] },
            { path: 'subventions', component: __WEBPACK_IMPORTED_MODULE_6__centre_subventions_centre_subventions_component__["a" /* CentreSubventionsComponent */] }
        ]
    }
];
var routing = __WEBPACK_IMPORTED_MODULE_0__angular_router__["b" /* RouterModule */].forChild(settingsRouting);
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/settings.routing.js.map

/***/ },
/* 836 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return ConfirmDialogComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var ConfirmDialogComponent = (function () {
    function ConfirmDialogComponent() {
        this.closeDialog = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    ConfirmDialogComponent.prototype.close = function (output) {
        this.closeDialog.emit(output);
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Boolean)
    ], ConfirmDialogComponent.prototype, "showDialog", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', String)
    ], ConfirmDialogComponent.prototype, "message", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(), 
        __metadata('design:type', Object)
    ], ConfirmDialogComponent.prototype, "closeDialog", void 0);
    ConfirmDialogComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-confirm-dialog',
            template: __webpack_require__(947),
            styles: [__webpack_require__(896)]
        }), 
        __metadata('design:paramtypes', [])
    ], ConfirmDialogComponent);
    return ConfirmDialogComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/confirm-dialog.component.js.map

/***/ },
/* 837 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__confirm_dialog_component__ = __webpack_require__(836);
/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__confirm_dialog_component__["a"]; });

//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/index.js.map

/***/ },
/* 838 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(371);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment__ = __webpack_require__(668);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_moment__);
/* unused harmony export CALENDAR_VALUE_ACCESSOR */
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return DatepickerComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var CALENDAR_VALUE_ACCESSOR = {
    provide: __WEBPACK_IMPORTED_MODULE_1__angular_forms__["a" /* NG_VALUE_ACCESSOR */],
    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["forwardRef"])(function () { return DatepickerComponent; }),
    multi: true
};
var DatepickerComponent = (function () {
    function DatepickerComponent(viewContainerRef) {
        this.date = __WEBPACK_IMPORTED_MODULE_2_moment__();
        this.viewDate = null;
        this.days = [];
        this.onTouchedCallback = function () { };
        this.onChangeCallback = function () { };
        this.el = viewContainerRef.element.nativeElement;
    }
    Object.defineProperty(DatepickerComponent.prototype, "value", {
        get: function () {
            return this.viewDate;
        },
        set: function (value) {
            var date = (value instanceof __WEBPACK_IMPORTED_MODULE_2_moment__) ? value : __WEBPACK_IMPORTED_MODULE_2_moment__(value, this.format);
            this.viewDate = date.format(this.viewFormat);
            this.onChangeCallback(value);
        },
        enumerable: true,
        configurable: true
    });
    DatepickerComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.opened = this.opened || false;
        this.format = this.format || 'YYYY-MM-DD';
        this.viewFormat = this.viewFormat || 'Do MMMM YYYY';
        this.firstWeekdaySunday = this.firstWeekdaySunday || false;
        setTimeout(function () {
            if (!_this.viewDate) {
                var value = __WEBPACK_IMPORTED_MODULE_2_moment__();
                _this.value = value;
                _this.onChangeCallback(value.format(_this.format));
            }
            _this.generateCalendar();
        });
        var body = document.querySelector('body');
        body.addEventListener('click', function (e) {
            if (!_this.opened || !e.target) {
                return;
            }
            ;
            if (_this.el !== e.target && !_this.el.contains(e.target)) {
                _this.close();
            }
        }, false);
    };
    DatepickerComponent.prototype.generateCalendar = function () {
        var date = __WEBPACK_IMPORTED_MODULE_2_moment__(this.date);
        var month = date.month();
        var year = date.year();
        var n = 1;
        var firstWeekDay = (this.firstWeekdaySunday) ? date.date(2).day() : date.date(1).day();
        if (firstWeekDay !== 1) {
            n -= (firstWeekDay + 6) % 7;
        }
        this.days = [];
        var selectedDate = __WEBPACK_IMPORTED_MODULE_2_moment__(this.value, this.viewFormat);
        for (var i = n; i <= date.endOf('month').date(); i += 1) {
            var currentDate = __WEBPACK_IMPORTED_MODULE_2_moment__(i + "." + (month + 1) + "." + year, 'DD.MM.YYYY');
            var today = (__WEBPACK_IMPORTED_MODULE_2_moment__().isSame(currentDate, 'day') && __WEBPACK_IMPORTED_MODULE_2_moment__().isSame(currentDate, 'month')) ? true : false;
            var selected = (selectedDate.isSame(currentDate, 'day')) ? true : false;
            if (i > 0) {
                this.days.push({
                    day: i,
                    month: month + 1,
                    year: year,
                    enabled: true,
                    today: today,
                    selected: selected
                });
            }
            else {
                this.days.push({
                    day: null,
                    month: null,
                    year: null,
                    enabled: false,
                    today: false,
                    selected: false
                });
            }
        }
    };
    DatepickerComponent.prototype.selectDate = function (e, i) {
        e.preventDefault();
        var date = this.days[i];
        var selectedDate = __WEBPACK_IMPORTED_MODULE_2_moment__(date.day + "." + date.month + "." + date.year, 'DD.MM.YYYY');
        this.value = selectedDate.format(this.format);
        this.viewDate = selectedDate.format(this.viewFormat);
        this.close();
        this.generateCalendar();
    };
    DatepickerComponent.prototype.prevMonth = function () {
        this.date = this.date.subtract(1, 'month');
        this.generateCalendar();
    };
    DatepickerComponent.prototype.nextMonth = function () {
        this.date = this.date.add(1, 'month');
        this.generateCalendar();
    };
    DatepickerComponent.prototype.prevYear = function () {
        this.date = this.date.subtract(1, 'year');
        this.generateCalendar();
    };
    DatepickerComponent.prototype.nextYear = function () {
        this.date = this.date.add(1, 'year');
        this.generateCalendar();
    };
    DatepickerComponent.prototype.writeValue = function (value) {
        this.viewDate = value;
    };
    DatepickerComponent.prototype.registerOnChange = function (fn) {
        this.onChangeCallback = fn;
    };
    DatepickerComponent.prototype.registerOnTouched = function (fn) {
        this.onTouchedCallback = fn;
    };
    DatepickerComponent.prototype.toggle = function () {
        this.opened = !this.opened;
    };
    DatepickerComponent.prototype.open = function () {
        this.opened = true;
    };
    DatepickerComponent.prototype.close = function () {
        this.opened = false;
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Boolean)
    ], DatepickerComponent.prototype, "expanded", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Boolean)
    ], DatepickerComponent.prototype, "opened", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', String)
    ], DatepickerComponent.prototype, "format", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', String)
    ], DatepickerComponent.prototype, "viewFormat", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Boolean)
    ], DatepickerComponent.prototype, "firstWeekdaySunday", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', String)
    ], DatepickerComponent.prototype, "label", void 0);
    DatepickerComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-datepicker[ngModel]',
            template: __webpack_require__(948),
            styles: [__webpack_require__(897)],
            providers: [CALENDAR_VALUE_ACCESSOR]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewContainerRef"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewContainerRef"]) === 'function' && _a) || Object])
    ], DatepickerComponent);
    return DatepickerComponent;
    var _a;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/datepicker.component.js.map

/***/ },
/* 839 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils__ = __webpack_require__(850);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return FlexCardComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var shadowLevels = [2, 3, 4, 6, 8, 16, 24];
var FlexCardComponent = (function () {
    function FlexCardComponent() {
    }
    FlexCardComponent.prototype.ngOnInit = function () {
        var shadow = this.options.shadow || 3;
        if (shadow) {
            if (shadowLevels.indexOf(shadow) !== -1) {
                this.tableShadow = shadow;
            }
            else {
                console.error('Available shadow levels: ', shadowLevels.join(', '));
            }
        }
    };
    FlexCardComponent.prototype.ngOnChanges = function (changes) {
        var collection = changes['collection'];
        if (collection && collection.currentValue.length !== 0) {
            if (this.currentSort) {
                this.changeSort(this.currentSort.type, this.currentSort.down);
            }
            else {
                this.changeSort('name', true);
            }
        }
    };
    FlexCardComponent.prototype.changeSort = function (type, forceDown) {
        var handler;
        var down = true;
        if (typeof forceDown === 'undefined') {
            if (this.currentSort && type === this.currentSort.type) {
                down = !this.currentSort.down;
            }
        }
        else {
            down = forceDown;
        }
        this.currentSort = { type: type, down: down };
        var sortType = this.options.tooltips
            .filter(function (tooltip) { return !!tooltip.sortTransform; })
            .find(function (tooltip) {
            return tooltip.value === type;
        });
        if (sortType) {
            handler = __WEBPACK_IMPORTED_MODULE_1__utils__["a" /* sortBy */].bind(this, type, this.collection, down, sortType.sortTransform);
        }
        else {
            handler = __WEBPACK_IMPORTED_MODULE_1__utils__["a" /* sortBy */].bind(this, type, this.collection, down);
        }
        this.collection = handler();
    };
    FlexCardComponent.prototype.resolveClass = function (handler) {
        if (this.currentSort && this.currentSort.type === handler) {
            return this.currentSort.down ? 'arrow-down' : 'arrow-up';
        }
        return '';
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Array)
    ], FlexCardComponent.prototype, "collection", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Object)
    ], FlexCardComponent.prototype, "options", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Boolean)
    ], FlexCardComponent.prototype, "loading", void 0);
    FlexCardComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-flex-card',
            template: __webpack_require__(949),
            styles: [__webpack_require__(898)],
            encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
        }), 
        __metadata('design:paramtypes', [])
    ], FlexCardComponent);
    return FlexCardComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/flex-card.component.js.map

/***/ },
/* 840 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__modal_component__ = __webpack_require__(842);
/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__modal_component__["a"]; });

//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/index.js.map

/***/ },
/* 841 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return modalAnimations; });

var animationCurve = 'cubic-bezier(0.47,0,0.745,0.715)';
var timingCurve = function (time) {
    if (time === void 0) { time = .2; }
    return time + 's ' + animationCurve;
};
var modalAnimations = [
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["trigger"])('modal', [
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["state"])('true', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ transform: 'none' })),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["state"])('false', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ transform: 'translateY(-80vh)' })),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["transition"])('0 => 1', [
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["animate"])(timingCurve(.3), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ transform: 'none', opacity: 1 }))
        ]),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["transition"])('1 => 0', [
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ opacity: 0.3 }),
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["animate"])(timingCurve(), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ transform: 'translateY(-80vh)', opacity: 0 }))
        ])
    ]),
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["trigger"])('backdrop', [
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["state"])('true', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ visibility: 'visible' })),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["state"])('false', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ visibility: 'hidden' })),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["transition"])('0 => 1', [
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["animate"])(timingCurve(), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ opacity: 1 }))
        ]),
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["transition"])('1 => 0', [
            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["animate"])(timingCurve(), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["style"])({ opacity: 0 }))
        ])
    ])
];
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/modal.animations.js.map

/***/ },
/* 842 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__modal_animations__ = __webpack_require__(841);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return ModalComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var ModalComponent = (function () {
    function ModalComponent() {
        this.showModal = false;
    }
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Boolean)
    ], ModalComponent.prototype, "showModal", void 0);
    ModalComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-modal',
            template: __webpack_require__(950),
            styles: [__webpack_require__(899)],
            animations: __WEBPACK_IMPORTED_MODULE_1__modal_animations__["a" /* modalAnimations */].slice()
        }), 
        __metadata('design:paramtypes', [])
    ], ModalComponent);
    return ModalComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/modal.component.js.map

/***/ },
/* 843 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__navbar_small_component__ = __webpack_require__(844);
/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__navbar_small_component__["a"]; });

//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/index.js.map

/***/ },
/* 844 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return NavbarSmallComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

// TODO: Needs refactor
var NavbarSmallComponent = (function () {
    function NavbarSmallComponent() {
        this.isVisible = false;
        this.currentTranslation = 0;
        this.thresholdLeft = 0;
        this.arrowWidth = 60;
        this.boundTransition = this.handleTransition.bind(this);
    }
    NavbarSmallComponent.prototype.ngOnInit = function () {
        this.scrollElement = this.nav.nativeElement;
    };
    NavbarSmallComponent.prototype.ngOnChanges = function (changes) {
        var _this = this;
        var routes = changes['routes'].currentValue;
        if (routes && routes.length) {
            // TODO: Fix Change Detection Strategy
            this.isVisible = true;
            setTimeout(function (_) {
                _a = _this.shouldShowArrows(), _this.showRightArrow = _a[0], _this.showLeftArrow = _a[1];
                var _a;
            }, 500);
        }
        else if (!changes['routes'].isFirstChange()) {
            console.log('Please provide routes');
            this.isVisible = false;
        }
    };
    NavbarSmallComponent.prototype.onResize = function (event) {
        if (this.routes && this.routes.length) {
            this.thresholdRight = this.calculateRightThreshold();
            _a = this.shouldShowArrows(), this.showRightArrow = _a[0], this.showLeftArrow = _a[1];
            // Reset transform
            this.transformScroll(0, false);
            console.log('Navbar Small: resize event');
        }
        var _a;
    };
    /**
     *  Returns [boolean, boolean] corresponding right arrow, left arrow.
     */
    NavbarSmallComponent.prototype.shouldShowArrows = function () {
        var parentBoundingRect = this.scrollElement.parentElement.getBoundingClientRect();
        var scrollBoundingRect = this.scrollElement.getBoundingClientRect();
        var threshold = this.calculateRightThreshold();
        if (parentBoundingRect.width - this.arrowWidth * 2 > scrollBoundingRect.width) {
            return [false, false];
        }
        return [
            !!threshold,
            !!this.currentTranslation
        ];
    };
    NavbarSmallComponent.prototype.calculateRightThreshold = function () {
        var arrowEl = this.arrowRight.nativeElement;
        var arrowBoundingRect = arrowEl.getBoundingClientRect();
        var lastChildBoundingRect = this.getLastChild();
        this.arrowWidth = arrowBoundingRect.width;
        return arrowBoundingRect.left - lastChildBoundingRect.right;
    };
    // TODO: Test, if translition completes when there is no element in the remaining space
    NavbarSmallComponent.prototype.scroll = function (direction) {
        var _this = this;
        if (direction === void 0) { direction = 'left'; }
        if (!this.thresholdRight) {
            this.thresholdRight = this.calculateRightThreshold();
        }
        var shift;
        var scrollPower = function (width) { return Math.max(_this.arrowWidth, width); };
        if (direction === 'right') {
            var last = this.getLastChild();
            var lastVisible = this.getLastVisibleChild();
            if (last.left === lastVisible.left) {
                shift = this.thresholdRight;
            }
            else {
                shift = Math.max(this.currentTranslation - scrollPower(last.width) * 2, this.thresholdRight);
            }
        }
        else {
            var first = this.getFirstChild();
            var firstVisible = this.getFirstVisibleChild();
            if (first.left === firstVisible.left) {
                shift = this.thresholdLeft;
            }
            else {
                shift = Math.min(this.currentTranslation + scrollPower(first.width) * 2, this.thresholdLeft);
            }
        }
        this.transformScroll(shift);
    };
    NavbarSmallComponent.prototype.transformScroll = function (shift, notify) {
        if (notify === void 0) { notify = true; }
        this.scrollElement.style.transform = "translateX(" + shift + "px)";
        this.currentTranslation = shift;
        if (notify) {
            this.scrollElement.addEventListener('transitionend', this.boundTransition, false);
        }
    };
    NavbarSmallComponent.prototype.handleTransition = function () {
        _a = this.shouldShowArrows(), this.showRightArrow = _a[0], this.showLeftArrow = _a[1];
        this.scrollElement.removeEventListener('transitionend', this.boundTransition, false);
        var _a;
    };
    NavbarSmallComponent.prototype.getLastVisibleChild = function () {
        var items = this.scrollElement.children;
        var offsetWidth = this.scrollElement.parentElement.offsetWidth - this.arrowWidth * 2;
        for (var i = 0; i < items.length; i++) {
            var itemBr = items[i].getBoundingClientRect();
            if (offsetWidth <= itemBr.left) {
                return itemBr;
            }
        }
        return this.getLastChild();
    };
    NavbarSmallComponent.prototype.getFirstVisibleChild = function () {
        var items = this.scrollElement.children;
        for (var i = 0; i < items.length; i++) {
            var itemBr = items[i].getBoundingClientRect();
            if (itemBr.right >= this.arrowWidth) {
                return itemBr;
            }
        }
        return this.getFirstChild();
    };
    NavbarSmallComponent.prototype.getLastChild = function () {
        var children = this.scrollElement.children;
        return children[children.length - 1].getBoundingClientRect();
    };
    NavbarSmallComponent.prototype.getFirstChild = function () {
        var children = this.scrollElement.children;
        return children[0].getBoundingClientRect();
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Array)
    ], NavbarSmallComponent.prototype, "routes", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', String)
    ], NavbarSmallComponent.prototype, "title", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('nav'), 
        __metadata('design:type', Object)
    ], NavbarSmallComponent.prototype, "nav", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('arrow'), 
        __metadata('design:type', Object)
    ], NavbarSmallComponent.prototype, "arrowRight", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["HostBinding"])('class.has-navbar-small'), 
        __metadata('design:type', Boolean)
    ], NavbarSmallComponent.prototype, "isVisible", void 0);
    NavbarSmallComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-navbar-small',
            template: __webpack_require__(951),
            styles: [__webpack_require__(900)]
        }), 
        __metadata('design:paramtypes', [])
    ], NavbarSmallComponent);
    return NavbarSmallComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/navbar-small.component.js.map

/***/ },
/* 845 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__navbar_component__ = __webpack_require__(846);
/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__navbar_component__["a"]; });

//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/index.js.map

/***/ },
/* 846 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return NavbarComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var NavbarComponent = (function () {
    function NavbarComponent() {
    }
    NavbarComponent.prototype.ngOnInit = function () {
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Object)
    ], NavbarComponent.prototype, "title", void 0);
    NavbarComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-navbar',
            template: __webpack_require__(952),
            styles: [__webpack_require__(901)],
            host: {
                '[class.has-navbar]': 'true'
            }
        }), 
        __metadata('design:paramtypes', [])
    ], NavbarComponent);
    return NavbarComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/navbar.component.js.map

/***/ },
/* 847 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__searchbar_component__ = __webpack_require__(848);
/* harmony namespace reexport (by used) */ __webpack_require__.d(exports, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__searchbar_component__["a"]; });

//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/index.js.map

/***/ },
/* 848 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(371);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return SearchbarComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var SearchbarComponent = (function () {
    function SearchbarComponent(router, renderer) {
        var _this = this;
        this.router = router;
        this.renderer = renderer;
        this.activated = false;
        this.filter = new __WEBPACK_IMPORTED_MODULE_2__angular_forms__["d" /* FormControl */]();
        this.searchFilter = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        /* Close searchbar if not focused */
        this.clickEvents = this.renderer.listenGlobal('window', 'click', function (evt) {
            var isInside = _this.searchbar.nativeElement.contains(evt.target)
                && (evt.target !== _this.searchbar.nativeElement);
            if (!isInside && _this.activated && !_this.textfield.value) {
                _this.activated = !_this.activated;
            }
        });
    }
    SearchbarComponent.prototype.ngOnInit = function () {
        var _this = this;
        var routerSubscription$ = this.router
            .events
            .filter(function (change) {
            return change instanceof __WEBPACK_IMPORTED_MODULE_1__angular_router__["c" /* NavigationStart */];
        })
            .subscribe(function (change) {
            _this.activated = false;
            _this.textfield.value = '';
        });
        var inputSubscription$ = this.filter.valueChanges
            .debounceTime(500)
            .subscribe(function (filter) {
            _this.searchFilter.emit(filter);
        });
        this.subscriptions = routerSubscription$;
        this.subscriptions.add(inputSubscription$);
    };
    SearchbarComponent.prototype.ngOnDestroy = function () {
        this.subscriptions.unsubscribe();
        this.clickEvents();
    };
    SearchbarComponent.prototype.toggleState = function () {
        this.activated = !this.activated;
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(), 
        __metadata('design:type', (typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]) === 'function' && _a) || Object)
    ], SearchbarComponent.prototype, "searchFilter", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('textfield'), 
        __metadata('design:type', Object)
    ], SearchbarComponent.prototype, "textfield", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('searchbar'), 
        __metadata('design:type', Object)
    ], SearchbarComponent.prototype, "searchbar", void 0);
    SearchbarComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-searchbar',
            template: __webpack_require__(953),
            styles: [__webpack_require__(902)],
        }), 
        __metadata('design:paramtypes', [(typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__angular_router__["d" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_router__["d" /* Router */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"]) === 'function' && _c) || Object])
    ], SearchbarComponent);
    return SearchbarComponent;
    var _a, _b, _c;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/searchbar.component.js.map

/***/ },
/* 849 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lite_app_api__ = __webpack_require__(670);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return Profile; });

/**
 * Describes basic profile class.
 *
 */
var Profile = (function () {
    function Profile(profile) {
        this.additional = {
            name: '',
            address1: '',
            address2: '',
            address3: '',
            mainContact: '',
            workPhone: '',
            mobilePhone: '',
            email: '',
            ecceSettings: {
                capitations: 'low'
            }
        };
        Object.assign(this, profile);
        this.picture = __WEBPACK_IMPORTED_MODULE_0__lite_app_api__["a" /* LiteAppAPI */].IMAGE_ENDPOINT + '/' + profile.picture;
    }
    Profile.prototype.toAPIFormat = function () {
        return Object.assign({}, this, {
            picture: this.picture.replace(__WEBPACK_IMPORTED_MODULE_0__lite_app_api__["a" /* LiteAppAPI */].IMAGE_ENDPOINT + '/', '')
        });
    };
    return Profile;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/profile.model.js.map

/***/ },
/* 850 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ exports["a"] = sortBy;
function sortBy(key, ref, reverse, transform) {
    // Mapping with indexes for stable sorting
    var map = ref.map(function (v, i) {
        return { v: v, i: i };
    });
    var standardSort = function (a, b) {
        var keyA = transform ? transform(a[key]) : a[key];
        var keyB = transform ? transform(b[key]) : b[key];
        if (keyA === keyB) {
            var indexA = map.find(function (v) { return v.v === a; }).i;
            var indexB = map.find(function (v) { return v.v === b; }).i;
            return indexA - indexB;
        }
        return keyA > keyB ? -1 : 1;
    };
    return reverse ? ref.sort(standardSort).reverse() : ref.sort(standardSort);
}
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/utils.js.map

/***/ },
/* 851 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return ColoredButtonComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

// TODO: Does this need to be separate component ?
var ColoredButtonComponent = (function () {
    function ColoredButtonComponent() {
        this.message = 'Button';
    }
    ColoredButtonComponent.prototype.ngOnInit = function () {
        this.init();
        this.classes = this.classes ? this.classes.split(' ') : ' ';
    };
    ColoredButtonComponent.prototype.ngOnChanges = function (changes) {
        if (changes.type && typeof changes.type.previousValue == 'string') {
            this.init(changes.type.previousValue);
        }
        else if (changes.message && typeof changes.message.previousValue == 'string') {
            this.init(changes.message.previousValue.toLowerCase().replace(' ', '-'));
        }
    };
    ColoredButtonComponent.prototype.init = function (previousClass) {
        if (previousClass) {
            this.element.nativeElement.classList.remove(previousClass);
        }
        if (this.type === 'status') {
            var ecceClass = this.message.toLowerCase().replace(' ', '-');
            this.element.nativeElement.classList.add(ecceClass);
        }
        else {
            this.element.nativeElement.classList.add(this.type);
        }
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', String)
    ], ColoredButtonComponent.prototype, "message", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', String)
    ], ColoredButtonComponent.prototype, "type", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Object)
    ], ColoredButtonComponent.prototype, "classes", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('button'), 
        __metadata('design:type', Object)
    ], ColoredButtonComponent.prototype, "element", void 0);
    ColoredButtonComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-colored-button',
            template: __webpack_require__(954),
            styles: [__webpack_require__(903)]
        }), 
        __metadata('design:paramtypes', [])
    ], ColoredButtonComponent);
    return ColoredButtonComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/colored-button.component.js.map

/***/ },
/* 852 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__subventions_manager_service__ = __webpack_require__(702);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shared_reports_manager_service__ = __webpack_require__(701);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment__ = __webpack_require__(668);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_moment__);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return EcceModalComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




// TODO: Add TGrant to child Input when awesome-typescript-loader issue #2977 is merged
var EcceModalComponent = (function () {
    function EcceModalComponent(subventionsManager, reportsManager) {
        this.subventionsManager = subventionsManager;
        this.reportsManager = reportsManager;
        this.closeModal = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.step = 0;
        this.saving = false;
        this.pageModel = {
            id: null,
            name: '',
            room: null,
            roomId: null,
            annualModel: '',
            days: [],
            status: true,
            monthly: true,
            capitation: 'low',
            normalFee: 0,
            extras: {
                meals: 0,
                hours: 0,
                trips: 0,
                other: 0,
                voluntary: 0
            },
            startDate: 0
        };
    }
    EcceModalComponent.prototype.ngOnInit = function () {
    };
    EcceModalComponent.prototype.ngOnChanges = function (changes) {
        var child = changes['child'];
        if (child && child.currentValue) {
            this.resetModel(child.currentValue);
        }
    };
    EcceModalComponent.prototype.calculateDailyRate = function (capitation) {
        var model = +this.pageModel.annualModel;
        if (!model) {
            return 0;
        }
        var HIGH_CAPITATION = 2850;
        var LOW_CAPITATION = 2451;
        var daysInWeek = model === 41 ? 4 : 5;
        var capitationValue = capitation === 'low'
            ? LOW_CAPITATION
            : HIGH_CAPITATION;
        return capitationValue / (model * daysInWeek);
    };
    Object.defineProperty(EcceModalComponent.prototype, "modelFactor", {
        get: function () {
            var model = +this.pageModel.annualModel || 0;
            var modelFactor = model === 38 || model === 41
                ? model / 10
                : model / 12;
            return modelFactor;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EcceModalComponent.prototype, "reducedFee", {
        get: function () {
            var modelFactor = this.pageModel.monthly ? this.modelFactor : 1;
            var reducedNormal = this.pageModel.normalFee - modelFactor * this.weeklyTotal;
            var ecceTotal = Math.max(reducedNormal, 0) + modelFactor * this.weeklyTotalExtras;
            return ecceTotal;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EcceModalComponent.prototype, "weeklyTotal", {
        get: function () {
            var days = this.pageModel.days.length;
            var rate = this.calculateDailyRate(this.pageModel.capitation);
            return days * rate;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EcceModalComponent.prototype, "weeklyTotalExtras", {
        get: function () {
            var extras = this.pageModel.extras;
            var keys = Object.keys(extras);
            var extrasValue = keys.reduce(function (prev, curr) {
                return prev + Number(extras[curr]);
            }, 0);
            return extrasValue;
        },
        enumerable: true,
        configurable: true
    });
    EcceModalComponent.prototype.toggleStatus = function () {
        this.pageModel.status = !this.pageModel.status;
    };
    EcceModalComponent.prototype.resetModel = function (child) {
        this.pageModel = Object.assign({}, child, {
            annualModel: child.annualModel || '38',
            startDate: child.startDate || __WEBPACK_IMPORTED_MODULE_3_moment__().month('September').date(1).format('x'),
            extras: Object.assign({}, child.extras),
            days: child.days.slice()
        });
        this.step = 0;
        this.errorMessage = '';
    };
    EcceModalComponent.prototype.handleDays = function (days) {
        if (this.pageModel.annualModel === '41' && days.length === 5) {
            this.errorMessage = 'Maximum days for 41 weeks model is 4';
        }
        else {
            this.errorMessage = '';
        }
        this.pageModel.days = days.slice();
    };
    EcceModalComponent.prototype.handleAnnualModel = function (modelList) {
        var model = modelList[0];
        if (model === '41' && this.pageModel.days.length === 5) {
            this.errorMessage = 'Maximum days for 41 weeks model is 4';
        }
        else {
            this.errorMessage = '';
        }
        this.pageModel.annualModel = model;
    };
    Object.defineProperty(EcceModalComponent.prototype, "date", {
        get: function () {
            return this.pageModel.startDate
                ? __WEBPACK_IMPORTED_MODULE_3_moment__["unix"](this.pageModel.startDate / 1000).format('Do MMMM YYYY')
                : null;
        },
        set: function (value) {
            this.pageModel.startDate = +__WEBPACK_IMPORTED_MODULE_3_moment__(value).format('x');
        },
        enumerable: true,
        configurable: true
    });
    EcceModalComponent.prototype.dismiss = function () {
        this.closeModal.emit();
    };
    EcceModalComponent.prototype.isDisabled = function () {
        return !!this.errorMessage
            || !this.pageModel.startDate
            || !this.pageModel.days.length;
    };
    EcceModalComponent.prototype.saveChanges = function () {
        var _this = this;
        this.saving = true;
        this.subventionsManager.updateChildDetails(this.pageModel).toPromise().then(function (res) {
            _this.saving = false;
            _this.reportsManager.resetReports();
            _this.closeModal.emit();
        }, function (error) { return console.error(error); });
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Object)
    ], EcceModalComponent.prototype, "child", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])('closeModal'), 
        __metadata('design:type', Object)
    ], EcceModalComponent.prototype, "closeModal", void 0);
    EcceModalComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-ecce-modal',
            template: __webpack_require__(955),
            styles: [__webpack_require__(904)]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__subventions_manager_service__["a" /* SubventionsManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__subventions_manager_service__["a" /* SubventionsManagerService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__shared_reports_manager_service__["a" /* ReportsManagerService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__shared_reports_manager_service__["a" /* ReportsManagerService */]) === 'function' && _b) || Object])
    ], EcceModalComponent);
    return EcceModalComponent;
    var _a, _b;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/ecce-modal.component.js.map

/***/ },
/* 853 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return ListButtonsComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var ListButtonsComponent = (function () {
    function ListButtonsComponent() {
        this.toggle = false;
        this.change = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.labels = [];
        this.values = [];
    }
    ListButtonsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.buttons.split('|').forEach(function (button) {
            if (button.indexOf('::') !== -1) {
                var parts = button.split('::');
                _this.values.push(parts[0]);
                _this.labels.push(parts[1]);
            }
            else {
                _this.values.push(button);
                _this.labels.push(button);
            }
        });
        this._buttons = this.calculateActive();
    };
    ListButtonsComponent.prototype.ngOnChanges = function (change) {
        if (change.inputValues.currentValue) {
            this._buttons = this.calculateActive();
        }
    };
    ListButtonsComponent.prototype.toggleChange = function (button) {
        if (this.toggle) {
            this._buttons.forEach(function (button) { return button.status = 'inactive'; });
        }
        button.status = button.status === 'active' ? 'inactive' : 'active';
        this.change.emit(this._buttons.filter(function (button) { return button.status === 'active'; }).map(function (button) { return button.value; }));
    };
    ListButtonsComponent.prototype.calculateActive = function () {
        var _this = this;
        return this.values.map(function (value, index) {
            return {
                name: _this.labels[index],
                value: value,
                status: (Array.isArray(_this.inputValues) && _this.inputValues.indexOf(value) !== -1) || _this.inputValues == value ? 'active' : 'inactive'
            };
        });
    };
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Object)
    ], ListButtonsComponent.prototype, "buttons", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('values'), 
        __metadata('design:type', Object)
    ], ListButtonsComponent.prototype, "inputValues", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Object)
    ], ListButtonsComponent.prototype, "interactive", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Boolean)
    ], ListButtonsComponent.prototype, "toggle", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(), 
        __metadata('design:type', Object)
    ], ListButtonsComponent.prototype, "classes", void 0);
    __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(), 
        __metadata('design:type', Object)
    ], ListButtonsComponent.prototype, "change", void 0);
    ListButtonsComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-list-buttons',
            template: __webpack_require__(956),
            styles: [__webpack_require__(905)]
        }), 
        __metadata('design:paramtypes', [])
    ], ListButtonsComponent);
    return ListButtonsComponent;
}());
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/list-buttons.component.js.map

/***/ },
/* 854 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_router__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__subventions_component__ = __webpack_require__(750);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return routing; });


var subventionsRoutes = [
    {
        path: '',
        component: __WEBPACK_IMPORTED_MODULE_1__subventions_component__["a" /* SubventionsComponent */]
    }
];
var routing = __WEBPACK_IMPORTED_MODULE_0__angular_router__["b" /* RouterModule */].forChild(subventionsRoutes);
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/subventions.routing.js.map

/***/ },
/* 855 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_router__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__verify_component__ = __webpack_require__(751);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return routing; });


var verifyRouting = [
    {
        path: '',
        component: __WEBPACK_IMPORTED_MODULE_1__verify_component__["a" /* VerifyComponent */]
    },
    {
        path: ':token',
        component: __WEBPACK_IMPORTED_MODULE_1__verify_component__["a" /* VerifyComponent */]
    }
];
var routing = __WEBPACK_IMPORTED_MODULE_0__angular_router__["b" /* RouterModule */].forChild(verifyRouting);
//# sourceMappingURL=/home/anatol/tasks/angular2-little-app/src/verify.routing.js.map

/***/ },
/* 856 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * angular2-cookie - Implementation of Angular 1.x $cookies service to Angular 2
 * @version v1.2.5
 * @link https://github.com/salemdar/angular2-cookie#readme
 * @license MIT
 */
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var core_1 = __webpack_require__(0);
var base_cookie_options_1 = __webpack_require__(754);
var CookieService = (function () {
    function CookieService(_defaultOptions) {
        this._defaultOptions = _defaultOptions;
    }
    /**
     * @name CookieService#get
     *
     * @description
     * Returns the value of given cookie key.
     *
     * @param {string} key Id to use for lookup.
     * @returns {string} Raw cookie value.
     */
    CookieService.prototype.get = function (key) {
        return this._cookieReader()[key];
    };
    /**
     * @name CookieService#getObject
     *
     * @description
     * Returns the deserialized value of given cookie key.
     *
     * @param {string} key Id to use for lookup.
     * @returns {Object} Deserialized cookie value.
     */
    CookieService.prototype.getObject = function (key) {
        var value = this.get(key);
        return value ? JSON.parse(value) : value;
    };
    /**
     * @name CookieService#getAll
     *
     * @description
     * Returns a key value object with all the cookies.
     *
     * @returns {Object} All cookies
     */
    CookieService.prototype.getAll = function () {
        return this._cookieReader();
    };
    /**
     * @name CookieService#put
     *
     * @description
     * Sets a value for given cookie key.
     *
     * @param {string} key Id for the `value`.
     * @param {string} value Raw value to be stored.
     * @param {CookieOptionsArgs} options (Optional) Options object.
     */
    CookieService.prototype.put = function (key, value, options) {
        this._cookieWriter()(key, value, options);
    };
    /**
     * @name CookieService#putObject
     *
     * @description
     * Serializes and sets a value for given cookie key.
     *
     * @param {string} key Id for the `value`.
     * @param {Object} value Value to be stored.
     * @param {CookieOptionsArgs} options (Optional) Options object.
     */
    CookieService.prototype.putObject = function (key, value, options) {
        this.put(key, JSON.stringify(value), options);
    };
    /**
     * @name CookieService#remove
     *
     * @description
     * Remove given cookie.
     *
     * @param {string} key Id of the key-value pair to delete.
     * @param {CookieOptionsArgs} options (Optional) Options object.
     */
    CookieService.prototype.remove = function (key, options) {
        this._cookieWriter()(key, undefined, options);
    };
    /**
     * @name CookieService#removeAll
     *
     * @description
     * Remove all cookies.
     */
    CookieService.prototype.removeAll = function () {
        var _this = this;
        var cookies = this.getAll();
        Object.keys(cookies).forEach(function (key) {
            _this.remove(key);
        });
    };
    CookieService.prototype._cookieReader = function () {
        var rawDocument = document;
        var lastCookies = {};
        var lastCookieString = '';
        var that = this;
        var cookieArray, cookie, i, index, name;
        var currentCookieString = rawDocument.cookie || '';
        if (currentCookieString !== lastCookieString) {
            lastCookieString = currentCookieString;
            cookieArray = lastCookieString.split('; ');
            lastCookies = {};
            for (i = 0; i < cookieArray.length; i++) {
                cookie = cookieArray[i];
                index = cookie.indexOf('=');
                if (index > 0) {
                    name = that._safeDecodeURIComponent(cookie.substring(0, index));
                    // the first value that is seen for a cookie is the most
                    // specific one.  values for the same cookie name that
                    // follow are for less specific paths.
                    if (this.isBlank(lastCookies[name])) {
                        lastCookies[name] = that._safeDecodeURIComponent(cookie.substring(index + 1));
                    }
                }
            }
        }
        return lastCookies;
    };
    CookieService.prototype._cookieWriter = function () {
        var that = this;
        var rawDocument = document;
        return function (name, value, options) {
            rawDocument.cookie = that._buildCookieString(name, value, options);
        };
    };
    CookieService.prototype._safeDecodeURIComponent = function (str) {
        try {
            return decodeURIComponent(str);
        }
        catch (e) {
            return str;
        }
    };
    CookieService.prototype._buildCookieString = function (name, value, options) {
        var cookiePath = '/';
        var path, expires;
        var defaultOpts = this._defaultOptions || new base_cookie_options_1.CookieOptions({ path: cookiePath });
        var opts = this._mergeOptions(defaultOpts, options);
        expires = opts.expires;
        if (this.isBlank(value)) {
            expires = 'Thu, 01 Jan 1970 00:00:00 GMT';
            value = '';
        }
        if (this.isString(expires)) {
            expires = new Date(expires);
        }
        var str = encodeURIComponent(name) + '=' + encodeURIComponent(value);
        str += opts.path ? ';path=' + opts.path : '';
        str += opts.domain ? ';domain=' + opts.domain : '';
        str += expires ? ';expires=' + expires.toUTCString() : '';
        str += opts.secure ? ';secure' : '';
        // per http://www.ietf.org/rfc/rfc2109.txt browser must allow at minimum:
        // - 300 cookies
        // - 20 cookies per unique domain
        // - 4096 bytes per cookie
        var cookieLength = str.length + 1;
        if (cookieLength > 4096) {
            console.log("Cookie '" + name + "' possibly not set or overflowed because it was too \n      large (" + cookieLength + " > 4096 bytes)!");
        }
        return str;
    };
    CookieService.prototype._mergeOptions = function (defaultOpts, providedOpts) {
        var newOpts = defaultOpts;
        if (this.isPresent(providedOpts)) {
            return newOpts.merge(new base_cookie_options_1.CookieOptions(providedOpts));
        }
        return newOpts;
    };
    CookieService.prototype.isBlank = function (obj) {
        return obj === undefined || obj === null;
    };
    CookieService.prototype.isPresent = function (obj) {
        return obj !== undefined && obj !== null;
    };
    CookieService.prototype.isString = function (obj) {
        return typeof obj === 'string';
    };
    CookieService = __decorate([
        core_1.Injectable(),
        __param(0, core_1.Optional()), 
        __metadata('design:paramtypes', [base_cookie_options_1.CookieOptions])
    ], CookieService);
    return CookieService;
}());
exports.CookieService = CookieService;

//# sourceMappingURL=cookies.service.js.map


/***/ },
/* 857 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ exports["a"] = MaterialRipple;
/**
 * @license
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
'use strict';
/**
 * Class constructor for Ripple MDL component.
 * Implements MDL component design pattern defined at:
 * https://github.com/jasonmayes/mdl-component-design-pattern
 *
 * @constructor
 * @param {HTMLElement} element The element that will be upgraded.
 */
function MaterialRipple(renderer, element) {
    this.renderer_ = renderer;
    this.element_ = element;
    // Initialize instance.
    this.init();
}
;
/**
 * Store constants in one place so they can be updated easily.
 *
 * @enum {string | number}
 * @private
 */
MaterialRipple.prototype.Constant_ = {
    INITIAL_SCALE: 'scale(0.0001, 0.0001)',
    INITIAL_SIZE: '1px',
    INITIAL_OPACITY: '0.4',
    FINAL_OPACITY: '0',
    FINAL_SCALE: ''
};
/**
 * Store strings for class names defined by this component that are used in
 * JavaScript. This allows us to simply change it in one place should we
 * decide to modify at a later date.
 *
 * @enum {string}
 * @private
 */
MaterialRipple.prototype.CssClasses_ = {
    RIPPLE_CENTER: 'mdl-ripple--center',
    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',
    RIPPLE: 'mdl-ripple',
    IS_ANIMATING: 'is-animating',
    IS_VISIBLE: 'is-visible'
};
/**
 * Handle mouse / finger down on element.
 *
 * @param {Event} event The event that fired.
 * @private
 */
MaterialRipple.prototype.downHandler_ = function (event) {
    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {
        var rect = this.element_.getBoundingClientRect();
        this.boundHeight = rect.height;
        this.boundWidth = rect.width;
        this.rippleSize_ = Math.sqrt(rect.width * rect.width +
            rect.height * rect.height) * 2 + 2;
        this.rippleElement_.style.width = this.rippleSize_ + 'px';
        this.rippleElement_.style.height = this.rippleSize_ + 'px';
    }
    this.renderer_.setElementClass(this.rippleElement_, this.CssClasses_.IS_VISIBLE, true);
    if (event.type === 'mousedown' && this.ignoringMouseDown_) {
        this.ignoringMouseDown_ = false;
    }
    else {
        if (event.type === 'touchstart') {
            this.ignoringMouseDown_ = true;
        }
        var frameCount = this.getFrameCount();
        if (frameCount > 0) {
            return;
        }
        this.setFrameCount(1);
        var bound = event.currentTarget.getBoundingClientRect();
        var x;
        var y;
        // Check if we are handling a keyboard click.
        if (event.clientX === 0 && event.clientY === 0) {
            x = Math.round(bound.width / 2);
            y = Math.round(bound.height / 2);
        }
        else {
            var clientX = event.clientX !== undefined ? event.clientX : event.touches[0].clientX;
            var clientY = event.clientY !== undefined ? event.clientY : event.touches[0].clientY;
            x = Math.round(clientX - bound.left);
            y = Math.round(clientY - bound.top);
        }
        this.setRippleXY(x, y);
        this.setRippleStyles(true);
        window.requestAnimationFrame(this.animFrameHandler.bind(this));
    }
};
/**
 * Handle mouse / finger up on element.
 *
 * @param {Event} event The event that fired.
 * @private
 */
MaterialRipple.prototype.upHandler_ = function (event) {
    // Don't fire for the artificial "mouseup" generated by a double-click.
    if (event && event.detail !== 2) {
        // Allow a repaint to occur before removing this class, so the animation
        // shows for tap events, which seem to trigger a mouseup too soon after
        // mousedown.
        setTimeout(function () {
            this.renderer_.setElementClass(this.rippleElement_, this.CssClasses_.IS_VISIBLE, false);
        }.bind(this), 0);
    }
};
/**
 * Initialize element.
 */
MaterialRipple.prototype.init = function () {
    if (this.element_) {
        var recentering = this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);
        if (!this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {
            this.rippleElement_ = this.element_.querySelector('.' +
                this.CssClasses_.RIPPLE);
            this.frameCount_ = 0;
            this.rippleSize_ = 0;
            this.x_ = 0;
            this.y_ = 0;
            // Touch start produces a compat mouse down event, which would cause a
            // second ripples. To avoid that, we use this property to ignore the first
            // mouse down after a touch start.
            this.ignoringMouseDown_ = false;
            this.boundDownHandler = this.downHandler_.bind(this);
            this.element_.addEventListener('mousedown', this.boundDownHandler);
            this.element_.addEventListener('touchstart', this.boundDownHandler);
            this.boundUpHandler = this.upHandler_.bind(this);
            this.element_.addEventListener('mouseup', this.boundUpHandler);
            this.element_.addEventListener('mouseleave', this.boundUpHandler);
            this.element_.addEventListener('touchend', this.boundUpHandler);
            this.element_.addEventListener('blur', this.boundUpHandler);
            /**
             * Getter for frameCount_.
             * @return {number} the frame count.
             */
            this.getFrameCount = function () {
                return this.frameCount_;
            };
            /**
             * Setter for frameCount_.
             * @param {number} fC the frame count.
             */
            this.setFrameCount = function (fC) {
                this.frameCount_ = fC;
            };
            /**
             * Getter for rippleElement_.
             * @return {Element} the ripple element.
             */
            this.getRippleElement = function () {
                return this.rippleElement_;
            };
            /**
             * Sets the ripple X and Y coordinates.
             * @param  {number} newX the new X coordinate
             * @param  {number} newY the new Y coordinate
             */
            this.setRippleXY = function (newX, newY) {
                this.x_ = newX;
                this.y_ = newY;
            };
            /**
             * Sets the ripple styles.
             * @param  {boolean} start whether or not this is the start frame.
             */
            this.setRippleStyles = function (start) {
                if (this.rippleElement_ !== null) {
                    var transformString;
                    var scale;
                    var size;
                    var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';
                    if (start) {
                        scale = this.Constant_.INITIAL_SCALE;
                        size = this.Constant_.INITIAL_SIZE;
                    }
                    else {
                        scale = this.Constant_.FINAL_SCALE;
                        size = this.rippleSize_ + 'px';
                        if (recentering) {
                            offset = 'translate(' + this.boundWidth / 2 + 'px, ' +
                                this.boundHeight / 2 + 'px)';
                        }
                    }
                    transformString = 'translate(-50%, -50%) ' + offset + scale;
                    this.rippleElement_.style.webkitTransform = transformString;
                    this.rippleElement_.style.msTransform = transformString;
                    this.rippleElement_.style.transform = transformString;
                    this.renderer_.setElementClass(this.rippleElement_, this.CssClasses_.IS_ANIMATING, !start);
                }
            };
            /**
             * Handles an animation frame.
             */
            this.animFrameHandler = function () {
                if (this.frameCount_-- > 0) {
                    window.requestAnimationFrame(this.animFrameHandler.bind(this));
                }
                else {
                    this.setRippleStyles(false);
                }
            };
        }
    }
};
//# sourceMappingURL=ripple.vendor.js.map

/***/ },
/* 858 */
/***/ function(module, exports) {

//# sourceMappingURL=mdl-dialog-configuration.js.map

/***/ },
/* 859 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__button_mdl_button_component__ = __webpack_require__(680);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlToggleMenuDirective; });


var MdlToggleMenuDirective = (function () {
    function MdlToggleMenuDirective(button) {
        this.button = button;
    }
    MdlToggleMenuDirective.prototype.onClick = function ($event) {
        this.menu.toggle($event, this.button);
    };
    MdlToggleMenuDirective.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"], args: [{
                    selector: '[mdl-button][mdl-toggle-menu]'
                },] },
    ];
    /** @nocollapse */
    MdlToggleMenuDirective.ctorParameters = function () { return [
        { type: __WEBPACK_IMPORTED_MODULE_1__button_mdl_button_component__["a" /* MdlButtonComponent */], },
    ]; };
    MdlToggleMenuDirective.propDecorators = {
        'menu': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"], args: ['mdl-toggle-menu',] },],
        'onClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"], args: ['click', ['$event'],] },],
    };
    return MdlToggleMenuDirective;
}());
//# sourceMappingURL=mdl-toggle-menu.directive.js.map

/***/ },
/* 860 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return MdlTooltipPositionService; });

var MdlTooltipPositionService = (function () {
    function MdlTooltipPositionService() {
    }
    MdlTooltipPositionService.prototype.calcStyle = function (offsetWidth, offsetHeight, props, position) {
        var result = {};
        var left = props.left + (props.width / 2);
        var top = props.top + (props.height / 2);
        var marginLeft = -1 * (offsetWidth / 2);
        var marginTop = -1 * (offsetHeight / 2);
        if (position == 'left' || position == 'right') {
            left = (props.width / 2);
            if (top + marginTop < 0) {
                result.top = '0';
                result.marginTop = '0';
            }
            else {
                result.top = top + 'px';
                result.marginTop = marginTop + 'px';
            }
        }
        else {
            if (left + marginLeft < 0) {
                result.left = '0';
                result.marginLeft = '0';
            }
            else {
                result.left = left + 'px';
                result.marginLeft = marginLeft + 'px';
            }
        }
        if (position == 'top') {
            result.top = props.top - offsetHeight - 10 + 'px';
        }
        else if (position == 'right') {
            result.left = props.left + props.width + 10 + 'px';
        }
        else if (position == 'left') {
            result.left = props.left - offsetWidth - 10 + 'px';
        }
        else {
            result.top = props.top + props.height + 10 + 'px';
        }
        return result;
    };
    MdlTooltipPositionService.decorators = [
        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"] },
    ];
    /** @nocollapse */
    MdlTooltipPositionService.ctorParameters = function () { return []; };
    return MdlTooltipPositionService;
}());
//# sourceMappingURL=mdl-tooltip-position.service.js.map

/***/ },
/* 861 */
/***/ function(module, exports) {

module.exports = "/* Warning this component uses no ViewEncapsulation */\n.attendance .flex-card {\n  margin: 0;\n  margin-right: 20px; }\n  .attendance .flex-card .col:first-child {\n    -webkit-box-flex: 0;\n        -ms-flex: 0 0 5%;\n            flex: 0 0 5%; }\n    .attendance .flex-card .col:first-child img {\n      border-radius: 50%;\n      width: 3rem; }\n  .attendance .flex-card .col.presence-col {\n    text-align: center;\n    min-width: 30%; }\n  .attendance .flex-card .col.time-col span {\n    cursor: pointer; }\n\n.mdl-snackbar {\n  will-change: unset; }\n"

/***/ },
/* 862 */
/***/ function(module, exports) {

module.exports = ".presence-bar mdl-button {\n  color: rgba(0, 0, 0, 0.12);\n  padding: 0 20px !important;\n  min-width: 20px; }\n  .presence-bar mdl-button.active {\n    color: #fff; }\n  .presence-bar mdl-button.status-in {\n    background-color: #dffbdd; }\n    .presence-bar mdl-button.status-in.active {\n      background-color: #70cc69; }\n  .presence-bar mdl-button.status-out {\n    background-color: #f1efef; }\n    .presence-bar mdl-button.status-out.active {\n      background-color: #a0a0a0; }\n  .presence-bar mdl-button.status-absent {\n    background-color: #ffe3e3; }\n    .presence-bar mdl-button.status-absent.active {\n      background-color: #e49696; }\n"

/***/ },
/* 863 */
/***/ function(module, exports) {

module.exports = ".timepicker {\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  white-space: nowrap;\n  background-color: #f7afc1;\n  color: #fff; }\n  .timepicker mdl-button {\n    color: #fff;\n    padding: 0;\n    margin: 0 !important;\n    min-width: 20px;\n    margin: 5px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none; }\n  .timepicker span {\n    cursor: pointer; }\n"

/***/ },
/* 864 */
/***/ function(module, exports) {

module.exports = ".layout-content {\n  background-color: #ffffff;\n  padding: 0; }\n  .layout-content .header {\n    background-color: #f4f5f7; }\n    .layout-content .header img {\n      display: block;\n      width: 500px;\n      height: auto;\n      margin: auto; }\n    .layout-content .header .header-children {\n      width: 80%;\n      padding: 25px; }\n  .layout-content .main-content {\n    padding: 80px 15px;\n    max-width: 1044px;\n    margin-left: auto;\n    margin-right: auto; }\n    .layout-content .main-content p.title {\n      margin: 0 0 24px 12px; }\n    .layout-content .main-content .mdl-grid .mdl-card {\n      position: relative; }\n      .layout-content .main-content .mdl-grid .mdl-card .mdl-card__media {\n        background-color: transparent; }\n        .layout-content .main-content .mdl-grid .mdl-card .mdl-card__media img {\n          width: 100%; }\n      .layout-content .main-content .mdl-grid .mdl-card .mdl-card__supporting-text {\n        height: auto;\n        color: black;\n        padding-bottom: 56px; }\n      .layout-content .main-content .mdl-grid .mdl-card .mdl-card__actions {\n        position: absolute;\n        bottom: 0; }\n      .layout-content .main-content .mdl-grid .mdl-card .card-button {\n        border-top: none;\n        font-size: 16px;\n        text-decoration: none;\n        color: #8bc34a; }\n"

/***/ },
/* 865 */
/***/ function(module, exports) {

module.exports = ".dashboard .drawer {\n  border: none;\n  -webkit-box-pack: end;\n      -ms-flex-pack: end;\n          justify-content: flex-end; }\n  .dashboard .drawer .drawer-content {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-flow: column nowrap;\n        flex-flow: column nowrap;\n    height: 100%;\n    background-color: white; }\n    .dashboard .drawer .drawer-content .nav-container {\n      height: 100%;\n      overflow-y: auto; }\n    .dashboard .drawer .drawer-content .profile-info {\n      padding: 15px;\n      /*background: $background-gray;*/\n      color: #fff; }\n      .dashboard .drawer .drawer-content .profile-info p {\n        font-size: 1.4rem;\n        margin: 0; }\n      .dashboard .drawer .drawer-content .profile-info img {\n        max-width: 4rem;\n        border-radius: 50%;\n        margin: 15px 0; }\n    .dashboard .drawer .drawer-content .mdl-navigation__link {\n      font-weight: 600;\n      color: #747474; }\n      .dashboard .drawer .drawer-content .mdl-navigation__link mdl-icon {\n        margin-right: 10px; }\n    .dashboard .drawer .drawer-content .profile-settings {\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1; }\n      .dashboard .drawer .drawer-content .profile-settings .drawer-logo {\n        /*border-top: 1px solid $background-gray-dark;*/\n        height: 70px;\n        /*background-color: $background-gray;*/\n        background-image: url(\"/assets/img/logo-small.png\");\n        background-size: 65% 30%;\n        background-repeat: no-repeat;\n        background-position: 50% 50%; }\n\n.dashboard .main-content {\n  overflow: hidden; }\n"

/***/ },
/* 866 */
/***/ function(module, exports) {

module.exports = "mdl-textfield {\n  padding: 0px;\n  width: 100%; }\n\n.payment-view {\n  background-color: #faf9f8; }\n  .payment-view .accordion-header {\n    border-top: 1px solid #79a699;\n    height: 30px;\n    background-color: #94cbbb;\n    color: white;\n    font-size: 1.2em;\n    font-weight: bold;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center; }\n  .payment-view .accordion-body {\n    min-height: 50px; }\n    .payment-view .accordion-body .email-invoice {\n      width: 50%;\n      padding: 10px; }\n    .payment-view .accordion-body .pp-icons {\n      margin-left: 10px;\n      text-indent: 0px;\n      border-radius: 5px;\n      font-size: 0.8em;\n      text-align: center;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      color: white;\n      padding: 0px 12px;\n      height: 25px;\n      line-height: 25px;\n      white-space: nowrap;\n      display: inline-block; }\n      .payment-view .accordion-body .pp-icons.icon-active {\n        background-color: #76b75f; }\n      .payment-view .accordion-body .pp-icons.icon-pastdue {\n        background-color: #d2b13d;\n        font-weight: bold; }\n      .payment-view .accordion-body .pp-icons.icon-inarrears {\n        background-color: #ce813a; }\n      .payment-view .accordion-body .pp-icons.icon-projected {\n        background-color: #7775aa; }\n      .payment-view .accordion-body .pp-icons.icon-remove {\n        background-color: #e23a69; }\n      .payment-view .accordion-body .pp-icons.icon-late {\n        background: #ce823a;\n        background: -webkit-gradient(left top, right top, color-stop(0%, #ce823a), color-stop(51%, #ce823a), color-stop(51%, #d2b23d), color-stop(100%, #d2b23d));\n        background: -webkit-linear-gradient(left, #ce823a 0%, #ce823a 51%, #d2b23d 51%, #d2b23d 100%);\n        background: linear-gradient(to right, #ce823a 0%, #ce823a 51%, #d2b23d 51%, #d2b23d 100%);\n        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ce823a', endColorstr='#d2b23d', GradientType=1 ); }\n      .payment-view .accordion-body .pp-icons.icon-unpaid {\n        border: 1px solid #76b75f;\n        font-weight: bold;\n        height: 23px;\n        color: #76b75f; }\n        .payment-view .accordion-body .pp-icons.icon-unpaid .iv {\n          border: 1px solid #76b75f;\n          border-radius: 50%;\n          width: 10px;\n          height: 10px;\n          line-height: 10px;\n          display: inline-block; }\n      .payment-view .accordion-body .pp-icons.icon-paid {\n        background-color: #76b75f;\n        font-weight: bold;\n        color: white; }\n        .payment-view .accordion-body .pp-icons.icon-paid .iv {\n          background-color: white;\n          border-radius: 50%;\n          color: #76b75f;\n          width: 10px;\n          height: 10px;\n          line-height: 10px;\n          display: inline-block; }\n    .payment-view .accordion-body .pp-icons:first-child {\n      margin: 0px; }\n    .payment-view .accordion-body .accordion-body-inner {\n      padding: 20px; }\n      .payment-view .accordion-body .accordion-body-inner .mandate {\n        width: 10px;\n        height: 10px;\n        border-radius: 50%; }\n      .payment-view .accordion-body .accordion-body-inner .not-sent {\n        border: 2px solid #76b75f; }\n      .payment-view .accordion-body .accordion-body-inner .pending {\n        background-color: #d2b13d;\n        border: 2px solid #d2b13d; }\n      .payment-view .accordion-body .accordion-body-inner .active {\n        background-color: #76b75f;\n        border: 2px solid #76b75f; }\n      .payment-view .accordion-body .accordion-body-inner .v-payments {\n        height: 300px;\n        -webkit-box-flex: 10;\n            -ms-flex: 10;\n                flex: 10; }\n        .payment-view .accordion-body .accordion-body-inner .v-payments .v-header {\n          height: 30px;\n          border-bottom: 1px solid #999;\n          font-weight: bold;\n          color: #444;\n          font-size: 1.1em;\n          -webkit-box-align: center;\n              -ms-flex-align: center;\n                  align-items: center; }\n          .payment-view .accordion-body .accordion-body-inner .v-payments .v-header .not-bold {\n            font-weight: normal;\n            font-size: 0.9em; }\n        .payment-view .accordion-body .accordion-body-inner .v-payments .v-body {\n          height: 220px;\n          overflow-y: auto;\n          padding: 10px 0px;\n          color: #8b8681; }\n          .payment-view .accordion-body .accordion-body-inner .v-payments .v-body .col {\n            height: 30px;\n            -webkit-box-align: center;\n                -ms-flex-align: center;\n                    align-items: center; }\n        .payment-view .accordion-body .accordion-body-inner .v-payments .v-footer {\n          height: 50px; }\n          .payment-view .accordion-body .accordion-body-inner .v-payments .v-footer .col {\n            padding: 5px 0px; }\n        .payment-view .accordion-body .accordion-body-inner .v-payments .width-8 {\n          width: 80%; }\n        .payment-view .accordion-body .accordion-body-inner .v-payments .width-1 {\n          width: 3%; }\n        .payment-view .accordion-body .accordion-body-inner .v-payments .width-2 {\n          width: 17%; }\n      .payment-view .accordion-body .accordion-body-inner .direct-debit {\n        -webkit-box-flex: 10;\n            -ms-flex: 10;\n                flex: 10; }\n      .payment-view .accordion-body .accordion-body-inner .total-area {\n        -webkit-box-flex: 10;\n            -ms-flex: 10;\n                flex: 10; }\n        .payment-view .accordion-body .accordion-body-inner .total-area .invoice-list {\n          padding-top: 20px; }\n          .payment-view .accordion-body .accordion-body-inner .total-area .invoice-list .row {\n            padding: 10px 0px;\n            -webkit-box-align: center;\n                -ms-flex-align: center;\n                    align-items: center; }\n"

/***/ },
/* 867 */
/***/ function(module, exports) {

module.exports = ".choose-org-type p {\n  color: #987b7b; }\n  .choose-org-type p.title {\n    font-size: 1.8rem;\n    font-weight: bold; }\n\n.choose-org-type .row {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  border-bottom: 1px solid #939598;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  text-align: center;\n  color: #565656; }\n  .choose-org-type .row .col {\n    -webkit-box-flex: 1;\n        -ms-flex: 1;\n            flex: 1;\n    padding: 10px 0; }\n    .choose-org-type .row .col .point {\n      margin: auto;\n      width: 10px;\n      height: 10px;\n      border-radius: 50%;\n      background-color: #939598; }\n    .choose-org-type .row .col.type-col {\n      -webkit-box-flex: 0;\n          -ms-flex: 0 0 30%;\n              flex: 0 0 30%;\n      text-align: left;\n      padding-left: 5px; }\n  .choose-org-type .row:hover {\n    background-color: #dedede;\n    cursor: pointer; }\n  .choose-org-type .row.tooltips {\n    color: #3f42a5;\n    font-size: 13px;\n    line-height: 16px; }\n    .choose-org-type .row.tooltips:hover {\n      background-color: initial;\n      cursor: initial; }\n"

/***/ },
/* 868 */
/***/ function(module, exports) {

module.exports = ".backdrop {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  z-index: 99;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center; }\n  .backdrop .modal {\n    position: relative;\n    min-width: 30%;\n    max-width: 80%;\n    box-sizing: border-box;\n    border-radius: 5px;\n    background-color: white; }\n    .backdrop .modal .simple-popup {\n      max-width: 600px;\n      padding: 5px 15px;\n      color: #888; }\n      .backdrop .modal .simple-popup .popup-header {\n        height: 40px;\n        -webkit-box-pack: end;\n            -ms-flex-pack: end;\n                justify-content: flex-end;\n        -webkit-box-align: center;\n            -ms-flex-align: center;\n                align-items: center; }\n      .backdrop .modal .simple-popup .popup-content {\n        padding: 10px; }\n      .backdrop .modal .simple-popup .popup-footer {\n        -webkit-box-pack: end;\n            -ms-flex-pack: end;\n                justify-content: flex-end; }\n        .backdrop .modal .simple-popup .popup-footer mdl-button {\n          color: #76ba7e; }\n"

/***/ },
/* 869 */
/***/ function(module, exports) {

module.exports = ".easy-fees-dashboard .pane-info {\n  background-color: white;\n  border-radius: 5px;\n  min-height: 50px; }\n  .easy-fees-dashboard .pane-info .info {\n    height: 100px;\n    color: #8a817b; }\n    .easy-fees-dashboard .pane-info .info .title {\n      padding-top: 15px;\n      text-indent: 2px; }\n    .easy-fees-dashboard .pane-info .info mdl-icon {\n      font-size: 3.5em; }\n      .easy-fees-dashboard .pane-info .info mdl-icon.account {\n        color: #666; }\n      .easy-fees-dashboard .pane-info .info mdl-icon.confirm {\n        color: #76b75f; }\n      .easy-fees-dashboard .pane-info .info mdl-icon.pending {\n        color: #d6803a; }\n      .easy-fees-dashboard .pane-info .info mdl-icon.reject {\n        color: #dd5358; }\n    .easy-fees-dashboard .pane-info .info .count {\n      padding-left: 20px; }\n      .easy-fees-dashboard .pane-info .info .count .num {\n        font-size: 1.5em; }\n\n.easy-fees-dashboard .pane-list {\n  background-color: white;\n  border-radius: 5px;\n  min-height: 50px; }\n  .easy-fees-dashboard .pane-list .list-header {\n    position: relative;\n    height: 60px; }\n    .easy-fees-dashboard .pane-list .list-header .h-name {\n      -webkit-box-pack: center;\n          -ms-flex-pack: center;\n              justify-content: center;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      font-size: 1.8em; }\n    .easy-fees-dashboard .pane-list .list-header .picker-row {\n      position: relative;\n      height: 50px;\n      border-top-right-radius: 5px;\n      border-top-left-radius: 5px; }\n      .easy-fees-dashboard .pane-list .list-header .picker-row mdl-icon {\n        cursor: pointer;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none; }\n      .easy-fees-dashboard .pane-list .list-header .picker-row .month-picker {\n        display: -webkit-inline-box;\n        display: -ms-inline-flexbox;\n        display: inline-flex;\n        -webkit-box-align: center;\n            -ms-flex-align: center;\n                align-items: center;\n        line-height: 50px;\n        font-size: 1.8rem; }\n        .easy-fees-dashboard .pane-list .list-header .picker-row .month-picker .title {\n          font-weight: 300; }\n    .easy-fees-dashboard .pane-list .list-header .sort-button {\n      -webkit-box-pack: end;\n          -ms-flex-pack: end;\n              justify-content: flex-end;\n      -webkit-box-align: end;\n          -ms-flex-align: end;\n              align-items: flex-end;\n      padding-right: 25px;\n      font-weight: bold;\n      cursor: pointer; }\n    .easy-fees-dashboard .pane-list .list-header .sort-popup {\n      position: absolute;\n      right: 25px;\n      top: 45px;\n      background-color: white;\n      width: 130px;\n      padding: 8px; }\n      .easy-fees-dashboard .pane-list .list-header .sort-popup li {\n        width: 100%;\n        height: 30px;\n        line-height: 30px;\n        text-align: right;\n        list-style: none;\n        color: #999;\n        cursor: pointer; }\n      .easy-fees-dashboard .pane-list .list-header .sort-popup li:hover {\n        color: #6b5c5c; }\n  .easy-fees-dashboard .pane-list .list-body {\n    min-height: 50px; }\n    .easy-fees-dashboard .pane-list .list-body .balance {\n      padding-right: 20px;\n      -webkit-box-pack: end;\n          -ms-flex-pack: end;\n              justify-content: flex-end; }\n    .easy-fees-dashboard .pane-list .list-body .header {\n      color: #c9c2bd;\n      border-bottom: 1px solid #80807f;\n      -webkit-box-align: end;\n          -ms-flex-align: end;\n              align-items: flex-end; }\n      .easy-fees-dashboard .pane-list .list-body .header .col {\n        text-indent: 20px; }\n    .easy-fees-dashboard .pane-list .list-body .row {\n      min-height: 50px;\n      -webkit-box-pack: start;\n          -ms-flex-pack: start;\n              justify-content: flex-start; }\n      .easy-fees-dashboard .pane-list .list-body .row .col {\n        text-indent: 20px;\n        -webkit-box-align: center;\n            -ms-flex-align: center;\n                align-items: center; }\n    .easy-fees-dashboard .pane-list .list-body .childron-list {\n      border-bottom: 1px solid #999;\n      cursor: pointer; }\n      .easy-fees-dashboard .pane-list .list-body .childron-list .mandate {\n        width: 10px;\n        height: 10px;\n        border-radius: 50%; }\n      .easy-fees-dashboard .pane-list .list-body .childron-list .not-sent {\n        border: 2px solid #76b75f; }\n      .easy-fees-dashboard .pane-list .list-body .childron-list .pending {\n        background-color: #d2b13d;\n        border: 2px solid #d2b13d; }\n      .easy-fees-dashboard .pane-list .list-body .childron-list .active {\n        background-color: #76b75f;\n        border: 2px solid #76b75f; }\n      .easy-fees-dashboard .pane-list .list-body .childron-list .pp-icons {\n        margin-left: 10px;\n        text-indent: 0px;\n        border-radius: 5px;\n        font-size: 0.8em;\n        text-align: center;\n        -webkit-box-align: center;\n            -ms-flex-align: center;\n                align-items: center;\n        color: white;\n        padding: 0px 12px;\n        height: 25px;\n        line-height: 25px;\n        -ms-flex-wrap: nowrap;\n            flex-wrap: nowrap; }\n        .easy-fees-dashboard .pane-list .list-body .childron-list .pp-icons.icon-active {\n          background-color: #76b75f;\n          margin: 0px; }\n        .easy-fees-dashboard .pane-list .list-body .childron-list .pp-icons.icon-pastdue {\n          background-color: #d2b13d;\n          font-weight: bold; }\n        .easy-fees-dashboard .pane-list .list-body .childron-list .pp-icons.icon-inarrears {\n          background-color: #ce813a; }\n        .easy-fees-dashboard .pane-list .list-body .childron-list .pp-icons.icon-projected {\n          background-color: #7775aa; }\n        .easy-fees-dashboard .pane-list .list-body .childron-list .pp-icons.icon-remove {\n          background-color: #e23a69; }\n        .easy-fees-dashboard .pane-list .list-body .childron-list .pp-icons.icon-late {\n          background: #ce823a;\n          background: -webkit-gradient(left top, right top, color-stop(0%, #ce823a), color-stop(51%, #ce823a), color-stop(51%, #d2b23d), color-stop(100%, #d2b23d));\n          background: -webkit-linear-gradient(left, #ce823a 0%, #ce823a 51%, #d2b23d 51%, #d2b23d 100%);\n          background: linear-gradient(to right, #ce823a 0%, #ce823a 51%, #d2b23d 51%, #d2b23d 100%);\n          filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ce823a', endColorstr='#d2b23d', GradientType=1 ); }\n        .easy-fees-dashboard .pane-list .list-body .childron-list .pp-icons.icon-unpaid {\n          border: 1px solid #76b75f;\n          font-weight: bold;\n          height: 23px;\n          color: #76b75f; }\n          .easy-fees-dashboard .pane-list .list-body .childron-list .pp-icons.icon-unpaid .iv {\n            border: 1px solid #76b75f;\n            border-radius: 50%;\n            width: 10px;\n            height: 10px;\n            line-height: 10px;\n            display: inline-block; }\n        .easy-fees-dashboard .pane-list .list-body .childron-list .pp-icons.icon-paid {\n          background-color: #76b75f;\n          font-weight: bold;\n          color: white; }\n          .easy-fees-dashboard .pane-list .list-body .childron-list .pp-icons.icon-paid .iv {\n            background-color: white;\n            border-radius: 50%;\n            color: #76b75f;\n            width: 10px;\n            height: 10px;\n            line-height: 10px;\n            display: inline-block; }\n        .easy-fees-dashboard .pane-list .list-body .childron-list .pp-icons.icon-money {\n          font-size: 1em;\n          color: #6b5c5c; }\n"

/***/ },
/* 870 */
/***/ function(module, exports) {

module.exports = ".easy-fees-intro {\n  margin: auto 30px; }\n  .easy-fees-intro .intro-header {\n    margin: 8px;\n    display: -webkit-inline-box;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -webkit-box-pack: justify;\n        -ms-flex-pack: justify;\n            justify-content: space-between; }\n    .easy-fees-intro .intro-header .header-text {\n      color: #868686;\n      margin: 0;\n      margin-right: 50px;\n      font-weight: bolder; }\n    .easy-fees-intro .intro-header mdl-button {\n      background-color: #42bfb8;\n      color: #fff;\n      text-transform: capitalize; }\n  .easy-fees-intro .fee-policy {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    height: 120px;\n    background-color: #c2c1c1;\n    color: #fff;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center;\n    padding: 10px;\n    margin: 8px; }\n    .easy-fees-intro .fee-policy p {\n      margin: 0;\n      font-size: 1.6rem; }\n  .easy-fees-intro .info-cards {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-flow: wrap row;\n        flex-flow: wrap row; }\n    .easy-fees-intro .info-cards .info-card {\n      -webkit-box-flex: 0;\n          -ms-flex: 0 0 calc(25% - 16px);\n              flex: 0 0 calc(25% - 16px);\n      margin: 8px;\n      border-radius: 4px;\n      overflow: hidden;\n      background-color: #fff;\n      color: #757676;\n      position: relative; }\n      @media screen and (max-width: 850px) {\n        .easy-fees-intro .info-cards .info-card {\n          -webkit-box-flex: 0;\n              -ms-flex: 0 0 calc(50% - 16px);\n                  flex: 0 0 calc(50% - 16px); } }\n      .easy-fees-intro .info-cards .info-card .card-media {\n        text-align: center; }\n        .easy-fees-intro .info-cards .info-card .card-media img {\n          width: 101%; }\n      .easy-fees-intro .info-cards .info-card .card-body {\n        padding: 25px 15px;\n        margin-bottom: 30px; }\n        .easy-fees-intro .info-cards .info-card .card-body .card-title {\n          font-size: 1.6rem;\n          font-weight: bold; }\n        .easy-fees-intro .info-cards .info-card .card-body .card-subtitle {\n          font-size: 1.2rem; }\n        .easy-fees-intro .info-cards .info-card .card-body .card-text {\n          font-size: 1rem;\n          line-height: 1.2rem; }\n      .easy-fees-intro .info-cards .info-card .card-actions {\n        position: absolute;\n        right: 0;\n        left: 0;\n        bottom: 5px;\n        text-align: center; }\n        .easy-fees-intro .info-cards .info-card .card-actions mdl-button {\n          color: #8ec24a; }\n"

/***/ },
/* 871 */
/***/ function(module, exports) {

module.exports = ".easy-fees-setup {\n  margin: auto 30px; }\n  .easy-fees-setup .setup-header {\n    color: #868686; }\n    .easy-fees-setup .setup-header .header {\n      font-weight: bolder; }\n    .easy-fees-setup .setup-header mdl-button {\n      text-transform: capitalize;\n      color: #868686;\n      border: 1px solid #868686; }\n  .easy-fees-setup .setup-form {\n    margin-top: 20px; }\n    .easy-fees-setup .setup-form .progress-tracker {\n      display: -webkit-inline-box;\n      display: -ms-inline-flexbox;\n      display: inline-flex;\n      width: 100%;\n      margin-bottom: 20px; }\n      .easy-fees-setup .setup-form .progress-tracker .step-pill {\n        -webkit-box-flex: 1;\n            -ms-flex: 1;\n                flex: 1;\n        padding: 5px 10px;\n        cursor: pointer;\n        color: #868686;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none; }\n        .easy-fees-setup .setup-form .progress-tracker .step-pill.active-pill {\n          color: #565656;\n          border-bottom: 2px solid tomato; }\n    .easy-fees-setup .setup-form form .long-field mdl-textfield {\n      min-width: 60%; }\n    .easy-fees-setup .setup-form form .file-dropzone {\n      margin: 20px auto;\n      border: 2px dashed #dedede;\n      height: 80px;\n      width: 100%;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      -webkit-box-pack: center;\n          -ms-flex-pack: center;\n              justify-content: center;\n      position: relative; }\n      .easy-fees-setup .setup-form form .file-dropzone input {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        visibility: hidden; }\n      .easy-fees-setup .setup-form form .file-dropzone span {\n        margin-right: 10px; }\n      .easy-fees-setup .setup-form form .file-dropzone.files-over {\n        border-color: #3f51b5; }\n    .easy-fees-setup .setup-form form .attached-files mdl-chip {\n      margin: 5px; }\n    .easy-fees-setup .setup-form form .echosign {\n      width: 100%;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex; }\n    .easy-fees-setup .setup-form .next-button {\n      text-align: right; }\n"

/***/ },
/* 872 */
/***/ function(module, exports) {

module.exports = ".landing-page {\n  margin: 5px 30px; }\n  .landing-page .vista-logo img {\n    max-width: 15rem; }\n  .landing-page .stabilizer {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    margin-top: 20px; }\n    .landing-page .stabilizer .lite-preview {\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1;\n      padding: 15px; }\n      .landing-page .stabilizer .lite-preview p {\n        color: #fff;\n        font-size: 2rem;\n        line-height: 2.5rem;\n        font-weight: lighter; }\n      .landing-page .stabilizer .lite-preview img {\n        max-width: 100%;\n        height: auto; }\n    .landing-page .stabilizer .controls-wrapper {\n      -webkit-box-flex: 0;\n          -ms-flex: 0 0 40%;\n              flex: 0 0 40%; }\n      .landing-page .stabilizer .controls-wrapper .controls {\n        text-align: center;\n        color: #fff; }\n        .landing-page .stabilizer .controls-wrapper .controls p {\n          margin: 5px; }\n        .landing-page .stabilizer .controls-wrapper .controls mdl-button {\n          width: 250px;\n          border: 1px solid #3ab7a7;\n          color: #fff; }\n          .landing-page .stabilizer .controls-wrapper .controls mdl-button.clean {\n            border: none; }\n  @media screen and (max-width: 600px) {\n    .landing-page .stabilizer {\n      -webkit-box-orient: vertical;\n      -webkit-box-direction: normal;\n          -ms-flex-direction: column;\n              flex-direction: column; }\n      .landing-page .stabilizer .controls-wrapper .controls mdl-button {\n        border: 1px solid #fff; } }\n"

/***/ },
/* 873 */
/***/ function(module, exports) {

module.exports = ".register-card .card-body {\n  padding: 0 30px 30px 30px; }\n  .register-card .card-body mdl-button {\n    background-color: #ee4068; }\n"

/***/ },
/* 874 */
/***/ function(module, exports) {

module.exports = "mdl-select, mdl-textfield {\n  max-width: 150px; }\n\n.backdrop {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  z-index: 99;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center; }\n  .backdrop .modal {\n    position: relative;\n    min-width: 30%;\n    max-width: 95%;\n    box-sizing: border-box;\n    border-radius: 5px;\n    background-color: white; }\n    .backdrop .modal .modal-header {\n      border-radius: 5px 5px 0 0;\n      background-color: #54c3be;\n      color: white;\n      height: 50px;\n      -webkit-box-pack: justify;\n          -ms-flex-pack: justify;\n              justify-content: space-between;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      font-size: 1.2em;\n      font-weight: bold; }\n      .backdrop .modal .modal-header .title {\n        text-indent: 15px; }\n      .backdrop .modal .modal-header .btn {\n        padding-right: 15px;\n        cursor: pointer; }\n    .backdrop .modal .modal-body .staff-container {\n      min-width: 960px; }\n      .backdrop .modal .modal-body .staff-container .add-staff {\n        color: #525252;\n        padding: 20px; }\n      .backdrop .modal .modal-body .staff-container .green-color {\n        color: #54c3be; }\n      .backdrop .modal .modal-body .staff-container .align-center {\n        -ms-flex-pack: distribute;\n            justify-content: space-around;\n        -webkit-box-align: center;\n            -ms-flex-align: center;\n                align-items: center; }\n      .backdrop .modal .modal-body .staff-container .btn-picker {\n        border-top: 1px solid #cecccc;\n        padding-top: 10px; }\n        .backdrop .modal .modal-body .staff-container .btn-picker .btn {\n          -webkit-box-pack: end;\n              -ms-flex-pack: end;\n                  justify-content: flex-end; }\n        .backdrop .modal .modal-body .staff-container .btn-picker .error {\n          -webkit-box-pack: center;\n              -ms-flex-pack: center;\n                  justify-content: center;\n          -webkit-box-align: center;\n              -ms-flex-align: center;\n                  align-items: center;\n          color: red; }\n        .backdrop .modal .modal-body .staff-container .btn-picker button {\n          font-size: 1.2em; }\n"

/***/ },
/* 875 */
/***/ function(module, exports) {

module.exports = ".left {\n  width: 10%; }\n\nmdl-select {\n  max-width: 150px; }\n\n.text-indent {\n  text-indent: 20px; }\n\n.backdrop {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  z-index: 99;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center; }\n  .backdrop .modal {\n    position: relative;\n    min-width: 30%;\n    max-width: 95%;\n    box-sizing: border-box;\n    border-radius: 5px;\n    background-color: white; }\n    .backdrop .modal .modal-header {\n      border-radius: 5px 5px 0 0;\n      background-color: #54c3be;\n      color: white;\n      height: 50px;\n      -webkit-box-pack: justify;\n          -ms-flex-pack: justify;\n              justify-content: space-between;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      font-size: 1.2em;\n      font-weight: bold; }\n      .backdrop .modal .modal-header .title {\n        text-indent: 15px; }\n      .backdrop .modal .modal-header .btn {\n        padding-right: 15px;\n        cursor: pointer; }\n    .backdrop .modal .modal-body .move-container {\n      min-width: 960px;\n      padding: 20px; }\n      .backdrop .modal .modal-body .move-container .move-class {\n        color: #525252; }\n        .backdrop .modal .modal-body .move-container .move-class .green-color {\n          color: #54c3be; }\n        .backdrop .modal .modal-body .move-container .move-class .date-picker {\n          -ms-flex-pack: distribute;\n              justify-content: space-around; }\n        .backdrop .modal .modal-body .move-container .move-class .room-picker {\n          -ms-flex-pack: distribute;\n              justify-content: space-around; }\n          .backdrop .modal .modal-body .move-container .move-class .room-picker .left {\n            -webkit-box-pack: center;\n                -ms-flex-pack: center;\n                    justify-content: center;\n            -webkit-box-align: center;\n                -ms-flex-align: center;\n                    align-items: center;\n            display: -webkit-box;\n            display: -ms-flexbox;\n            display: flex; }\n        .backdrop .modal .modal-body .move-container .move-class .btn-picker {\n          -webkit-box-pack: end;\n              -ms-flex-pack: end;\n                  justify-content: flex-end; }\n          .backdrop .modal .modal-body .move-container .move-class .btn-picker button {\n            font-size: 1.2em; }\n"

/***/ },
/* 876 */
/***/ function(module, exports) {

module.exports = ".backdrop {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  z-index: 99;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center; }\n  .backdrop .modal {\n    position: relative;\n    min-width: 30%;\n    max-width: 95%;\n    box-sizing: border-box;\n    border-radius: 5px;\n    background-color: white; }\n    .backdrop .modal .modal-header {\n      border-radius: 5px 5px 0 0;\n      background-color: #54c3be;\n      color: white;\n      height: 50px;\n      -webkit-box-pack: justify;\n          -ms-flex-pack: justify;\n              justify-content: space-between;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      font-size: 1.2em;\n      font-weight: bold; }\n      .backdrop .modal .modal-header .title {\n        text-indent: 15px; }\n      .backdrop .modal .modal-header .btn {\n        padding-right: 15px;\n        cursor: pointer; }\n    .backdrop .modal .modal-body .occupancy-container {\n      min-width: 960px;\n      padding: 20px; }\n      .backdrop .modal .modal-body .occupancy-container .green-color {\n        color: #54c3be; }\n      .backdrop .modal .modal-body .occupancy-container .gray-color {\n        color: gray; }\n      .backdrop .modal .modal-body .occupancy-container .red-color {\n        color: red; }\n      .backdrop .modal .modal-body .occupancy-container button {\n        font-size: 1.2em; }\n"

/***/ },
/* 877 */
/***/ function(module, exports) {

module.exports = ".flex {\n  width: 100%;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex; }\n\n.column {\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column; }\n\n.bottom-border {\n  border-bottom: 2px #cdcecf solid; }\n\n.strong-text {\n  font-weight: bold; }\n\n.text-center {\n  text-align: center; }\n\n.text-right {\n  text-align: right; }\n\n.no-padding {\n  padding: 0px !important; }\n\n.padding-bottom30 {\n  padding-bottom: 30px; }\n\n.flex1 {\n  -webkit-box-flex: 1;\n      -ms-flex: 1;\n          flex: 1; }\n\n.flex2 {\n  -webkit-box-flex: 2;\n      -ms-flex: 2;\n          flex: 2; }\n\n.flex3 {\n  -webkit-box-flex: 3;\n      -ms-flex: 3;\n          flex: 3; }\n\n.flex4 {\n  -webkit-box-flex: 4;\n      -ms-flex: 4;\n          flex: 4; }\n\n.flex5 {\n  -webkit-box-flex: 5;\n      -ms-flex: 5;\n          flex: 5; }\n\n.backdrop {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  z-index: 99;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center; }\n  .backdrop .modal {\n    position: relative;\n    min-width: 30%;\n    max-width: 95%;\n    box-sizing: border-box;\n    border-radius: 5px;\n    background-color: white; }\n    .backdrop .modal .modal-header {\n      border-radius: 5px 5px 0 0;\n      background-color: #54c3be;\n      color: white;\n      height: 50px;\n      -webkit-box-pack: justify;\n          -ms-flex-pack: justify;\n              justify-content: space-between;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      font-size: 1.2em;\n      font-weight: bold; }\n      .backdrop .modal .modal-header .title {\n        text-indent: 15px; }\n      .backdrop .modal .modal-header .btn {\n        padding-right: 15px;\n        cursor: pointer; }\n"

/***/ },
/* 878 */
/***/ function(module, exports) {

module.exports = "mdl-select, mdl-textfield {\n  max-width: 150px;\n  padding: 5px 0px !important; }\n\n.padding-top-bottom {\n  padding: 10px 0px !important; }\n\n.backdrop {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  z-index: 99;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center; }\n  .backdrop .modal {\n    position: relative;\n    min-width: 30%;\n    max-width: 95%;\n    box-sizing: border-box;\n    border-radius: 5px;\n    background-color: white; }\n    .backdrop .modal .modal-header {\n      border-radius: 5px 5px 0 0;\n      background-color: #54c3be;\n      color: white;\n      height: 50px;\n      -webkit-box-pack: justify;\n          -ms-flex-pack: justify;\n              justify-content: space-between;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      font-size: 1.2em;\n      font-weight: bold; }\n      .backdrop .modal .modal-header .title {\n        text-indent: 15px; }\n      .backdrop .modal .modal-header .btn {\n        padding-right: 15px;\n        cursor: pointer; }\n    .backdrop .modal .modal-body .remove-container {\n      min-width: 960px;\n      padding: 20px 30px; }\n      .backdrop .modal .modal-body .remove-container .remove-child {\n        color: #525252; }\n      .backdrop .modal .modal-body .remove-container .green-color {\n        color: #54c3be; }\n      .backdrop .modal .modal-body .remove-container .gray-color {\n        color: gray; }\n      .backdrop .modal .modal-body .remove-container .red-color {\n        color: red; }\n      .backdrop .modal .modal-body .remove-container button {\n        font-size: 1.2em; }\n"

/***/ },
/* 879 */
/***/ function(module, exports) {

module.exports = ".room-accordain {\n  background-color: #f7f7f7;\n  width: 100%;\n  min-height: 100px;\n  /*//start accordian header*/\n  /*//end accordian header*/ }\n  .room-accordain .accordian-header {\n    background-color: #a8c6a3;\n    border-top: 2px solid #96b78f; }\n    .room-accordain .accordian-header .room-title {\n      color: white;\n      font-size: 1em;\n      font-weight: bold;\n      height: 30px; }\n    .room-accordain .accordian-header .available-info {\n      background-color: #c0e5e4;\n      color: white;\n      height: 25px;\n      line-height: 25px; }\n    .room-accordain .accordian-header .week-picker button {\n      color: white !important;\n      font-size: 0.8em;\n      height: 32px !important; }\n    .room-accordain .accordian-header .week-picker .p-btn {\n      cursor: pointer; }\n      .room-accordain .accordian-header .week-picker .p-btn.active {\n        border-bottom: 2px white solid; }\n  .room-accordain .accordian-body {\n    border-bottom: 2px solid #ececec;\n    min-height: 100px;\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center;\n    color: #525252; }\n    .room-accordain .accordian-body button {\n      background-color: #a8c6a3;\n      color: white;\n      font-size: 0.8em;\n      font-weight: normal;\n      height: 25px !important;\n      line-height: 25px !important; }\n    .room-accordain .accordian-body .row {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      padding: 10px 0px; }\n      .room-accordain .accordian-body .row .icon {\n        font-size: 1em;\n        color: #6dc49c; }\n        .room-accordain .accordian-body .row .icon.stuff-no {\n          color: #afafaf !important; }\n    .room-accordain .accordian-body .room-info .room-info-inner {\n      min-height: 50px;\n      padding: 20px; }\n    .room-accordain .accordian-body .child-info .child-info-inner {\n      min-height: 50px;\n      padding: 20px; }\n    .room-accordain .accordian-body .children-info-am .children-info-am-inner {\n      min-height: 50px;\n      padding: 20px 20px 20px 0px; }\n    .room-accordain .accordian-body .children-info-am .row {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      padding: 10px 0px; }\n    .room-accordain .accordian-body .child-list {\n      -ms-flex-wrap: wrap;\n          flex-wrap: wrap; }\n      .room-accordain .accordian-body .child-list .row {\n        width: 50%; }\n    .room-accordain .accordian-body .children-info-pm .children-info-pm-inner {\n      min-height: 50px;\n      padding: 20px 20px 20px 0px; }\n    .room-accordain .accordian-body .children-info-pm .row {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      padding: 10px 0px; }\n"

/***/ },
/* 880 */
/***/ function(module, exports) {

module.exports = ".scroll-holder {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  width: 100%;\n  position: relative;\n  overflow: hidden; }\n  .scroll-holder .navbar-scroll {\n    display: -webkit-inline-box;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n    -webkit-transition: all .5s ease;\n    transition: all .5s ease; }\n    .scroll-holder .navbar-scroll .btn-tab button {\n      color: white;\n      font-size: 0.8em;\n      font-weight: bold; }\n    .scroll-holder .navbar-scroll .btn-tab.active {\n      border-bottom: 2px solid white; }\n  .scroll-holder .arrow {\n    position: absolute;\n    display: -webkit-inline-box;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n    height: 100%;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    cursor: pointer;\n    min-width: 60px;\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center;\n    top: 0;\n    opacity: 0;\n    visibility: hidden; }\n    .scroll-holder .arrow.show {\n      opacity: 1;\n      visibility: visible; }\n  .scroll-holder .arrow-back {\n    left: 0px;\n    z-index: 1;\n    background-image: -webkit-linear-gradient(left, #54c3be 50%, rgba(255, 255, 255, 0) 100%);\n    background-image: linear-gradient(to right, #54c3be 50%, rgba(255, 255, 255, 0) 100%);\n    border-radius: 5px 0 0 0; }\n  .scroll-holder .arrow-forward {\n    right: 0px;\n    background-image: -webkit-linear-gradient(left, rgba(255, 255, 255, 0) 0%, #54c3be e 50%, #54c3be 100%);\n    background-image: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, #54c3be e 50%, #54c3be 100%);\n    border-radius: 0 5px 0 0; }\n"

/***/ },
/* 881 */
/***/ function(module, exports) {

module.exports = ".transition-lists {\n  border-radius: 5px; }\n  .transition-lists .panel-header {\n    background-color: #54c3be;\n    border-radius: 5px 5px 0px 0px;\n    font-size: 1.1em;\n    font-weight: bold;\n    min-height: 40px;\n    line-height: 40px; }\n    .transition-lists .panel-header .btn-tab {\n      color: white;\n      font-weight: bold;\n      margin-left: 20px; }\n      .transition-lists .panel-header .btn-tab button {\n        color: white !important;\n        font-size: 0.8em; }\n      .transition-lists .panel-header .btn-tab.active {\n        border-bottom: 2px solid white; }\n  .transition-lists .panel-body {\n    border-radius: 0px 0px 5px 5px;\n    background-color: white;\n    min-height: 30px;\n    padding: 20px; }\n    .transition-lists .panel-body .panel-body-inner {\n      color: #525252; }\n      .transition-lists .panel-body .panel-body-inner .trans-title {\n        -webkit-box-align: end;\n            -ms-flex-align: end;\n                align-items: flex-end; }\n    .transition-lists .panel-body .header {\n      color: #999; }\n    .transition-lists .panel-body .filter {\n      -webkit-box-pack: end;\n          -ms-flex-pack: end;\n              justify-content: flex-end; }\n  .transition-lists .mdl-textfield {\n    padding: none !important; }\n  .transition-lists .icon {\n    font-size: 1em;\n    color: #6dc49c; }\n    .transition-lists .icon.stuff-no {\n      color: #afafaf !important; }\n"

/***/ },
/* 882 */
/***/ function(module, exports) {

module.exports = ".left {\n  width: 15%; }\n\n.right {\n  width: 85% !important; }\n\n.plan-dashboard {\n  background-color: #fdfdfd;\n  border-radius: 5px;\n  /*  margin: 0 20px 10vh 0px;*/ }\n  .plan-dashboard .plan-dashboard-spacer {\n    width: 20%; }\n  .plan-dashboard .date-picker {\n    background-color: #54c3be;\n    border-radius: 5px 5px 0px 0px;\n    font-size: 1.1em;\n    font-weight: bold; }\n    .plan-dashboard .date-picker button {\n      color: white !important; }\n    .plan-dashboard .date-picker .side-btns {\n      -ms-flex-wrap: nowrap;\n          flex-wrap: nowrap;\n      line-height: 100%;\n      cursor: pointer; }\n    .plan-dashboard .date-picker .picker-btns {\n      -webkit-box-pack: center;\n          -ms-flex-pack: center;\n              justify-content: center;\n      color: white; }\n      .plan-dashboard .date-picker .picker-btns .p-btn {\n        padding: 0px 15px;\n        cursor: pointer; }\n        .plan-dashboard .date-picker .picker-btns .p-btn.active {\n          border-bottom: 2px white solid; }\n  .plan-dashboard .picked-data {\n    font-size: 1em; }\n    .plan-dashboard .picked-data .date-header {\n      background-color: #add8a9;\n      padding: 7px 0px;\n      color: white; }\n      .plan-dashboard .picked-data .date-header .row {\n        width: 100%;\n        -ms-flex-pack: distribute;\n            justify-content: space-around; }\n      .plan-dashboard .picked-data .date-header .col {\n        text-align: center;\n        font-size: 0.8em; }\n    .plan-dashboard .picked-data .list-content .ap-header .row {\n      border-bottom: none !important; }\n    .plan-dashboard .picked-data .list-content .ap-header .col {\n      font-size: 0.8em !important; }\n    .plan-dashboard .picked-data .list-content .contents {\n      -ms-flex-wrap: wrap;\n          flex-wrap: wrap; }\n      .plan-dashboard .picked-data .list-content .contents .info {\n        font-size: 0.8em;\n        text-align: left;\n        text-indent: 15px;\n        -webkit-box-align: end !important;\n            -ms-flex-align: end !important;\n                align-items: flex-end !important;\n        padding-top: 5px; }\n      .plan-dashboard .picked-data .list-content .contents .cation {\n        font-size: 0.8em;\n        text-align: left;\n        text-indent: 15px;\n        padding-bottom: 5px;\n        -webkit-box-align: start !important;\n            -ms-flex-align: start !important;\n                align-items: flex-start !important;\n        color: #999; }\n      .plan-dashboard .picked-data .list-content .contents .active {\n        background-color: #e0dfdf; }\n    .plan-dashboard .picked-data .list-content .row {\n      width: 100%;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-orient: horizontal;\n      -webkit-box-direction: normal;\n          -ms-flex-direction: row;\n              flex-direction: row;\n      -ms-flex-pack: distribute;\n          justify-content: space-around;\n      border-bottom: 1px #c9cacb solid;\n      border-left: 1px #c9cacb solid; }\n    .plan-dashboard .picked-data .list-content .col {\n      width: 100%;\n      font-size: 1.2em;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      -webkit-box-pack: center;\n          -ms-flex-pack: center;\n              justify-content: center;\n      cursor: pointer; }\n      .plan-dashboard .picked-data .list-content .col.color {\n        color: red; }\n"

/***/ },
/* 883 */
/***/ function(module, exports) {

module.exports = ".padding5 {\n  padding: 15px 0px !important; }\n\n.room-lists {\n  border-radius: 5px; }\n  .room-lists .panel-header {\n    background-color: #54c3be;\n    border-radius: 5px 5px 0px 0px;\n    font-size: 1.1em;\n    font-weight: bold;\n    min-height: 40px;\n    line-height: 40px; }\n    .room-lists .panel-header .btn-tab button {\n      color: white;\n      font-size: 0.8em;\n      font-weight: bold; }\n    .room-lists .panel-header .btn-tab.active {\n      border-bottom: 2px solid white; }\n  .room-lists .panel-body {\n    border-radius: 0px 0px 5px 5px;\n    background-color: white;\n    min-height: 30px;\n    padding: 20px; }\n    .room-lists .panel-body .panel-body-inner {\n      color: #525252; }\n      .room-lists .panel-body .panel-body-inner .trans-title {\n        -webkit-box-align: end;\n            -ms-flex-align: end;\n                align-items: flex-end; }\n    .room-lists .panel-body .header {\n      color: #999; }\n    .room-lists .panel-body .filter {\n      -webkit-box-pack: end;\n          -ms-flex-pack: end;\n              justify-content: flex-end; }\n    .room-lists .panel-body .footer {\n      padding: 10px 0px;\n      font-weight: bold;\n      font-size: 1.3em; }\n  .room-lists .mdl-textfield {\n    padding: none !important; }\n  .room-lists .icon {\n    font-size: 1em;\n    color: #6dc49c; }\n    .room-lists .icon.stuff-no {\n      color: #afafaf !important; }\n  .room-lists .col {\n    cursor: pointer; }\n  .room-lists .picker-row {\n    position: relative;\n    height: 50px;\n    border-top-right-radius: 5px;\n    border-top-left-radius: 5px; }\n    .room-lists .picker-row mdl-icon {\n      cursor: pointer;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      user-select: none; }\n    .room-lists .picker-row .month-picker {\n      display: -webkit-inline-box;\n      display: -ms-inline-flexbox;\n      display: inline-flex;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      line-height: 50px;\n      font-size: 1.8rem; }\n      .room-lists .picker-row .month-picker .title {\n        font-weight: 300; }\n    .room-lists .picker-row .week-picker {\n      display: -webkit-inline-box;\n      display: -ms-inline-flexbox;\n      display: inline-flex;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      margin-left: 20px; }\n      .room-lists .picker-row .week-picker .title {\n        margin: 0 10px;\n        font-size: 1.4rem; }\n"

/***/ },
/* 884 */
/***/ function(module, exports) {

module.exports = "mdl-select, mdl-textfield {\n  max-width: 150px; }\n  mdl-select .mdl-textfield, mdl-textfield .mdl-textfield {\n    padding: 0px !important; }\n\n.plan-setup {\n  border-radius: 5px; }\n  .plan-setup .panel-header {\n    background-color: #54c3be;\n    border-radius: 5px 5px 0px 0px;\n    font-size: 1.1em;\n    font-weight: bold;\n    min-height: 40px;\n    line-height: 40px;\n    color: white;\n    overflow: hidden; }\n  .plan-setup .panel-body {\n    border-radius: 0px 0px 5px 5px;\n    background-color: white;\n    min-height: 30px;\n    padding: 20px; }\n    .plan-setup .panel-body .panel-body-inner {\n      color: #525252; }\n      .plan-setup .panel-body .panel-body-inner .trans-title {\n        -webkit-box-align: end;\n            -ms-flex-align: end;\n                align-items: flex-end; }\n    .plan-setup .panel-body .header {\n      color: #999; }\n  .plan-setup .add-staff {\n    position: fixed;\n    bottom: 1em;\n    right: 1em; }\n  .plan-setup .icon {\n    font-size: 1em;\n    color: #6dc49c; }\n    .plan-setup .icon.stuff-no {\n      color: #afafaf !important; }\n  .plan-setup .col {\n    cursor: pointer; }\n"

/***/ },
/* 885 */
/***/ function(module, exports) {

module.exports = ".attendance-status span {\n  color: #878787;\n  float: left; }\n\n.attendance-status p {\n  text-align: right;\n  margin: 0;\n  font-weight: 500; }\n\n.attendance-status.inactive {\n  background-color: rgba(0, 0, 0, 0.3);\n  background-color: darkgrey; }\n"

/***/ },
/* 886 */
/***/ function(module, exports) {

module.exports = ".reports-draft {\n  background-color: #fdfdfd;\n  border-radius: 5px;\n  margin-right: 20px; }\n  .reports-draft .picker-row {\n    position: relative;\n    background-color: #b9c5d8;\n    color: #fff;\n    height: 50px;\n    border-top-right-radius: 5px;\n    border-top-left-radius: 5px; }\n    .reports-draft .picker-row mdl-icon {\n      cursor: pointer;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      user-select: none; }\n    .reports-draft .picker-row .month-picker {\n      display: -webkit-inline-box;\n      display: -ms-inline-flexbox;\n      display: inline-flex;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      line-height: 50px;\n      font-size: 1.8rem; }\n      .reports-draft .picker-row .month-picker .title {\n        font-weight: 300; }\n    .reports-draft .picker-row .week-picker {\n      display: -webkit-inline-box;\n      display: -ms-inline-flexbox;\n      display: inline-flex;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      margin-left: 20px; }\n      .reports-draft .picker-row .week-picker .title {\n        margin: 0 10px;\n        font-size: 1.4rem; }\n    .reports-draft .picker-row i {\n      position: absolute;\n      right: 0;\n      margin: 5px 10px;\n      font-size: 2.8em;\n      cursor: pointer; }\n  .reports-draft .row {\n    border-bottom: 1px solid #d7d7d7;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-align: start;\n        -ms-flex-align: start;\n            align-items: flex-start;\n    width: 100%;\n    text-align: left;\n    font-weight: 500;\n    color: #000;\n    -webkit-transition: background-color 0.28s cubic-bezier(0.4, 0, 0.2, 1);\n    transition: background-color 0.28s cubic-bezier(0.4, 0, 0.2, 1); }\n    .reports-draft .row:hover {\n      background-color: #eeeeee; }\n    .reports-draft .row.tooltips {\n      color: #878787; }\n      .reports-draft .row.tooltips p {\n        margin: 0;\n        font-weight: 500; }\n      .reports-draft .row.tooltips span {\n        color: rgba(0, 0, 0, 0.3); }\n      .reports-draft .row.tooltips:hover {\n        background-color: #fdfdfd; }\n    .reports-draft .row .col {\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1;\n      padding: 15px; }\n      .reports-draft .row .col.child-name {\n        color: #656565; }\n      .reports-draft .row .col.child-status {\n        -webkit-box-flex: 0;\n            -ms-flex: 0 0 5%;\n                flex: 0 0 5%;\n        color: #878787; }\n      .reports-draft .row .col.inactive {\n        background-color: #eeeeee; }\n"

/***/ },
/* 887 */
/***/ function(module, exports) {

module.exports = "/* Warning this component uses no ViewEncapsulation */\n.centre-children .flex-card {\n  margin: 0;\n  margin-right: 20px; }\n  .centre-children .flex-card .col.avatar-col {\n    -webkit-box-flex: 0;\n        -ms-flex: 0 0 5%;\n            flex: 0 0 5%; }\n    .centre-children .flex-card .col.avatar-col img {\n      border-radius: 50%;\n      width: 4rem; }\n\n.centre-children .add-children {\n  position: fixed;\n  right: 20px;\n  bottom: 5vh; }\n"

/***/ },
/* 888 */
/***/ function(module, exports) {

module.exports = ".centre-details {\n  background: #fdfdfd;\n  border-radius: 5px;\n  margin-right: 20px; }\n  .centre-details .title {\n    padding: 50px 20px 15px 30px;\n    border-bottom: 1px solid #d7d7d7;\n    color: #6d6d6d;\n    font-size: 1.4rem; }\n  .centre-details .settings {\n    text-align: center; }\n    .centre-details .settings .col {\n      display: inline-block;\n      max-width: 45%;\n      margin: 15px; }\n      .centre-details .settings .col mdl-textfield {\n        width: 100%; }\n  .centre-details .edit-picture {\n    padding: 30px; }\n    .centre-details .edit-picture img {\n      border-radius: 50%;\n      width: 4rem;\n      height: auto;\n      margin-right: 15px; }\n  .centre-details .save-button {\n    padding: 30px;\n    text-align: right; }\n  .centre-details .edit-picture mdl-button, .centre-details .save-button mdl-button {\n    background-color: #96e1de;\n    color: #5b5b5b; }\n  .centre-details .edit-picture mdl-spinner, .centre-details .save-button mdl-spinner {\n    vertical-align: middle; }\n"

/***/ },
/* 889 */
/***/ function(module, exports) {

module.exports = "/* Warning: this component uses no ViewEncapsulation */\n.centre-families .flex-card {\n  margin: 0;\n  margin-right: 20px; }\n  .centre-families .flex-card .row {\n    text-align: center; }\n    .centre-families .flex-card .row .name-col {\n      text-align: left;\n      -webkit-box-flex: 2;\n          -ms-flex: 2;\n              flex: 2; }\n    .centre-families .flex-card .row .image-col {\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1; }\n      .centre-families .flex-card .row .image-col img {\n        width: 50px;\n        height: 50px;\n        border-radius: 50%;\n        text-align: left;\n        -webkit-box-pack: start;\n            -ms-flex-pack: start;\n                justify-content: flex-start; }\n    .centre-families .flex-card .row .empty-col {\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1; }\n\n.centre-families .refresh-families {\n  position: absolute;\n  right: 20px;\n  top: 50px; }\n\n.centre-families .add-families {\n  position: fixed;\n  right: 20px;\n  bottom: 5vh; }\n"

/***/ },
/* 890 */
/***/ function(module, exports) {

module.exports = ".flex {\n  width: 100%;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex; }\n\n.column {\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column; }\n\n.padding-bottom30 {\n  padding-bottom: 30px; }\n\n.backdrop {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  z-index: 99;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center; }\n  .backdrop .modal {\n    position: relative;\n    min-width: 80%;\n    max-width: 95%;\n    box-sizing: border-box;\n    border-radius: 7px;\n    background-color: white; }\n    .backdrop .modal .add-families-header {\n      border-radius: 5px 5px 0 0;\n      background-color: #54c3be;\n      color: white;\n      height: 50px;\n      font-size: 1.3em;\n      font-weight: bold;\n      cursor: pointer; }\n      .backdrop .modal .add-families-header .tab {\n        -webkit-box-flex: 1;\n            -ms-flex: 1;\n                flex: 1;\n        -webkit-box-pack: center;\n            -ms-flex-pack: center;\n                justify-content: center;\n        -webkit-box-align: center;\n            -ms-flex-align: center;\n                align-items: center; }\n        .backdrop .modal .add-families-header .tab.active {\n          border-bottom: 2px solid white; }\n      .backdrop .modal .add-families-header .close {\n        position: absolute;\n        right: 12px;\n        top: 12px; }\n        .backdrop .modal .add-families-header .close .close-button {\n          font-size: 1.3em;\n          -webkit-box-pack: center;\n              -ms-flex-pack: center;\n                  justify-content: center;\n          -webkit-box-align: center;\n              -ms-flex-align: center;\n                  align-items: center;\n          font-weight: bold; }\n    .backdrop .modal .add-families-body {\n      min-height: 50px; }\n      .backdrop .modal .add-families-body .add-families-inner {\n        padding: 15px 0px; }\n        .backdrop .modal .add-families-body .add-families-inner .border-bottom {\n          border-bottom: 1px solid #eae1e1; }\n        .backdrop .modal .add-families-body .add-families-inner .row-header {\n          padding-top: 30px;\n          color: #999; }\n        .backdrop .modal .add-families-body .add-families-inner .row {\n          -ms-flex-pack: distribute;\n              justify-content: space-around;\n          -webkit-box-align: center;\n              -ms-flex-align: center;\n                  align-items: center; }\n          .backdrop .modal .add-families-body .add-families-inner .row .col {\n            -webkit-box-pack: start;\n                -ms-flex-pack: start;\n                    justify-content: flex-start;\n            -webkit-box-align: center;\n                -ms-flex-align: center;\n                    align-items: center;\n            padding-left: 20px; }\n            .backdrop .modal .add-families-body .add-families-inner .row .col mdl-select, .backdrop .modal .add-families-body .add-families-inner .row .col mdl-textfield {\n              width: 170px !important; }\n        .backdrop .modal .add-families-body .add-families-inner .row:last-child {\n          border-bottom: none !important; }\n        .backdrop .modal .add-families-body .add-families-inner .flexible-container {\n          max-height: 250px;\n          overflow-y: auto;\n          display: inline-block; }\n          .backdrop .modal .add-families-body .add-families-inner .flexible-container app-datepicker {\n            position: absolute; }\n        .backdrop .modal .add-families-body .add-families-inner .add-button {\n          padding: 10px 0px;\n          cursor: pointer; }\n          .backdrop .modal .add-families-body .add-families-inner .add-button .col {\n            color: #999; }\n        .backdrop .modal .add-families-body .add-families-inner .sibling {\n          padding-top: 30px; }\n          .backdrop .modal .add-families-body .add-families-inner .sibling .header {\n            -webkit-box-pack: start;\n                -ms-flex-pack: start;\n                    justify-content: flex-start; }\n            .backdrop .modal .add-families-body .add-families-inner .sibling .header .col {\n              font-weight: bold;\n              font-size: 1.2em;\n              padding-left: 20px;\n              color: #797676; }\n          .backdrop .modal .add-families-body .add-families-inner .sibling .selector {\n            -webkit-box-flex: 1;\n                -ms-flex: 1;\n                    flex: 1;\n            padding-left: 20px; }\n          .backdrop .modal .add-families-body .add-families-inner .sibling .link-button {\n            -webkit-box-flex: 3;\n                -ms-flex: 3;\n                    flex: 3;\n            -webkit-box-align: center;\n                -ms-flex-align: center;\n                    align-items: center; }\n            .backdrop .modal .add-families-body .add-families-inner .sibling .link-button mdl-button {\n              background-color: #6ac289;\n              color: white;\n              font-size: 0.8em;\n              font-weight: bold;\n              height: 25px !important;\n              line-height: 25px !important; }\n        .backdrop .modal .add-families-body .add-families-inner .error-msg {\n          -webkit-box-flex: 4;\n              -ms-flex: 4;\n                  flex: 4;\n          color: red;\n          -webkit-box-pack: center !important;\n              -ms-flex-pack: center !important;\n                  justify-content: center !important;\n          -webkit-box-align: center;\n              -ms-flex-align: center;\n                  align-items: center; }\n        .backdrop .modal .add-families-body .add-families-inner .save-btn {\n          -webkit-box-pack: end !important;\n              -ms-flex-pack: end !important;\n                  justify-content: flex-end !important;\n          padding-right: 2vh;\n          -webkit-box-flex: 1;\n              -ms-flex: 1;\n                  flex: 1; }\n          .backdrop .modal .add-families-body .add-families-inner .save-btn button {\n            background-color: none;\n            color: #6ac289;\n            font-size: 1.2em;\n            font-weight: bold; }\n"

/***/ },
/* 891 */
/***/ function(module, exports) {

module.exports = "/* Warning: this component uses no ViewEncapsulation */\n.centre-rooms .flex-card {\n  margin: 0;\n  margin-right: 20px; }\n  .centre-rooms .flex-card .row {\n    text-align: center; }\n    .centre-rooms .flex-card .row .name-col {\n      text-align: left; }\n\n.centre-rooms .add-rooms {\n  position: fixed;\n  right: 20px;\n  bottom: 5vh; }\n"

/***/ },
/* 892 */
/***/ function(module, exports) {

module.exports = ".centre-subventions {\n  background: #fdfdfd;\n  border-radius: 5px;\n  margin-right: 20px; }\n  .centre-subventions .title {\n    padding: 50px 20px 15px 30px;\n    border-bottom: 1px solid #d7d7d7;\n    color: #6d6d6d;\n    font-size: 1.4rem; }\n  .centre-subventions .ecce {\n    text-align: center; }\n    .centre-subventions .ecce .mask {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      z-index: 100; }\n    .centre-subventions .ecce .col {\n      display: inline-block;\n      width: 45%;\n      max-width: 45%;\n      margin: 15px; }\n      .centre-subventions .ecce .col .parameter {\n        position: relative;\n        width: 100%;\n        min-height: 20px;\n        border-bottom: 1px dashed;\n        padding-bottom: 10px; }\n        .centre-subventions .ecce .col .parameter .name {\n          float: left; }\n        .centre-subventions .ecce .col .parameter app-ecce-capitations {\n          float: right; }\n        .centre-subventions .ecce .col .parameter mdl-switch {\n          float: right;\n          width: 0; }\n      .centre-subventions .ecce .col .details p {\n        text-align: left;\n        font-size: smaller;\n        line-height: 1.2em;\n        margin-top: 5px; }\n  .centre-subventions .save-button {\n    padding: 30px;\n    text-align: right; }\n    .centre-subventions .save-button mdl-button {\n      background-color: #96e1de; }\n      .centre-subventions .save-button mdl-button.cancel {\n        background-color: #f3c2cd;\n        margin-right: 20px; }\n"

/***/ },
/* 893 */
/***/ function(module, exports) {

module.exports = ".simple-modal mdl-textfield {\n  width: 350px; }\n\n.simple-modal .error-message {\n  margin: 5px 0;\n  min-height: 24px; }\n\n.simple-modal .save-button mdl-button {\n  background-color: #96e1de;\n  color: #5b5b5b; }\n"

/***/ },
/* 894 */
/***/ function(module, exports) {

module.exports = ".simple-modal .select-row {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  width: 350px; }\n  .simple-modal .select-row mdl-select {\n    margin-right: 10px;\n    max-width: 49%; }\n\n.simple-modal .room-name {\n  width: 350px; }\n\n.simple-modal .capacity, .simple-modal .ecce-capitations, .simple-modal .room-name {\n  -webkit-box-flex: 1;\n      -ms-flex: 1;\n          flex: 1; }\n\n.simple-modal .ecce-capitations {\n  margin-left: 10px; }\n  .simple-modal .ecce-capitations label {\n    display: block;\n    color: #3f51b5;\n    font-size: 12px;\n    margin-top: 4px; }\n\n.simple-modal .error-message {\n  margin: 5px 0;\n  min-height: 24px; }\n\n.simple-modal .save-button {\n  text-align: right; }\n"

/***/ },
/* 895 */
/***/ function(module, exports) {

module.exports = "div.capitations {\n  display: inline-block; }\n  div.capitations span {\n    float: left;\n    margin: 3px 10px;\n    font-weight: bold;\n    color: lightgray;\n    cursor: pointer; }\n    div.capitations span:first-child {\n      margin-left: 0; }\n    div.capitations span.on {\n      color: red; }\n    div.capitations span.off {\n      color: green; }\n    div.capitations span.mixed {\n      color: darkorange; }\n"

/***/ },
/* 896 */
/***/ function(module, exports) {

module.exports = ".simple-modal {\n  box-sizing: content-box; }\n  .simple-modal .dialog-content {\n    min-width: 400px; }\n    .simple-modal .dialog-content .modal-controls {\n      text-align: right; }\n      .simple-modal .dialog-content .modal-controls mdl-spinner {\n        vertical-align: middle; }\n"

/***/ },
/* 897 */
/***/ function(module, exports) {

module.exports = ".datepicker-wrapper {\n  position: relative;\n  max-width: 100%; }\n\n.ng-datepicker-input {\n  position: relative;\n  width: 100%;\n  cursor: pointer; }\n\n.ng-datepicker {\n  position: absolute;\n  z-index: 99;\n  width: 250px;\n  background: #fff;\n  font-size: 12px;\n  color: #565a5c;\n  display: inline-block;\n  border: 1px solid #c4c4c4;\n  border-radius: 2px;\n  margin: 0;\n  padding: 0;\n  top: 48px;\n  right: 0; }\n\n.ng-datepicker > .controls {\n  width: 250px;\n  display: inline-block;\n  padding: 5px 0 0 0; }\n\n.ng-datepicker > .controls mdl-icon {\n  font-size: 25px;\n  cursor: pointer; }\n\n.ng-datepicker > .controls > .left {\n  width: 40px;\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  float: left; }\n\n.ng-datepicker > .controls > .left > mdl-icon.prev-year-btn {\n  opacity: 0.4; }\n\n.ng-datepicker > .controls > .right {\n  width: 40px;\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center; }\n\n.ng-datepicker > .controls > .right > mdl-icon.next-year-btn {\n  opacity: 0.4; }\n\n.ng-datepicker > .controls > span.date {\n  width: 160px;\n  text-align: center;\n  font-size: 14px;\n  color: #565a5c;\n  font-weight: bold;\n  float: left;\n  padding: 3px 0 0 0; }\n\n.ng-datepicker > .day-names {\n  width: 250px;\n  border-bottom: 1px solid #c4c4c4;\n  display: inline-block; }\n\n.ng-datepicker > .day-names > span {\n  width: 34.5px;\n  text-align: center;\n  color: #82888a;\n  float: left;\n  display: block; }\n\n.ng-datepicker > .calendar {\n  width: 250px;\n  display: inline-block;\n  margin: -5px 0 -6px -1px;\n  padding: 0; }\n\n.ng-datepicker > .calendar > span.day {\n  width: 34.5px;\n  height: 35px;\n  border-left: 1px solid #c4c4c4;\n  border-bottom: 1px solid #c4c4c4;\n  float: left;\n  display: block;\n  color: #565a5c;\n  text-align: center;\n  font-weight: bold;\n  line-height: 35px;\n  margin: 0;\n  padding: 0;\n  font-size: 14px;\n  cursor: pointer; }\n\n.ng-datepicker > .calendar > span.day:last-child {\n  border-right: 1px solid #c4c4c4; }\n\n.ng-datepicker > .calendar > span.day:nth-child(7n) {\n  border-right: none; }\n\n.ng-datepicker > .calendar > span.day.disabled {\n  border-left: 1px solid transparent;\n  cursor: default;\n  pointer-events: none; }\n\n.ng-datepicker > .calendar > span.day:hover {\n  background: rgba(0, 0, 0, 0.4);\n  color: #fff; }\n\n.ng-datepicker > .calendar > span.day.selected {\n  background: rgba(0, 0, 0, 0.8);\n  cursor: default;\n  pointer-events: none;\n  color: #fff; }\n\n.ng-datepicker.static {\n  position: relative;\n  width: 100%;\n  box-sizing: border-box; }\n\n.ng-datepicker.static > .controls {\n  width: 100%;\n  text-align: center;\n  background-color: #eee;\n  padding: 5px 0; }\n\n.ng-datepicker.static > .controls > .left > mdl-icon.prev-month-btn {\n  margin-top: -6px; }\n\n.ng-datepicker.static > .controls > span.date {\n  width: auto;\n  float: none;\n  display: inline-block;\n  padding-top: 4px; }\n\n.ng-datepicker.static > .day-names {\n  width: 100%;\n  background-color: #f9f9f9; }\n\n.ng-datepicker.static > .day-names > span {\n  width: calc(100%/7); }\n\n.ng-datepicker.static > .calendar {\n  width: 100%; }\n\n.ng-datepicker.static > .calendar > span.day {\n  width: calc(100%/7 - 1px);\n  height: 50px;\n  line-height: 50px; }\n"

/***/ },
/* 898 */
/***/ function(module, exports) {

module.exports = ".flex-card {\n  background-color: #fdfdfd;\n  border-radius: 5px;\n  margin: 10px 30px 0 10px; }\n  .flex-card .row {\n    border-bottom: 1px solid #d7d7d7;\n    display: -webkit-inline-box;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    width: 100%;\n    text-align: left;\n    color: #181818;\n    -webkit-transition: backgrounc-color 0.28s cubic-bezier(0.4, 0, 0.2, 1);\n    transition: backgrounc-color 0.28s cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer; }\n    .flex-card .row:hover {\n      background-color: #eeeeee; }\n    .flex-card .row .col {\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1;\n      padding: 15px; }\n    .flex-card .row.tooltips {\n      color: #8d8d8d;\n      text-transform: capitalize; }\n      .flex-card .row.tooltips .col {\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none; }\n      .flex-card .row.tooltips:hover {\n        background-color: #fdfdfd; }\n    .flex-card .row .arrow-down, .flex-card .row .arrow-up {\n      color: #212121; }\n    .flex-card .row .arrow-down::before, .flex-card .row .arrow-up::before {\n      vertical-align: bottom;\n      font-family: 'Material Icons';\n      font-weight: normal;\n      font-style: normal;\n      font-size: 1.4rem;\n      line-height: 1;\n      letter-spacing: normal;\n      text-transform: none;\n      display: inline-block;\n      white-space: nowrap;\n      word-wrap: normal;\n      direction: ltr;\n      -webkit-font-feature-settings: 'liga';\n      -webkit-font-smoothing: antialiased; }\n    .flex-card .row .arrow-down::before {\n      content: 'arrow_downward'; }\n    .flex-card .row .arrow-up::before {\n      content: 'arrow_upward'; }\n  .flex-card mdl-progress {\n    width: 100%; }\n  .flex-card .mdl-button.mdl-button--fab {\n    position: absolute;\n    margin-right: 20px;\n    right: 0;\n    bottom: 5vh; }\n"

/***/ },
/* 899 */
/***/ function(module, exports) {

module.exports = ".backdrop {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  z-index: 99;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center; }\n  .backdrop .modal {\n    box-sizing: border-box;\n    width: 100%; }\n"

/***/ },
/* 900 */
/***/ function(module, exports) {

module.exports = ".navbar {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  background-color: white;\n  height: 70px;\n  box-shadow: 0 0 5px #afafaf;\n  position: relative; }\n  .navbar .navbar-title {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -webkit-box-flex: 4;\n        -ms-flex: 4;\n            flex: 4;\n    /*padding-left: 7vw;*/ }\n    .navbar .navbar-title .menu {\n      width: 80px; }\n    .navbar .navbar-title .logo {\n      color: #a187af;\n      font-weight: 800;\n      font-size: 2em; }\n    .navbar .navbar-title .sub-title {\n      color: #a187af;\n      font-size: 1.5em;\n      padding-left: 1vw; }\n  .navbar .navbar-holder {\n    -webkit-box-flex: 6;\n        -ms-flex: 6;\n            flex: 6;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-pack: end;\n        -ms-flex-pack: end;\n            justify-content: flex-end;\n    width: 100%;\n    overflow: hidden;\n    position: relative; }\n    .navbar .navbar-holder .navbar-scroll {\n      display: -webkit-inline-box;\n      display: -ms-inline-flexbox;\n      display: inline-flex;\n      -webkit-transition: all .5s ease;\n      transition: all .5s ease; }\n      .navbar .navbar-holder .navbar-scroll .navbar-item {\n        display: -webkit-inline-box;\n        display: -ms-inline-flexbox;\n        display: inline-flex;\n        -webkit-box-align: center;\n            -ms-flex-align: center;\n                align-items: center;\n        color: #4a4a4a;\n        cursor: pointer;\n        font-weight: 500;\n        text-decoration: none;\n        white-space: nowrap; }\n        .navbar .navbar-holder .navbar-scroll .navbar-item p {\n          margin: 0;\n          padding: 0.6vh 1.5vw; }\n        .navbar .navbar-holder .navbar-scroll .navbar-item.active-route p {\n          border: 2px solid #a187af;\n          border-radius: 5px; }\n    .navbar .navbar-holder .arrow {\n      position: absolute;\n      display: -webkit-inline-box;\n      display: -ms-inline-flexbox;\n      display: inline-flex;\n      height: 100%;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      cursor: pointer;\n      min-width: 60px;\n      -webkit-box-pack: center;\n          -ms-flex-pack: center;\n              justify-content: center;\n      top: 0;\n      opacity: 0;\n      visibility: hidden; }\n      .navbar .navbar-holder .arrow.show {\n        opacity: 1;\n        visibility: visible; }\n    .navbar .navbar-holder .arrow-back {\n      left: 0px;\n      z-index: 1;\n      background-image: -webkit-linear-gradient(left, white 65%, rgba(255, 255, 255, 0) 100%);\n      background-image: linear-gradient(to right, white 65%, rgba(255, 255, 255, 0) 100%); }\n    .navbar .navbar-holder .arrow-forward {\n      right: 0px;\n      background-image: -webkit-linear-gradient(left, rgba(255, 255, 255, 0) 0%, white 35%, white 100%);\n      background-image: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, white 35%, white 100%); }\n\n@media screen and (max-width: 1200px) {\n  .logo {\n    font-size: 1.5em !important; }\n  .sub-title {\n    font-size: 1.3em !important; } }\n"

/***/ },
/* 901 */
/***/ function(module, exports) {

module.exports = ".navbar {\n  height: 20px;\n  background-color: #b9c5d8;\n  color: #fff;\n  padding: 13px 0px 15px 4rem;\n  font-size: 1.8rem;\n  line-height: 1.8rem; }\n\n@media screen and (min-width: 1024px) {\n  .navbar {\n    padding-left: 10px; } }\n"

/***/ },
/* 902 */
/***/ function(module, exports) {

module.exports = ".searchbar {\n  position: relative;\n  width: 100%;\n  text-align: right;\n  padding: 15px 30px;\n  box-sizing: border-box; }\n  .searchbar mdl-icon {\n    position: absolute;\n    right: 30px;\n    top: 35px;\n    -webkit-transition: all .5s ease;\n    transition: all .5s ease;\n    cursor: pointer;\n    -webkit-user-select: none;\n    max-width: 24px;\n    will-change: right; }\n  .searchbar .search-button {\n    z-index: 1; }\n  .searchbar .clear-button, .searchbar mdl-textfield {\n    opacity: 0;\n    visibility: hidden;\n    will-change: opacity;\n    -webkit-transition: all 2s ease;\n    transition: all 2s ease;\n    width: 230px; }\n  .searchbar.active mdl-icon.search-button {\n    right: 260px; }\n  .searchbar.active .clear-button, .searchbar.active mdl-textfield {\n    opacity: 1;\n    visibility: visible; }\n"

/***/ },
/* 903 */
/***/ function(module, exports) {

module.exports = ".colored-button {\n  display: inline-block;\n  text-align: center;\n  text-transform: uppercase;\n  padding: 5px 8px;\n  border-radius: 5px;\n  margin: 5px;\n  color: #fff;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden; }\n  .colored-button.ecce {\n    background-color: #8ec278;\n    padding: 5px 20px; }\n  .colored-button.not-ecce {\n    background-color: #e3bd54; }\n  .colored-button.active {\n    background-color: #7395c9; }\n    .colored-button.active.light-green {\n      background-color: #6bc8b7; }\n  .colored-button.inactive {\n    background-color: #b9b9b9; }\n"

/***/ },
/* 904 */
/***/ function(module, exports) {

module.exports = ".ecce-modal {\n  width: 80%;\n  margin: auto;\n  max-width: 1000px;\n  box-sizing: border-box;\n  border-radius: 5px;\n  background-color: white; }\n  .ecce-modal mdl-icon.close-button {\n    max-width: 24px;\n    cursor: pointer;\n    position: absolute;\n    top: 15px;\n    right: 15px; }\n  .ecce-modal .modal-header {\n    position: relative;\n    background-color: #4dbe9c;\n    color: #fff;\n    border-radius: 4px 4px 0 0; }\n    .ecce-modal .modal-header .child-details {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      padding: 0 15px;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center; }\n      .ecce-modal .modal-header .child-details .ecce-status {\n        -webkit-box-flex: 0;\n            -ms-flex: 0 0 20%;\n                flex: 0 0 20%;\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-align: center;\n            -ms-flex-align: center;\n                align-items: center;\n        padding: 0 30px; }\n        .ecce-modal .modal-header .child-details .ecce-status app-colored-button {\n          cursor: pointer; }\n      .ecce-modal .modal-header .child-details .name {\n        margin: 0;\n        font-size: 1.8rem;\n        line-height: 2rem; }\n    .ecce-modal .modal-header .close-button {\n      position: absolute;\n      right: 5px;\n      top: 5px; }\n    .ecce-modal .modal-header .control-pills {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex; }\n      .ecce-modal .modal-header .control-pills button {\n        -webkit-box-flex: 1;\n            -ms-flex: 1;\n                flex: 1;\n        color: #fff; }\n        .ecce-modal .modal-header .control-pills button.active-pill {\n          border-bottom: 2px solid #ec058e; }\n  .ecce-modal .modal-body {\n    padding: 20px;\n    color: #6d6d6d;\n    min-height: 300px; }\n    .ecce-modal .modal-body .error-message {\n      color: #d50000;\n      font-weight: 500; }\n    .ecce-modal .modal-body > div .header, .ecce-modal .modal-body > div .total-value {\n      font-weight: bolder; }\n    .ecce-modal .modal-body > div.ecce .total-value {\n      font-size: 2rem; }\n    .ecce-modal .modal-body > div.ecce .row {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex; }\n      .ecce-modal .modal-body > div.ecce .row .col:first-child {\n        -webkit-box-flex: 0;\n            -ms-flex: 0 0 80%;\n                flex: 0 0 80%; }\n    .ecce-modal .modal-body > div.ecce .payment-model {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      width: 50%; }\n      .ecce-modal .modal-body > div.ecce .payment-model mdl-switch {\n        -webkit-box-flex: 1;\n            -ms-flex: 1;\n                flex: 1;\n        margin-left: 20px; }\n    .ecce-modal .modal-body > div.ecce .button-bar {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      -webkit-box-pack: start;\n          -ms-flex-pack: start;\n              justify-content: flex-start; }\n      .ecce-modal .modal-body > div.ecce .button-bar label {\n        width: 145px;\n        margin-right: 5px; }\n    .ecce-modal .modal-body > div.costs {\n      color: #000; }\n      .ecce-modal .modal-body > div.costs p {\n        color: #6d6d6d; }\n        .ecce-modal .modal-body > div.costs p.fee {\n          font-weight: 600;\n          font-size: 2rem; }\n      .ecce-modal .modal-body > div.costs .row {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-align: start;\n            -ms-flex-align: start;\n                align-items: flex-start;\n        -webkit-box-pack: start;\n            -ms-flex-pack: start;\n                justify-content: flex-start; }\n        .ecce-modal .modal-body > div.costs .row.extras p {\n          margin: 0;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis; }\n        .ecce-modal .modal-body > div.costs .row.extras span.extras-value {\n          font-size: 16px;\n          line-height: 2rem; }\n        .ecce-modal .modal-body > div.costs .row.totals {\n          margin-top: 60px; }\n        .ecce-modal .modal-body > div.costs .row .col {\n          margin-right: 20px;\n          -webkit-box-flex: 1;\n              -ms-flex: 1;\n                  flex: 1; }\n          .ecce-modal .modal-body > div.costs .row .col.col-40 {\n            -webkit-box-flex: 0;\n                -ms-flex: 0 0 40%;\n                    flex: 0 0 40%; }\n          .ecce-modal .modal-body > div.costs .row .col.col-90 {\n            -webkit-box-flex: 90%;\n                -ms-flex: 90%;\n                    flex: 90%; }\n          .ecce-modal .modal-body > div.costs .row .col.col-10 {\n            -webkit-box-flex: 0;\n                -ms-flex: 0 0 10%;\n                    flex: 0 0 10%; }\n          .ecce-modal .modal-body > div.costs .row .col mdl-textfield {\n            padding: 0 0 20px 0;\n            width: auto; }\n  .ecce-modal .control-bar {\n    padding: 5px;\n    border-top: 1px solid #dedede;\n    overflow: hidden; }\n    .ecce-modal .control-bar .button-right {\n      float: right;\n      display: -webkit-inline-box;\n      display: -ms-inline-flexbox;\n      display: inline-flex;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center; }\n"

/***/ },
/* 905 */
/***/ function(module, exports) {

module.exports = ".list-buttons.interactive app-colored-button {\n  cursor: pointer; }\n"

/***/ },
/* 906 */
/***/ function(module, exports) {

module.exports = "/* Warning this component uses no view encapsulation */\n.ecce-subventions .flex-card .col.attendance {\n  -webkit-box-flex: 1;\n      -ms-flex: 1 1 50%;\n          flex: 1 1 50%;\n  text-align: left; }\n\n.ecce-subventions .flex-card .col.status {\n  -webkit-box-flex: 0;\n      -ms-flex: 0 0 10%;\n          flex: 0 0 10%; }\n\n.ecce-subventions .flex-card .col.start-date {\n  -webkit-box-flex: 0;\n      -ms-flex: 0 0 10%;\n          flex: 0 0 10%; }\n\n.ecce-subventions .flex-card .col.child-name {\n  -webkit-box-flex: 1;\n      -ms-flex: 1 1 15%;\n          flex: 1 1 15%;\n  text-align: left; }\n"

/***/ },
/* 907 */
/***/ function(module, exports) {

module.exports = ".verify {\n  margin: 5px 30px;\n  float: left; }\n  .verify mdl-progress {\n    position: fixed;\n    top: 0;\n    right: 0;\n    left: 0;\n    width: 100%; }\n  .verify .vista-logo img {\n    max-width: 15rem; }\n  .verify .stabilizer {\n    position: fixed;\n    top: 40vh;\n    right: 0;\n    left: 0; }\n    .verify .stabilizer p {\n      width: 100vw;\n      font-size: 2.5rem;\n      line-height: 3rem;\n      color: #fff;\n      text-align: center; }\n"

/***/ },
/* 908 */
/***/ function(module, exports) {

module.exports = "<app-navbar title=\"Attendance\"></app-navbar>\r\n<app-navbar-small [routes]=\"routes\"></app-navbar-small>\r\n<div class=\"layout-content\">\r\n  <app-flex-card\r\n    [collection]=\"children\"\r\n    [loading]=\"loading\"\r\n    [options]=\"tableOptions\"\r\n    class=\"attendance\">\r\n    <app-searchbar (searchFilter)=\"handleFilter($event)\"></app-searchbar>\r\n    <div class=\"row\" *ngFor=\"let child of children\">\r\n      <div class=\"col\">\r\n        <img src={{child.picture}} alt=\"Child's Avatar\">\r\n      </div>\r\n      <div class=\"col\">\r\n        {{child.name}}\r\n      </div>\r\n      <div class=\"col presence-col\">\r\n        <app-presence-bar [child]=\"child\"></app-presence-bar>\r\n      </div>\r\n      <div class=\"col time-col\" *ngIf=\"!child.editState || child.editState == 'OUT'\">\r\n        <span (click)=\"editTime(child, 'IN')\">\r\n          {{getAttendanceStatusTime(child, 'IN')}}\r\n        </span>\r\n      </div>\r\n      <div class=\"col time-col\" *ngIf=\"child.editState\">\r\n        <app-timepicker [currentTime]=\"currentTime\" (timeChanged)=\"handleTimechange($event, child)\"></app-timepicker>\r\n      </div>\r\n      <div class=\"col time-col\" *ngIf=\"!child.editState || child.editState == 'IN'\">\r\n        <span (click)=\"editTime(child, 'OUT')\">\r\n          {{getAttendanceStatusTime(child, 'OUT')}}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </app-flex-card>\r\n</div>\r\n"

/***/ },
/* 909 */
/***/ function(module, exports) {

module.exports = "<div class=\"presence-bar\">\r\n  <mdl-button\r\n    mdl-ripple mdl-colored=\"accent\"\r\n    (click)=\"updateAttendance(attendanceStates.IN)\"\r\n    class=\"status-in\" [class.active]=\"child.attendanceState == 'IN'\">\r\n      IN\r\n  </mdl-button>\r\n  <mdl-button\r\n    mdl-ripple mdl-colored=\"accent\"\r\n    (click)=\"updateAttendance(attendanceStates.OUT)\"\r\n    class=\"status-out\" [class.active]=\"child.attendanceState == 'OUT'\">\r\n      OUT\r\n  </mdl-button>\r\n  <mdl-button\r\n    mdl-ripple mdl-colored=\"accent\"\r\n    (click)=\"updateAttendance(attendanceStates.ABSENT)\"\r\n    class=\"status-absent\"\r\n    [class.active]=\"child.attendanceState == 'ABSENT'\">\r\n      ABSENT\r\n  </mdl-button>\r\n</div>\r\n"

/***/ },
/* 910 */
/***/ function(module, exports) {

module.exports = "<div class=\"timepicker\">\r\n  <mdl-button (click)=\"subtractMinutes()\">\r\n    <mdl-icon>keyboard_arrow_left</mdl-icon>\r\n  </mdl-button>\r\n  <span (click)=\"setTime()\">\r\n    {{parseDate()}}\r\n  </span>\r\n  <mdl-button (click)=\"addMinutes()\">\r\n    <mdl-icon>keyboard_arrow_right</mdl-icon>\r\n  </mdl-button>\r\n</div>\r\n"

/***/ },
/* 911 */
/***/ function(module, exports) {

module.exports = "<div class=\"dashboard-info layout-content\">\r\n\r\n  <div class=\"header\">\r\n    <img src=\"/assets/img/cd-logo.svg\" atl=\"LittleVista LITE\" />\r\n    <img src=\"/assets/img/slide01.png\" class=\"header-children\" />\r\n  </div>\r\n\r\n  <div class=\"main-content\">\r\n    <p class=\"title mdl-typography--display-1-color-contrast\">\r\n      Getting Started with Little Vista LITE\r\n    </p>\r\n\r\n    <div class=\"mdl-grid\">\r\n      <div class=\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--4-col-phone mdl-card mdl-shadow--3dp\">\r\n        <div class=\"mdl-card__media\">\r\n          <img src=\"/assets/img/absent.png\">\r\n        </div>\r\n        <div class=\"mdl-card__title\">\r\n          <h4 class=\"mdl-card__title-text\">Setting up your centre</h4>\r\n        </div>\r\n        <div class=\"mdl-card__supporting-text\">\r\n          <span class=\"mdl-typography--font-light mdl-typography--subhead\">\r\n            Update your address, phone number and other contact details.\r\n          </span>\r\n        </div>\r\n        <div class=\"mdl-card__actions\">\r\n          <a target=\"_blank\" class=\"card-button mdl-button mdl-js-button mdl-typography--text-uppercase\" href=\"https://littlevista.wistia.com/medias/m6n21c53eu\">\r\n            <i class=\"material-icons\">play_circle_outline</i> Play Video\r\n          </a>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--4-col-phone mdl-card mdl-shadow--3dp\">\r\n        <div class=\"mdl-card__media\">\r\n          <img src=\"/assets/img/attendance.png\">\r\n        </div>\r\n        <div class=\"mdl-card__title\">\r\n          <h4 class=\"mdl-card__title-text\">Attendance &amp; Reports</h4>\r\n        </div>\r\n        <div class=\"mdl-card__supporting-text\">\r\n          <span class=\"mdl-typography--font-light mdl-typography--subhead\">\r\n            Manage your daily attendance and realtime reports\r\n          </span>\r\n        </div>\r\n        <div class=\"mdl-card__actions\">\r\n          <a target=\"_blank\" class=\"card-button mdl-button mdl-js-button mdl-typography--text-uppercase\" href=\"https://littlevista.wistia.com/medias/p0pcc2aox4\">\r\n            <i class=\"material-icons\">play_circle_outline</i> Play Video\r\n          </a>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--4-col-phone mdl-card mdl-shadow--3dp\">\r\n        <div class=\"mdl-card__media\">\r\n          <img src=\"/assets/img/absent.png\">\r\n        </div>\r\n        <div class=\"mdl-card__title\">\r\n          <h4 class=\"mdl-card__title-text\">How to use Subventions &amp; ECCE</h4>\r\n        </div>\r\n        <div class=\"mdl-card__supporting-text\">\r\n          <span class=\"mdl-typography--font-light mdl-typography--subhead\">\r\n            Click on the Subventions link to manage ECCE children and prepare an ECCE report.\r\n          </span>\r\n        </div>\r\n        <div class=\"mdl-card__actions\">\r\n          <a target=\"_blank\" class=\"card-button mdl-button mdl-js-button mdl-typography--text-uppercase\" href=\"https://littlevista.wistia.com/medias/rccl2e069r\">\r\n            <i class=\"material-icons\">play_circle_outline</i> Play Video\r\n          </a>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--4-col-phone mdl-card mdl-shadow--3dp\">\r\n        <div class=\"mdl-card__media\">\r\n          <img src=\"/assets/img/activities.png\">\r\n        </div>\r\n        <div class=\"mdl-card__title\">\r\n          <h4 class=\"mdl-card__title-text\">Need more help?</h4>\r\n        </div>\r\n        <div class=\"mdl-card__supporting-text\">\r\n          <span class=\"mdl-typography--font-light mdl-typography--subhead\">\r\n            Contact our support team about premium training and our tablet-based room activity recorder.\r\n          </span>\r\n        </div>\r\n        <div class=\"mdl-card__actions\">\r\n          <a class=\"card-button mdl-button mdl-js-button mdl-typography--text-uppercase\" href=\"\">\r\n            <i class=\"material-icons\">contact_phone</i> Contact Support\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n"

/***/ },
/* 912 */
/***/ function(module, exports) {

module.exports = "<div class=\"dashboard\" mdl-shadow=\"2\">\r\n  <mdl-layout mdl-layout-drawer mdl-layout-header #mdlLayout=\"mdlLayout\">\r\n    <mdl-layout-drawer class=\"drawer\" mdl-shadow=\"8\">\r\n      <div class=\"drawer-content\">\r\n        <div class=\"profile-settings\">\r\n          <div class=\"drawer-logo\"></div>\r\n        </div>\r\n        <div class=\"profile-info\" *ngIf=\"profile\">\r\n          <p>\r\n            {{profile.additional.name}}\r\n          </p>\r\n          <img src={{profile.picture}} alt=\"Avatar\" />\r\n          <p>\r\n            {{profile.name}}\r\n          </p>\r\n        </div>\r\n        <div class=\"nav-container\">\r\n          <nav class=\"mdl-navigation\">\r\n            <a class=\"mdl-navigation__link\" routerLink=\"/dashboard\" (click)=\"mdlLayout.closeDrawer()\">\r\n              <mdl-icon>dashboard</mdl-icon>\r\n              Dashboard\r\n            </a>\r\n            <a class=\"mdl-navigation__link\" routerLink=\"/dashboard/subventions\" (click)=\"mdlLayout.closeDrawer()\">\r\n              <mdl-icon>content_paste</mdl-icon>\r\n              Subventions\r\n            </a>\r\n            <a class=\"mdl-navigation__link\" routerLink=\"/dashboard/attendance\" (click)=\"mdlLayout.closeDrawer()\">\r\n              <mdl-icon>assignment_turned_in</mdl-icon>\r\n              Attendance\r\n            </a>\r\n            <a class=\"mdl-navigation__link\" routerLink=\"/dashboard/reports\" (click)=\"mdlLayout.closeDrawer()\">\r\n              <mdl-icon>event_note</mdl-icon>\r\n              Reports\r\n            </a>\r\n            <a class=\"mdl-navigation__link\" routerLink=\"/dashboard/easy-fees\" (click)=\"mdlLayout.closeDrawer()\">\r\n              <mdl-icon>credit_card</mdl-icon>\r\n              Easy Fees\r\n            </a>\r\n            <a class=\"mdl-navigation__link\" routerLink=\"/dashboard/occupancy\" (click)=\"mdlLayout.closeDrawer()\">\r\n              <mdl-icon>event_note</mdl-icon>\r\n              Occupancy Plan\r\n            </a>\r\n            <a class=\"mdl-navigation__link\" routerLink=\"/dashboard/settings\" (click)=\"mdlLayout.closeDrawer()\">\r\n              <mdl-icon>settings</mdl-icon>\r\n              Centre Setup\r\n            </a>\r\n            <a class=\"mdl-navigation__link\" routerLink=\"/\" (click)=\"logout()\">\r\n              <mdl-icon>exit_to_app</mdl-icon>\r\n              Logout\r\n            </a>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </mdl-layout-drawer>\r\n    <mdl-layout-content class=\"main-content\">\r\n      <router-outlet></router-outlet>\r\n    </mdl-layout-content>\r\n  </mdl-layout>\r\n</div>\r\n"

/***/ },
/* 913 */
/***/ function(module, exports) {

module.exports = "<div class=\"payment-view flex column\">\n  <app-popup-print-mandate \n      [showPopup]=\"showPopup\"\n      (closePopup)=\"popupClosed()\">\n  </app-popup-print-mandate>\n\n  <!--//start accordion header-->\n  <div class=\"accordion-header row flex\">\n    <span class=\"col flex flex2 text-indent20\">CURRENT CYCLE</span>\n    <span class=\"col flex flex3\">03/01/2017</span>\n  </div>\n  <!--//end accordion header-->\n  <!--//start accordion body-->\n  <div class=\"accordion-body flex\">\n\n    <div class=\"accordion-body-inner flex column\">\n      <!--//if existing email invoice-->\n      <div class=\"email-invoice row flex\">\n        <div class=\"pp-icons icon-inarrears\">EMAIL INVOICE</div>\n      </div>\n      <!--//end email invoice-->\n      <div class=\"row flex\">\n        <!--//start direct-debit element-->\n        <div class=\"v-payments direct-debit flex column\">\n          <div class=\"v-header row flex\">\n            <span class=\"col flex\">DIRECT DEBIT</span>\n            <span class=\"col flex justify-content-end not-bold\"><b class=\"mandate not-sent\">&nbsp;</b>&nbsp; Not Sent</span>\n          </div>\n          <div class=\"v-body row flex column\">\n            <div class=\"row flex\">\n              <div class=\"col\">EMAIL an E-MANDATE to the Guardian</div>\n            </div>\n            <div class=\"row flex padding-bottom20\">\n              <div class=\"col\">\n                <div class=\"pp-icons icon-active\">SEND E-MANDATE</div>\n              </div>\n            </div>\n            <div class=\"row flex\">\n              <div class=\"col\">PRINT and file an E-MANDATE to the Guardian</div>\n            </div>\n            <div class=\"row flex\">\n              <div class=\"col\">\n                <div class=\"pp-icons icon-projected\" (click)=\"printMandate()\">PRINT E-MANDATE</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!--//end direct-debit-->\n        <div class=\"flex flex1\"></div>\n        <!--//start total-cash-invoice-->\n        <div class=\"v-payments total-cash-invoice flex column\">\n          <div class=\"v-header row flex\">\n            <div class=\"col flex width-8\">TOTAL Cash Invoice</div>\n            <div class=\"col flex width-1\"></div>\n            <div class=\"col flex width-2\">€875</div>\n          </div>\n          <div class=\"v-body row flex column\">\n            <!--//start payment list-->\n            <div class=\"row flex\">\n              <div class=\"col flex width-8 bottom-border\">\n                <div class=\"col flex justify-content-start\">Monthly Fees</div>\n                <div class=\"col flex justify-content-end\">\n                  <div class=\"pp-icons icon-pastdue\">PAST DUE</div>\n                  <div class=\"pp-icons icon-remove\">REMOVE</div>\n                  <div class=\"pp-icons icon-unpaid\">UN PAID &nbsp;<span class=\"iv\">-</span></div>\n                </div>\n              </div>\n              <div class=\"col flex width-1\"></div>\n              <div class=\"col flex width-2 bottom-border\">€850</div>\n            </div>\n            <div class=\"row flex\">\n              <div class=\"col flex width-8 bottom-border\">\n                <div class=\"col flex justify-content-start\">Trip to the Zoo</div>\n                <div class=\"col flex justify-content-end\">\n                  <div class=\"pp-icons icon-inarrears\">IN ARREARS</div>\n                  <div class=\"pp-icons icon-late\">LATE</div>\n                  <div class=\"pp-icons icon-paid\">PAID &nbsp;<span class=\"iv\">x</span></div>\n                </div>\n              </div>\n              <div class=\"col flex width-1\"></div>\n              <div class=\"col flex width-2 bottom-border\">€25</div>\n            </div>\n            <!--//end payment list-->\n          </div>\n          <div class=\"v-footer row flex column\">\n            <div class=\"row flex align-items-center\">\n              <div class=\"col flex width-8\"><mdl-textfield placeholder=\"Type here to add to the current invoice\"></mdl-textfield></div>\n              <div class=\"col flex width-1\"></div>\n              <div class=\"col flex width-2\"><mdl-textfield placeholder=\"€0\"></mdl-textfield></div>\n            </div>\n            <div class=\"row flex\">\n              <div class=\"col flex\">\n                <div class=\"pp-icons icon-active\">Add to next CASH invoice</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!--//end total-cash-invoice-->\n      </div>\n    </div>\n  </div>\n  <!--//end accordion body-->\n</div>"

/***/ },
/* 914 */
/***/ function(module, exports) {

module.exports = "<div class=\"choose-org-type\">\r\n  <p class=\"title\">\r\n    Easy Fee’s Required Documentation.\r\n  </p>\r\n  <p>\r\n    This documentation is required for Anti-Money Laundering purposes.\r\n    Please find the organisation relevant to your own.\r\n  </p>\r\n\r\n\r\n  <div class=\"row tooltips\">\r\n    <div class=\"col type-col\"></div>\r\n    <div class=\"col\">\r\n      Bank Statement\r\n    </div>\r\n    <div class=\"col\">\r\n      Passport\r\n    </div>\r\n    <div class=\"col\">\r\n      Scanned copy of constitution documents\r\n    </div>\r\n    <div class=\"col\">\r\n      Copy of the latest annual return\r\n    </div>\r\n    <div class=\"col\">\r\n      Passport for all individuals in control of the body\r\n    </div>\r\n    <div class=\"col\">\r\n      Utility Bill\r\n    </div>\r\n  </div>\r\n  <div class=\"row\" (click)=\"setOrgType('LIMITED_COMPANY')\">\r\n    <div class=\"col type-col\">\r\n      Private/Limited Liability Company\r\n    </div>\r\n    <div class=\"col\">\r\n      <div class=\"point\"></div>\r\n    </div>\r\n    <div class=\"col\"></div>\r\n    <div class=\"col\"></div>\r\n    <div class=\"col\"></div>\r\n    <div class=\"col\"></div>\r\n    <div class=\"col\"></div>\r\n  </div>\r\n  <div class=\"row\" (click)=\"setOrgType('SOLETRADER')\">\r\n    <div class=\"col type-col\">\r\n      Sole Trader\r\n    </div>\r\n    <div class=\"col\">\r\n      <div class=\"point\"></div>\r\n    </div>\r\n    <div class=\"col\">\r\n      <div class=\"point\"></div>\r\n    </div>\r\n    <div class=\"col\"></div>\r\n    <div class=\"col\"></div>\r\n    <div class=\"col\"></div>\r\n    <div class=\"col\"></div>\r\n  </div>\r\n  <div class=\"row\" (click)=\"setOrgType('CLUB_OR_SOC')\">\r\n    <div class=\"col type-col\">\r\n      Clubs &amp; Societies\r\n    </div>\r\n    <div class=\"col\">\r\n      <div class=\"point\"></div>\r\n    </div>\r\n    <div class=\"col\">\r\n      <div class=\"point\"></div>\r\n    </div>\r\n    <div class=\"col\">\r\n      <div class=\"point\"></div>\r\n    </div>\r\n    <div class=\"col\"></div>\r\n    <div class=\"col\"></div>\r\n    <div class=\"col\">\r\n      <div class=\"point\"></div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\" (click)=\"setOrgType('CHARITY_RELIGIOUS')\">\r\n    <div class=\"col type-col\">\r\n      Community Centres / Charities\r\n    </div>\r\n    <div class=\"col\">\r\n      <div class=\"point\"></div>\r\n    </div>\r\n    <div class=\"col\"></div>\r\n    <div class=\"col\">\r\n      <div class=\"point\"></div>\r\n    </div>\r\n    <div class=\"col\">\r\n      <div class=\"point\"></div>\r\n    </div>\r\n    <div class=\"col\">\r\n      <div class=\"point\"></div>\r\n    </div>\r\n    <div class=\"col\">\r\n      <div class=\"point\"></div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\" (click)=\"setOrgType('PARTNER_OR_ASSOC')\">\r\n    <div class=\"col type-col\">\r\n      Partnerships &amp; Associations\r\n    </div>\r\n    <div class=\"col\">\r\n      <div class=\"point\"></div>\r\n    </div>\r\n    <div class=\"col\"></div>\r\n    <div class=\"col\">\r\n      <div class=\"point\"></div>\r\n    </div>\r\n    <div class=\"col\">\r\n      <div class=\"point\"></div>\r\n    </div>\r\n    <div class=\"col\">\r\n      <div class=\"point\"></div>\r\n    </div>\r\n    <div class=\"col\">\r\n      <div class=\"point\"></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"

/***/ },
/* 915 */
/***/ function(module, exports) {

module.exports = "<div class=\"backdrop\" [@backdrop]=\"showPopup\">\n  <div class=\"modal\" [@modal]=\"showPopup\">\n    <div class=\"simple-popup\">\n      <div class=\"popup-header flex\">\n        <span class=\"btn\"><mdl-icon (click)=\"destroy()\" class=\"close-button\">close</mdl-icon></span>\n      </div>\n      <div class=\"popup-content flex column\">\n        <div class=\"row flex\">\n          <div class=\"col\">A mandate will be printed for \"guardian_name\". You will need to keep this ﬁle on record.<br>Please enter the guardian’s IBAN</div>\n        </div>\n        <div class=\"row flex\">\n          <div class=\"col\">\n            <mdl-textfield></mdl-textfield>\n          </div>\n        </div>\n      </div>\n      <div class=\"popup-footer flex\">\n        <mdl-button mdl-ripple (click)=\"destroy()\">Print Mandate</mdl-button>\n      </div>\n    </div>\n  </div>\n</div>"

/***/ },
/* 916 */
/***/ function(module, exports) {

module.exports = "<div class=\"easy-fees-dashboard flex column\">\n  <!--//start header panel-->\n  <div class=\"pane-info flex justify-content-start\" mdl-shadow=\"2\">\n    <div class=\"row flex flex1\"></div>\n    <div class=\"info row flex flex3 column\">\n      <div class=\"title row flex\">TOTAL</div>\n      <div class=\"row flex\">\n        <span class=\"col\">\n          <mdl-icon class=\"account\">supervisor_account</mdl-icon>\n        </span>\n        <span class=\"col count\">\n          <b class=\"num\">97</b>\n          <br>\n          (€19,847)\n        </span>\n      </div>\n    </div>\n    <div class=\"row flex flex1\"></div>\n    <div class=\"info row flex flex3 column\">\n      <div class=\"title row flex\">Confirmed</div>\n      <div class=\"row flex\">\n        <span class=\"col\">\n          <mdl-icon class=\"confirm\">credit_card</mdl-icon>\n        </span>\n        <span class=\"col count\">\n          <b class=\"num\">8</b>\n          <br>\n          (€19,847)\n        </span>\n      </div>\n    </div>\n    <div class=\"row flex flex1\"></div>\n    <div class=\"info row flex flex3 column\">\n      <div class=\"title row flex\">Pending</div>\n      <div class=\"row flex\">\n        <span class=\"col\">\n          <mdl-icon class=\"pending\">credit_card</mdl-icon>\n        </span>\n        <span class=\"col count\">\n          <b class=\"num\">7</b>\n          <br>\n          (€19,847)\n        </span>\n      </div>\n    </div>\n    <div class=\"row flex flex1\"></div>\n    <div class=\"info row flex flex3 column\">\n      <div class=\"title row flex\">Rejected</div>\n      <div class=\"row flex\">\n        <span class=\"col\">\n          <mdl-icon class=\"reject\">credit_card</mdl-icon>\n        </span>\n        <span class=\"col count\">\n          <b class=\"num\">5</b>\n          <br>\n          (€19,847)\n        </span>\n      </div>\n    </div>\n  </div>\n  <!--//end header panel-->\n  <br>\n  <!--//start list panel-->\n  <div class=\"pane-list flex column\" mdl-shadow=\"2\">\n    <div class=\"list-header row flex\">\n        <div class=\"col flex flex2 h-name\">CURRENT</div>\n        <div class=\"col flex flex3 picker-row\">\n          <div class=\"month-picker\">\n            <mdl-icon (click)=\"prevMonth()\">keyboard_arrow_left</mdl-icon>\n            <span class=\"title\">\n              <b>{{currentDate.toDate() | date:'MMMM'}}</b> {{currentDate.toDate() | date:'yyyy'}}\n            </span>\n            <mdl-icon (click)=\"nextMonth()\">keyboard_arrow_right</mdl-icon>\n          </div>\n        </div>\n        <div class=\"col flex flex2 h-name\">Pending</div>\n        <div class=\"col flex flex3 sort-button\" (mouseenter)=\"sortFlag=true\" (mouseleave)=\"sortFlag=false\">Sort By</div>\n        <ul class=\"sort-popup\" mdl-shadow=\"2\" [hidden]=\"!sortFlag\" (mouseenter)=\"sortFlag=true\" (mouseleave)=\"sortFlag=false\">\n          <li (click)=\"sortOrder('1')\">CASH</li>\n          <li (click)=\"sortOrder('2')\">Direct Debit</li>\n          <li (click)=\"sortOrder('3')\">E-mandate Pending</li>\n        </ul>\n    </div>\n\n    <div class=\"list-body row flex column\">\n      <div class=\"row flex header\">\n        <span class=\"col flex flex2\">Children</span>\n        <span class=\"col flex flex3\">Guardians(Debtors)</span>\n        <span class=\"col flex flex5 balance\">Balance</span>\n      </div>\n      <!--//children or familes list-->\n      <div class=\"childron-list row flex\">\n        <span class=\"col flex flex2\">Tommy, Anna</span>\n        <span class=\"col flex flex3\">\n          <b class=\"mandate not-sent\">&nbsp;</b>&nbsp; Lorraine Murphy\n        </span>\n        <span class=\"col flex flex5 balance\">Guardians(Debtors)</span>\n      </div>\n      \n      <div class=\"childron-list row flex column\">\n        <div class=\"row flex\">\n          <span class=\"col flex flex2\">Tommy</span>\n          <span class=\"col flex flex3\">\n            <b class=\"mandate active\">&nbsp;</b>&nbsp; Lorraine Murphy\n          </span>\n          <span class=\"col flex flex5 balance\">Guardians(Debtors)</span>\n        </div>\n      </div>\n\n      <div class=\"childron-list row flex column\">\n        <div class=\"row flex\" (click)=\"selectRow()\">\n          <span class=\"col flex flex2\">Tommy, Anna</span>\n          <span class=\"col flex flex3\">\n            <b class=\"mandate pending\">&nbsp;</b>&nbsp; Lorraine Murphy\n          </span>\n          <span class=\"col flex flex5 balance\">\n              <div class=\"pp-icons icon-pastdue\">PAST DUE</div>\n              <div class=\"pp-icons icon-projected\">PROJECTED</div>\n              <div class=\"pp-icons icon-unpaid\">UN PAID &nbsp;<span class=\"iv\">-</span></div>\n              <div class=\"pp-icons icon-money\">€675.00</div>\n          </span>\n        </div>\n        <div class=\"row flex\" [hidden]=\"!accordionState\">\n          <app-accordion-payments-view  class=\"flex\"></app-accordion-payments-view>\n        </div>\n      </div>\n      <!--//end children or families list-->\n\n    </div>\n  </div>\n  <!--//end list panel-->\n</div>"

/***/ },
/* 917 */
/***/ function(module, exports) {

module.exports = "<div class=\"easy-fees-intro\">\r\n  <div class=\"intro-header\">\r\n    <h2 class=\"header-text\">Easy Fees</h2>\r\n    <mdl-button mdl-shadow=\"6\" mdl-ripple routerLink=\"../setup\">\r\n      Get Started\r\n    </mdl-button>\r\n  </div>\r\n  <div class=\"fee-policy\">\r\n    <p>Intro text including feedback from ECI regarding Fee Policy</p>\r\n  </div>\r\n  <div class=\"info-cards\">\r\n    <div class=\"info-card\" mdl-shadow=\"6\">\r\n      <div class=\"card-media\">\r\n        <img src=\"/assets/img/easy-fees/intro.svg\" alt=\"\">\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <p class=\"card-title\">\r\n          Introduction\r\n        </p>\r\n        <p class=\"card-text\">\r\n          Collect and manage payments using Easy Fees. Automatically debit\r\n          customer accounts or track cash payments.\r\n        </p>\r\n      </div>\r\n      <div class=\"card-actions\">\r\n        <mdl-button mdl-ripple>\r\n          <mdl-icon>play_circle_outline</mdl-icon>\r\n          Play Video\r\n        </mdl-button>\r\n      </div>\r\n    </div>\r\n    <div class=\"info-card\" mdl-shadow=\"6\">\r\n      <div class=\"card-media\">\r\n        <img src=\"/assets/img/easy-fees/step-1.svg\" alt=\"\">\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <p class=\"card-title\">\r\n          Step 1\r\n        </p>\r\n        <p class=\"card-subtitle\">\r\n          Upload documentation\r\n        </p>\r\n        <p class=\"card-text\">\r\n          To set you up as a merchant we will need some documentation for AML\r\n          purposes.\r\n        </p>\r\n      </div>\r\n      <div class=\"card-actions\">\r\n        <mdl-button mdl-ripple>\r\n          <mdl-icon>play_circle_outline</mdl-icon>\r\n          Play Video\r\n        </mdl-button>\r\n      </div>\r\n    </div>\r\n    <div class=\"info-card\" mdl-shadow=\"6\">\r\n      <div class=\"card-media\">\r\n        <img src=\"/assets/img/easy-fees/step-2.svg\" alt=\"\">\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <p class=\"card-title\">\r\n          Step 2\r\n        </p>\r\n        <p class=\"card-subtitle\">\r\n          Collect E-Mandates\r\n        </p>\r\n        <p class=\"card-text\">\r\n          In order to collect fee’s from parents by direct debit each\r\n          parent will need to return an electronic mandate.\r\n        </p>\r\n      </div>\r\n      <div class=\"card-actions\">\r\n        <mdl-button mdl-ripple>\r\n          <mdl-icon>play_circle_outline</mdl-icon>\r\n          Play Video\r\n        </mdl-button>\r\n      </div>\r\n    </div>\r\n    <div class=\"info-card\" mdl-shadow=\"6\">\r\n      <div class=\"card-media\">\r\n        <img src=\"/assets/img/easy-fees/step-3.svg\" alt=\"\">\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <p class=\"card-title\">\r\n          Step 3\r\n        </p>\r\n        <p class=\"card-subtitle\">\r\n          Collect Payments!\r\n        </p>\r\n        <p class=\"card-text\">\r\n          Once the e-mandates have been returned you can start to collect\r\n          payments by direct debit.\r\n        </p>\r\n      </div>\r\n      <div class=\"card-actions\">\r\n        <mdl-button mdl-ripple>\r\n          <mdl-icon>play_circle_outline</mdl-icon>\r\n          Play Video\r\n        </mdl-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"

/***/ },
/* 918 */
/***/ function(module, exports) {

module.exports = "<div class=\"easy-fees-setup\">\r\n  <app-modal [showModal]=\"showModal\" (closeModal)=\"modalClosed()\">\r\n    <app-choose-org-type (closeModal)=\"modalClosed($event)\"></app-choose-org-type>\r\n  </app-modal>\r\n  <div class=\"setup-header\">\r\n    <h2 class=\"header\">\r\n      Easy Fees\r\n    </h2>\r\n    <p class=\"info\">\r\n      In order to set up your business to take direct debits payments you\r\n      will need to scan &amp; upload the documentation relevant to your\r\n      organisation. <br /> Click here for information about what\r\n      documentation is required:\r\n      <mdl-button mdl-ripple (click)=\"chooseOrgType()\">\r\n        Select Your Organisation Type\r\n      </mdl-button>\r\n    </p>\r\n  </div>\r\n  <div class=\"setup-form\">\r\n    <div class=\"progress-tracker\">\r\n      <div\r\n        class=\"step-pill\"\r\n        [class.active-pill]=\"setupStep === 1\"\r\n        (click)=\"setupStep = 1\">\r\n          1. Business Name\r\n      </div>\r\n      <div\r\n        class=\"step-pill\"\r\n        [class.active-pill]=\"setupStep === 2\"\r\n        (click)=\"setupStep = 2\">\r\n          2. Contact Details\r\n      </div>\r\n      <div\r\n        class=\"step-pill\"\r\n        [class.active-pill]=\"setupStep === 3\"\r\n        (click)=\"setupStep = 3\">\r\n          3. Direct Debit Profile\r\n      </div>\r\n      <div\r\n        class=\"step-pill\"\r\n        [class.active-pill]=\"setupStep === 4\"\r\n        (click)=\"setupStep = 4\">\r\n          4. Documentation\r\n      </div>\r\n    </div>\r\n    <form [formGroup]=\"merchantSignupForm\">\r\n      <div class=\"step\" [hidden]=\"setupStep !== 1\" formGroupName=\"step1\">\r\n        <div>\r\n          <mdl-textfield\r\n            type=\"text\"\r\n            floating-label\r\n            formControlName=\"merchantName\"\r\n            [class.is-invalid]=\"merchantName.invalid && merchantName.touched\"\r\n            error-msg=\"Merchant Name is required\"\r\n            disableNativeValidityChecking\r\n            label=\"Merchant Name\">\r\n          </mdl-textfield>\r\n        </div>\r\n        <div>\r\n          <mdl-textfield\r\n            type=\"text\"\r\n            floating-label\r\n            formControlName=\"companyNumber\"\r\n            [class.is-invalid]=\"companyNumber.invalid && companyNumber.touched\"\r\n            error-msg=\"Company Registered Number is required\"\r\n            disableNativeValidityChecking\r\n            label=\"Company Registered No\">\r\n          </mdl-textfield>\r\n        </div>\r\n        <div *ngIf=\"CURRENCIES.length\">\r\n          <mdl-select\r\n            formControlName=\"currency\"\r\n            placeholder=\"Currency\">\r\n              <mdl-option\r\n                *ngFor=\"let value of CURRENCIES\"\r\n                [value]=\"value\">\r\n                  {{value}}\r\n              </mdl-option>\r\n          </mdl-select>\r\n        </div>\r\n        <div>\r\n          <mdl-checkbox mdl-ripple=\"true\" formControlName=\"differentName\">\r\n            Company Registered Full Business Name different to your Business Name\r\n          </mdl-checkbox>\r\n        </div>\r\n        <mdl-textfield\r\n          type=\"text\"\r\n          floating-label\r\n          formControlName=\"companyName\"\r\n          [class.is-invalid]=\"companyName.invalid && companyName.touched\"\r\n          [required]=\"differentName.value\"\r\n          disableNativeValidityChecking\r\n          error-msg=\"Registered Business Name is required if different\"\r\n          label=\"Company Registered Business Name\">\r\n        </mdl-textfield>\r\n        <div>\r\n          <mdl-checkbox mdl-ripple=\"true\" formControlName=\"alreadyCollecting\">\r\n            Are You Already Collecting Direct Debits?\r\n          </mdl-checkbox>\r\n        </div>\r\n        <mdl-textfield\r\n          type=\"text\"\r\n          floating-label\r\n          [class.is-invalid]=\"creditorSchemeId.invalid && creditorSchemeId.touched\"\r\n          [required]=\"alreadyCollecting.value\"\r\n          formControlName=\"creditorSchemeId\"\r\n          disableNativeValidityChecking\r\n          error-msg=\"Creditor Scheme Id is required if collecting\"\r\n          label=\"Creditor Scheme Id\">\r\n        </mdl-textfield>\r\n      </div>\r\n      <div class=\"step\" [hidden]=\"setupStep !== 2\" formGroupName=\"step2\">\r\n        <div>\r\n          <mdl-textfield\r\n            type=\"text\"\r\n            floating-label\r\n            formControlName=\"website\"\r\n            label=\"Website\">\r\n          </mdl-textfield>\r\n        </div>\r\n        <div>\r\n          <mdl-textfield\r\n            type=\"text\"\r\n            floating-label\r\n            [class.is-invalid]=\"address.invalid && address.touched\"\r\n            formControlName=\"address\"\r\n            disableNativeValidityChecking\r\n            error-msg=\"Address is required\"\r\n            label=\"Address\">\r\n          </mdl-textfield>\r\n        </div>\r\n        <div>\r\n          <mdl-textfield\r\n            type=\"text\"\r\n            floating-label\r\n            [class.is-invalid]=\"city.invalid && city.touched\"\r\n            formControlName=\"city\"\r\n            disableNativeValidityChecking\r\n            error-msg=\"City is required\"\r\n            label=\"City\">\r\n          </mdl-textfield>\r\n        </div>\r\n        <div>\r\n          <mdl-textfield\r\n            type=\"text\"\r\n            floating-label\r\n            formControlName=\"state\"\r\n            label=\"State / Province / Region\">\r\n          </mdl-textfield>\r\n        </div>\r\n        <div>\r\n          <mdl-select\r\n            formControlName=\"countryCode\"\r\n            placeholder=\"Country\">\r\n              <mdl-option value=\"IR\">Republic Of Ireland</mdl-option>\r\n          </mdl-select>\r\n        </div>\r\n        <div>\r\n          <mdl-textfield\r\n            type=\"text\"\r\n            floating-label\r\n            [class.is-invalid]=\"contactName.invalid && contactName.touched\"\r\n            formControlName=\"contactName\"\r\n            disableNativeValidityChecking\r\n            error-msg=\"Business Contact Name is required\"\r\n            label=\"Business Contact Name\">\r\n          </mdl-textfield>\r\n        </div>\r\n        <div>\r\n          <mdl-textfield\r\n            type=\"email\"\r\n            floating-label\r\n            [class.is-invalid]=\"contactEmail.invalid && contactEmail.touched\"\r\n            formControlName=\"contactEmail\"\r\n            disableNativeValidityChecking\r\n            error-msg=\"Please enter a valid e-mail\"\r\n            label=\"Business E-Mail\">\r\n          </mdl-textfield>\r\n        </div>\r\n      </div>\r\n      <div class=\"step\" [hidden]=\"setupStep !== 3\" formGroupName=\"step3\">\r\n        <div class=\"long-field\">\r\n          <mdl-textfield\r\n            type=\"number\"\r\n            floating-label\r\n            [class.is-invalid]=\"estimatedCustomers.invalid && estimatedCustomers.touched\"\r\n            formControlName=\"estimatedCustomers\"\r\n            disableNativeValidityChecking\r\n            error-msg=\"Please enter a valid number\"\r\n            label=\"Estimated number of your customers who will pay by direct debit\">\r\n          </mdl-textfield>\r\n        </div>\r\n        <div class=\"long-field\">\r\n          <mdl-textfield\r\n            type=\"number\"\r\n            floating-label\r\n            [class.is-invalid]=\"estimatedAvgValue.invalid && estimatedAvgValue.touched\"\r\n            formControlName=\"estimatedAvgValue\"\r\n            disableNativeValidityChecking\r\n            error-msg=\"Please enter a valid number\"\r\n            label=\"Estimated average value of each direct debit\">\r\n          </mdl-textfield>\r\n        </div>\r\n        <div class=\"long-field\">\r\n          <mdl-textfield\r\n            type=\"number\"\r\n            floating-label\r\n            [class.is-invalid]=\"estimatedMaxValue.invalid && estimatedMaxValue.touched\"\r\n            formControlName=\"estimatedMaxValue\"\r\n            disableNativeValidityChecking\r\n            error-msg=\"Please enter a valid number\"\r\n            label=\"Estimated maximum value of each direct debit\">\r\n          </mdl-textfield>\r\n        </div>\r\n        <div>\r\n          <p>Direct Debit Frequency</p>\r\n          <mdl-select\r\n            formControlName=\"frequency\"\r\n            placeholder=\"Direct Debit Frequency\">\r\n              <mdl-option\r\n                *ngFor=\"let value of FREQUENCIES\"\r\n                [value]=\"value\">\r\n                  {{value}}\r\n              </mdl-option>\r\n          </mdl-select>\r\n        </div>\r\n        <div class=\"long-field\">\r\n          <mdl-textfield\r\n            type=\"text\"\r\n            floating-label\r\n            [class.is-invalid]=\"iban.invalid && iban.touched\"\r\n            formControlName=\"iban\"\r\n            disableNativeValidityChecking\r\n            error-msg=\"IBAN is required\"\r\n            label=\"Nominated Bank A/C number(IBAN)\">\r\n          </mdl-textfield>\r\n        </div>\r\n        <div class=\"long-field\">\r\n          <mdl-textfield\r\n            type=\"text\"\r\n            floating-label\r\n            formControlName=\"reportPhone\"\r\n            label=\"Contact phone number\">\r\n          </mdl-textfield>\r\n        </div>\r\n        <div class=\"long-field\">\r\n          <mdl-textfield\r\n            type=\"text\"\r\n            floating-label\r\n            formControlName=\"reportContact\"\r\n            label=\"Company contact for payment reports reciept\">\r\n          </mdl-textfield>\r\n        </div>\r\n        <div class=\"long-field\">\r\n          <mdl-textfield\r\n            type=\"text\"\r\n            floating-label\r\n            formControlName=\"reportEmail\"\r\n            [class.is-invalid]=\"reportEmail.invalid && reportEmail.touched\"\r\n            disableNativeValidityChecking\r\n            error-msg=\"Please enter a valid email\"\r\n            label=\"Company email for payment reports reciept\">\r\n          </mdl-textfield>\r\n        </div>\r\n      </div>\r\n      <div class=\"step\" [hidden]=\"setupStep !== 4\" formGroupName=\"step4\">\r\n        <div>\r\n          <mdl-select\r\n            formControlName=\"businessType\"\r\n            placeholder=\"Select Your Organisation Type\">\r\n            <mdl-option *ngFor=\"let type of COMPANY_TYPES\" [value]=\"type.value\">\r\n              {{type.name}}\r\n            </mdl-option>\r\n          </mdl-select>\r\n        </div>\r\n        <div>\r\n          <mdl-textfield\r\n            type=\"text\"\r\n            floating-label\r\n            label=\"VAT Number\">\r\n          </mdl-textfield>\r\n        </div>\r\n        <div class=\"echosign\">\r\n          <iframe src=\"https://secure.eu1.echosign.com/public/esignWidget?wid=CBFCIBAA3AAABLblqZhCx80vOuPsLWeleU7_BwjtXUeETWf_miqn0zFjlQZ-WB7U9Wscmmicf6Bsc1WwMCvI*&hosted=false\" width=\"100%\" height=\"100%\" frameborder=\"0\" style=\"border: 0; overflow: hidden; min-height: 500px; min-width: 600px;\"></iframe>\r\n        </div>\r\n        <div class=\"file-dropzone\"\r\n          [class.files-over]=\"highlightDropZone\"\r\n          [attr.mdl-shadow]=\"highlightDropZone ? 2 : null\"\r\n          (dragover)=\"onDragOver($event)\"\r\n          (dragleave)=\"onDragLeave($event)\"\r\n          (drop)=\"onDragDrop($event)\">\r\n            <input type=\"file\" multiple #fileInput (change)=\"onInputChange($event)\">\r\n            <span>\r\n              Drop files here or\r\n            </span>\r\n            <button mdl-button mdl-button-type=\"raised\" (click)=\"selectFiles()\">\r\n              Select Files\r\n            </button>\r\n        </div>\r\n        <div class=\"attached-files\">\r\n          <mdl-chip\r\n            mdl-action-icon=\"cancel\"\r\n            *ngFor=\"let file of uploadFiles; let i = index\"\r\n            (action-click)=\"removeFile(i)\"\r\n            [mdl-label]=\"file.name\">\r\n          </mdl-chip>\r\n        </div>\r\n        <div *ngIf=\"businessType.valid\">\r\n          <p>Required Documents: </p>\r\n          <ul>\r\n            <li *ngFor=\"let document of getDocuments()\">\r\n                {{ document }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n    <div class=\"next-button\" [hidden]=\"setupStep === 4\">\r\n      <mdl-button mdl-button-type=\"raised\" [disabled]=\"!canSkip()\" (click)=\"setupStep = setupStep + 1\">\r\n        Next\r\n      </mdl-button>\r\n    </div>\r\n    <div class=\"next-button\" [hidden]=\"setupStep !== 4\">\r\n      <mdl-button mdl-button-type=\"raised\" [disabled]=\"!canSubmit()\" (click)=\"composeForm()\">\r\n        Submit\r\n      </mdl-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n"

/***/ },
/* 919 */
/***/ function(module, exports) {

module.exports = "<app-navbar title=\"Easy Fee's\"></app-navbar>\r\n<app-navbar-small [routes]=\"routes\"></app-navbar-small>\r\n<div class=\"layout-content\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n"

/***/ },
/* 920 */
/***/ function(module, exports) {

module.exports = "<div class=\"landing-page\">\r\n  <div class=\"vista-logo\">\r\n    <img src=\"/assets/img/logo-large.png\" alt=\"Little Vista logo\" />\r\n  </div>\r\n  <div class=\"stabilizer\">\r\n    <div class=\"lite-preview\">\r\n      <p>The <b>easy</b> way to manage <br /> your <b>creche.</b></p>\r\n      <img src=\"/assets/img/preview.png\" alt=\"LITE application preview\">\r\n    </div>\r\n    <div class=\"controls-wrapper\">\r\n      <app-login-card *ngIf=\"showLogin\"></app-login-card>\r\n      <app-register-card  *ngIf=\"!showLogin\"></app-register-card>\r\n      <div class=\"controls\" *ngIf=\"showLogin\">\r\n        <p>\r\n          Don't have account yet?\r\n        </p>\r\n        <mdl-button mdl-ripple (click)=\"toggleView()\">\r\n          Sign up for free\r\n        </mdl-button>\r\n      </div>\r\n      <div class=\"controls\">\r\n        <div class=\"controls\" *ngIf=\"!showLogin\">\r\n          <p>\r\n            Already have an account?\r\n          </p>\r\n          <mdl-button class=\"clean\" mdl-ripple  (click)=\"toggleView()\">\r\n            Login\r\n          </mdl-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"

/***/ },
/* 921 */
/***/ function(module, exports) {

module.exports = "<div class=\"login-card\">\r\n  <div class=\"card-title\">\r\n    <mdl-progress [indeterminate]=\"true\" *ngIf=\"loading\"></mdl-progress>\r\n    <img class=\"vista-logo\" src=\"/assets/img/logo-small.png\" alt=\"Little Vista logo\" />\r\n    <span>LITE</span>\r\n  </div>\r\n  <div class=\"card-body\" (keydown.enter)=\"login()\">\r\n    <mdl-textfield type=\"text\" label=\"Email or CentreID\" floating-label [(ngModel)]=\"username\"></mdl-textfield>\r\n    <mdl-textfield type=\"password\" label=\"Password\" floating-label [(ngModel)]=\"password\"></mdl-textfield>\r\n    <p class=\"error-message\">\r\n      {{errorMessage}}\r\n    </p>\r\n    <mdl-button mdl-button-type=\"raised\" mdl-ripple (click)=\"login()\">\r\n      Login\r\n    </mdl-button>\r\n  </div>\r\n</div>\r\n"

/***/ },
/* 922 */
/***/ function(module, exports) {

module.exports = "<div class=\"register-card\">\r\n  <div class=\"card-title\">\r\n    <mdl-progress [indeterminate]=\"true\" *ngIf=\"loading\"></mdl-progress>\r\n    <img class=\"vista-logo\" src=\"/assets/img/logo-small.png\" alt=\"Little Vista logo\" />\r\n    <span>LITE</span>\r\n  </div>\r\n  <div class=\"card-body\" (keydown.enter)=\"register()\">\r\n    <form [formGroup]=\"registerForm\">\r\n      <mdl-textfield\r\n          type=\"email\"\r\n          label=\"Email\"\r\n          floating-label\r\n          [class.is-invalid]=\"email.touched && email.invalid\"\r\n          error-msg=\"Please enter a valid email\"\r\n          disableNativeValidityChecking\r\n          formControlName=\"email\">\r\n      </mdl-textfield>\r\n      <mdl-textfield\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          floating-label\r\n          [class.is-invalid]=\"password.touched && password.invalid\"\r\n          disableNativeValidityChecking\r\n          error-msg=\"Password needs to be at least 6 characters\"\r\n          formControlName=\"password\">\r\n      </mdl-textfield>\r\n      <mdl-textfield\r\n          type=\"text\"\r\n          label=\"Name\"\r\n          floating-label\r\n          [class.is-invalid]=\"name.touched && name.invalid\"\r\n          disableNativeValidityChecking\r\n          error-msg=\"Name is required\"\r\n          formControlName=\"name\">\r\n      </mdl-textfield>\r\n      <mdl-textfield\r\n          type=\"text\"\r\n          label=\"Business Name\"\r\n          floating-label\r\n          [class.is-invalid]=\"businessName.touched && businessName.invalid\"\r\n          disableNativeValidityChecking\r\n          error-msg=\"Business Name is required\"\r\n          formControlName=\"businessName\">\r\n      </mdl-textfield>\r\n    </form>\r\n    <p class=\"error-message\">\r\n      {{errorMessage}}\r\n    </p>\r\n    <mdl-button mdl-button-type=\"raised\" mdl-ripple (click)=\"register()\">\r\n      Create an account\r\n    </mdl-button>\r\n  </div>\r\n</div>\r\n"

/***/ },
/* 923 */
/***/ function(module, exports) {

module.exports = "<div class=\"backdrop\" [@backdrop]=\"showOccupancyModal\">\n  <div class=\"modal\" [@modal]=\"showOccupancyModal\">\n    <div class=\"modal-header flex\">\n      <span class=\"title flex\">{{title}}</span>\n      <span class=\"btn\"><mdl-icon (click)=\"destroy()\" class=\"close-button\">close</mdl-icon></span>\n    </div>\n    <div class=\"modal-body flex\" mdl-shadow=\"3\">\n \n      <div class=\"staff-container flex\">\n        <div class=\"add-staff flex column\">\n          <div class=\"row flex\">\n              <span class=\"col flex strong-text\">Name</span>\n              <span class=\"col flex strong-text\">Qualification</span>\n              <span class=\"col flex strong-text\">Start Date</span>\n              <span class=\"col flex strong-text\">End Date</span>\n          </div>\n          <div class=\"row flex\">\n              <span class=\"col flex\">\n                <mdl-textfield [(ngModel)]=\"staff.name\"></mdl-textfield>\n              </span>\n              <span class=\"col flex\">\n                <mdl-select [(ngModel)]=\"staff.qualification\" placeholder=\"Select Qualification\">\n                  <mdl-option [value]=\"0\">Select Qualification</mdl-option>\n                  <mdl-option *ngFor=\"let qualifi of qualification\" [value]=\"qualifi.id\">\n                    {{qualifi.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n              <span class=\"col flex\">\n                <app-datepicker [(ngModel)]=\"staff.startdate\"></app-datepicker>\n              </span>\n              <span class=\"col flex\">\n                <app-datepicker [(ngModel)]=\"staff.enddate\"></app-datepicker>\n              </span>\n          </div>\n          <div class=\"row flex\">\n              <span class=\"col flex strong-text\">Assign to Rooms</span>\n          </div>\n          <div class=\"row flex green-color\">\n              <span class=\"col flex flex1 strong-text\"></span>\n              <span class=\"col flex flex2 strong-text text-indent\">Mon</span>\n              <span class=\"col flex flex2 strong-text text-indent\">Tue</span>\n              <span class=\"col flex flex2 strong-text text-indent\" >Weds</span>\n              <span class=\"col flex flex2 strong-text text-indent\">Thurs</span>\n              <span class=\"col flex flex2 strong-text text-indent\">Fri</span>\n          </div>\n          <div class=\"row flex\">\n              <span class=\"col flex flex1 strong-text align-center\">AM</span>\n              <span class=\"col flex flex2\">\n                <mdl-select [(ngModel)]=\"staff.assignedRoom.mon.am\" placeholder=\"Select Room\">\n                  <mdl-option [value]=\"0\">NOT IN</mdl-option>\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n              <span class=\"col flex flex2\">\n                <mdl-select [(ngModel)]=\"staff.assignedRoom.tue.am\" placeholder=\"Select Room\">\n                  <mdl-option [value]=\"0\">NOT IN</mdl-option>\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n              <span class=\"col flex flex2\">\n                <mdl-select [(ngModel)]=\"staff.assignedRoom.wed.am\" placeholder=\"Select Room\">\n                  <mdl-option [value]=\"0\">NOT IN</mdl-option>\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n              <span class=\"col flex flex2\">\n                <mdl-select [(ngModel)]=\"staff.assignedRoom.thu.am\" placeholder=\"Select Room\">\n                  <mdl-option [value]=\"0\">NOT IN</mdl-option>\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n              <span class=\"col flex flex2\">\n                <mdl-select [(ngModel)]=\"staff.assignedRoom.fri.am\" placeholder=\"Select Room\">\n                  <mdl-option [value]=\"0\">NOT IN</mdl-option>\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n          </div>\n          <div class=\"row flex\">\n              <span class=\"col flex flex1 strong-text align-center\">PM</span>\n              <span class=\"col flex flex2\">\n                <mdl-select [(ngModel)]=\"staff.assignedRoom.mon.pm\" placeholder=\"Select Room\">\n                  <mdl-option [value]=\"0\">NOT IN</mdl-option>\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n              <span class=\"col flex flex2\">\n                <mdl-select [(ngModel)]=\"staff.assignedRoom.tue.pm\" placeholder=\"Select Room\">\n                  <mdl-option [value]=\"0\">NOT IN</mdl-option>\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n              <span class=\"col flex flex2\">\n                <mdl-select [(ngModel)]=\"staff.assignedRoom.wed.pm\" placeholder=\"Select Room\">\n                  <mdl-option [value]=\"0\">NOT IN</mdl-option>\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n              <span class=\"col flex flex2\">\n                <mdl-select [(ngModel)]=\"staff.assignedRoom.thu.pm\" placeholder=\"Select Room\">\n                  <mdl-option [value]=\"0\">NOT IN</mdl-option>\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n              <span class=\"col flex flex2\">\n                <mdl-select [(ngModel)]=\"staff.assignedRoom.fri.pm\" placeholder=\"Select Room\">\n                  <mdl-option [value]=\"0\">NOT IN</mdl-option>\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n          </div>\n          <br><br>\n          <div class=\"btn-picker flex flex2\">\n            <span class=\"col flex flex5 error\">{{errorMessage}}</span>\n            <span class=\"col flex flex1 btn\">\n              <button mdl-button mdl-ripple class=\"green-color\" (click)=\"saveStaff()\">SAVE</button>\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"

/***/ },
/* 924 */
/***/ function(module, exports) {

module.exports = "<div class=\"backdrop\" [@backdrop]=\"showOccupancyModal\">\n  <div class=\"modal\" [@modal]=\"showOccupancyModal\">\n    <div class=\"modal-header flex\">\n      <span class=\"title flex\">{{name}}</span>\n      <span class=\"title flex\">{{title}}</span>\n      <span class=\"btn\"><mdl-icon (click)=\"destroy()\" class=\"close-button\">close</mdl-icon></span>\n    </div>\n    <div class=\"modal-body flex\">\n\n      <div class=\"move-container flex\">\n      <div class=\"move-class flex column\">\n        <div class=\"date-picker flex column\">\n          <div class=\"row flex\">\n            <div class=\"left\"></div>\n            <div class=\"right flex\">\n              <span class=\"col flex strong-text\">Move to class:</span>\n              <span class=\"col flex\"></span>\n              <span class=\"col flex strong-text\">Proposed move date:</span>\n              <span class=\"col flex\"></span>\n              <span class=\"col flex\"></span>\n            </div>\n          </div>\n          <div class=\"row flex\">\n            <div class=\"left\"></div>\n            <div class=\"right flex\">\n              <span class=\"col flex\">\n                <mdl-select [(ngModel)]=\"moveRoomId\" placeholder=\"Select Room\">\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n              <span class=\"col flex\"></span>\n              <span class=\"col flex\">\n                <app-datepicker [(ngModel)]=\"movedate\"></app-datepicker>\n              </span>\n              <span class=\"col flex\"></span>\n              <span class=\"col flex\"></span>\n            </div>\n          </div>\n        </div>\n        <div class=\"room-picker flex column\">\n          <div class=\"row flex\">\n            <div class=\"left\">&nbsp;</div>\n            <div class=\"right flex green-color\">\n              <span class=\"col flex strong-text text-indent\">Mon</span>\n              <span class=\"col flex strong-text text-indent\">Tue</span>\n              <span class=\"col flex strong-text text-indent\" >Weds</span>\n              <span class=\"col flex strong-text text-indent\">Thurs</span>\n              <span class=\"col flex strong-text text-indent\">Fri</span>\n            </div>\n          </div>\n          <div class=\"row flex\">\n            <div class=\"left strong-text\">AM</div>\n            <div class=\"right flex\">\n              <span class=\"col flex\">\n                <mdl-select [(ngModel)]=\"roomId\" placeholder=\"Select Room\">\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n              <span class=\"col flex\">\n                <mdl-select [(ngModel)]=\"roomId\" placeholder=\"Select Room\">\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n              <span class=\"col flex\">\n                <mdl-select [(ngModel)]=\"roomId\" placeholder=\"Select Room\">\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n              <span class=\"col flex\">\n                <mdl-select [(ngModel)]=\"roomId\" placeholder=\"Select Room\">\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n              <span class=\"col flex\">\n                <mdl-select [(ngModel)]=\"roomId\" placeholder=\"Select Room\">\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n            </div>\n          </div>\n          <div class=\"row flex\">\n            <div class=\"left strong-text\">PM</div>\n            <div class=\"right flex\">\n              <span class=\"col flex\">\n                <mdl-select [(ngModel)]=\"roomId\" placeholder=\"Select Room\">\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n              <span class=\"col flex\">\n                <mdl-select [(ngModel)]=\"roomId\" placeholder=\"Select Room\">\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n              <span class=\"col flex\">\n                <mdl-select [(ngModel)]=\"roomId\" placeholder=\"Select Room\">\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n              <span class=\"col flex\">\n                <mdl-select [(ngModel)]=\"roomId\" placeholder=\"Select Room\">\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n              <span class=\"col flex\">\n                <mdl-select [(ngModel)]=\"roomId\" placeholder=\"Select Room\">\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n            </div>\n          </div>\n        </div>\n        <div class=\"btn-picker flex\">\n          <button mdl-button mdl-ripple class=\"green-color\">SAVE</button>\n        </div>\n      </div>\n      </div>\n    </div>\n  </div>\n</div>"

/***/ },
/* 925 */
/***/ function(module, exports) {

module.exports = "<div class=\"backdrop\" [@backdrop]=\"showChildModal\">\n  <div class=\"modal\" [@modal]=\"showChildModal\">\n    <div class=\"modal-header flex\">\n      <span class=\"title flex\">{{title}}</span>\n      <span class=\"btn\"><mdl-icon (click)=\"destroy()\" class=\"close-button\">close</mdl-icon></span>\n    </div>\n    <div class=\"modal-body flex\" mdl-shadow=\"3\">\n      <div class=\"occupancy-container column flex\">\n        <div class=\"occupancy-child flex column\">\n          <div class=\"row flex padding-bottom20\">\n            <span class=\"col flex\">Commencing from:</span>\n            <span class=\"col flex\"></span>\n            <span class=\"col flex\">Age at this date:</span>\n            <span class=\"col flex\"></span>\n          </div>\n          <div class=\"row flex column padding-bottom20\">\n            <div class=\"row flex gray-color\">\n              <span class=\"col flex\">Mon</span>\n              <span class=\"col flex\">Tue</span>\n              <span class=\"col flex\">Wed</span>\n              <span class=\"col flex\">Thur</span>\n              <span class=\"col flex\">Fri</span>\n            </div>\n            <div class=\"row flex\">\n              <div class=\"row flex\" *ngFor=\"let num of [1,2,3,4,5]\">\n                <span class=\"col flex strong-text\">AM</span>\n                <span class=\"col flex strong-text\">PM</span>\n                <span class=\"col flex\"></span>\n              </div>\n            </div>\n            <div class=\"row flex align-items-center padding-top-bottom\">\n              <div class=\"row flex\">\n                <span class=\"col flex strong-text\"><mdl-checkbox [mdl-ripple]=\"true\" [(ngModel)]=\"child.assignedState.mon.am\"></mdl-checkbox></span>\n                <span class=\"col flex strong-text\"><mdl-checkbox [mdl-ripple]=\"true\" [(ngModel)]=\"child.assignedState.mon.pm\"></mdl-checkbox></span>\n                <span class=\"col flex\"></span>\n              </div>\n              <div class=\"row flex\">\n                <span class=\"col flex strong-text\"><mdl-checkbox [mdl-ripple]=\"true\" [(ngModel)]=\"child.assignedState.tue.am\"></mdl-checkbox></span>\n                <span class=\"col flex strong-text\"><mdl-checkbox [mdl-ripple]=\"true\" [(ngModel)]=\"child.assignedState.tue.pm\"></mdl-checkbox></span>\n                <span class=\"col flex\"></span>\n              </div>\n              <div class=\"row flex\">\n                <span class=\"col flex strong-text\"><mdl-checkbox [mdl-ripple]=\"true\" [(ngModel)]=\"child.assignedState.wed.am\"></mdl-checkbox></span>\n                <span class=\"col flex strong-text\"><mdl-checkbox [mdl-ripple]=\"true\" [(ngModel)]=\"child.assignedState.wed.pm\"></mdl-checkbox></span>\n                <span class=\"col flex\"></span>\n              </div>\n              <div class=\"row flex\">\n                <span class=\"col flex strong-text\"><mdl-checkbox [mdl-ripple]=\"true\" [(ngModel)]=\"child.assignedState.thu.am\"></mdl-checkbox></span>\n                <span class=\"col flex strong-text\"><mdl-checkbox [mdl-ripple]=\"true\" [(ngModel)]=\"child.assignedState.thu.pm\"></mdl-checkbox></span>\n                <span class=\"col flex\"></span>\n              </div>\n              <div class=\"row flex\">\n                <span class=\"col flex strong-text\"><mdl-checkbox [mdl-ripple]=\"true\" [(ngModel)]=\"child.assignedState.fri.am\"></mdl-checkbox></span>\n                <span class=\"col flex strong-text\"><mdl-checkbox [mdl-ripple]=\"true\" [(ngModel)]=\"child.assignedState.fri.pm\"></mdl-checkbox></span>\n                <span class=\"col flex\"></span>\n              </div>\n          </div>\n        </div>\n        <div class=\"row flex top-border\">\n          <span class=\"col flex align-items-center justify-content-center red-color\">{{errorMessage}}</span>\n          <span class=\"col flex align-items-end justify-content-end\">\n            <button mdl-button mdl-ripple class=\"green-color\">SAVE</button>\n          </span>\n      </div>  \n      </div>\n    </div>\n  </div>\n<div>"

/***/ },
/* 926 */
/***/ function(module, exports) {

module.exports = "<div class=\"backdrop\" [@backdrop]=\"showOccupancyModal\">\r\n  <div class=\"modal\" [@modal]=\"showOccupancyModal\">\r\n    <div class=\"modal-header flex\">\r\n      <span class=\"title flex\">{{name}}</span>\r\n      <span class=\"info flex\">{{title}}</span>\r\n      <span class=\"btn\"><mdl-icon (click)=\"destroy()\" class=\"close-button\">close</mdl-icon></span>\r\n    </div>\r\n    <div class=\"modal-body flex\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n</div>\r\n"

/***/ },
/* 927 */
/***/ function(module, exports) {

module.exports = "<div class=\"backdrop\" [@backdrop]=\"showOccupancyModal\">\n  <div class=\"modal\" [@modal]=\"showOccupancyModal\">\n    <div class=\"modal-header flex\">\n      <span class=\"title flex\">{{title}}</span>\n      <span class=\"btn\"><mdl-icon (click)=\"destroy()\" class=\"close-button\">close</mdl-icon></span>\n    </div>\n    <div class=\"modal-body flex\">\n\n      <div class=\"remove-container flex\">\n        \n        <div class=\"remove-child flex\">\n          <!--//start first panel-->\n          <div class=\"col flex flex1 column\">\n            <div class=\"row flex\">Name</div>\n            <div class=\"row flex padding-bottom20\"><mdl-textfield [(ngModel)]=\"child.name\" readonly></mdl-textfield></div>\n            <div class=\"row flex\">&nbsp;</div>\n            <div class=\"row flex strong-text\">Step.1</div>\n            <div class=\"row flex gray-color\">Add an induction date when you are ready to add this child</div>\n            <div class=\"row flex padding-bottom20\">&nbsp;</div>\n            <div class=\"row flex strong-text\">Step.2</div>\n            <div class=\"row flex gray-color\">Add an induction date when you are ready to add this child</div>\n            <div class=\"row flex\">&nbsp;</div>\n          </div>\n          <div class=\"col flex flex3 column\">\n            <div class=\"row flex\">\n              <span class=\"col flex\">Parent Email</span>\n              <span class=\"col flex\">Deposit</span>\n              <span class=\"col flex\">Paperwork Returned</span>\n            </div>\n            <div class=\"row flex padding-bottom20\">\n              <span class=\"col flex\"><mdl-textfield [(ngModel)]=\"child.parentEmail\" ></mdl-textfield></span>\n              <span class=\"col flex\"><mdl-textfield [value]=\"getDepositNameById(child.deposit)\" readonly></mdl-textfield></span>\n              <span class=\"col flex align-items-center\">\n                <mdl-checkbox  [mdl-ripple]=\"true\" [(ngModel)]=\"child.paperwork\" >\n                YES\n                </mdl-checkbox>\n                <!--<mdl-radio name=\"group1\" value=\"1\" [(ngModel)]=\"radioOption\">YES</mdl-radio>-->\n              </span>\n            </div>\n            <div class=\"row flex gray-color\">\n              <span class=\"col flex\">Mon</span>\n              <span class=\"col flex\">Tue</span>\n              <span class=\"col flex\">Wed</span>\n              <span class=\"col flex\">Thur</span>\n              <span class=\"col flex\">Fri</span>\n            </div>\n            <div class=\"row flex bottom-border\">\n              <div class=\"row flex\" *ngFor=\"let num of [1,2,3,4,5]\">\n                <span class=\"col flex strong-text\">AM</span>\n                <span class=\"col flex strong-text\">PM</span>\n                <span class=\"col flex\"></span>\n              </div>\n            </div>\n            <div class=\"row flex bottom-border align-items-center padding-top-bottom\">\n              <div class=\"row flex\">\n                <span class=\"col flex strong-text\"><mdl-checkbox [mdl-ripple]=\"true\" [(ngModel)]=\"child.assignedState.mon.am\"></mdl-checkbox></span>\n                <span class=\"col flex strong-text\"><mdl-checkbox [mdl-ripple]=\"true\" [(ngModel)]=\"child.assignedState.mon.pm\"></mdl-checkbox></span>\n                <span class=\"col flex\"></span>\n              </div>\n              <div class=\"row flex\">\n                <span class=\"col flex strong-text\"><mdl-checkbox [mdl-ripple]=\"true\" [(ngModel)]=\"child.assignedState.tue.am\"></mdl-checkbox></span>\n                <span class=\"col flex strong-text\"><mdl-checkbox [mdl-ripple]=\"true\" [(ngModel)]=\"child.assignedState.tue.pm\"></mdl-checkbox></span>\n                <span class=\"col flex\"></span>\n              </div>\n              <div class=\"row flex\">\n                <span class=\"col flex strong-text\"><mdl-checkbox [mdl-ripple]=\"true\" [(ngModel)]=\"child.assignedState.wed.am\"></mdl-checkbox></span>\n                <span class=\"col flex strong-text\"><mdl-checkbox [mdl-ripple]=\"true\" [(ngModel)]=\"child.assignedState.wed.pm\"></mdl-checkbox></span>\n                <span class=\"col flex\"></span>\n              </div>\n              <div class=\"row flex\">\n                <span class=\"col flex strong-text\"><mdl-checkbox [mdl-ripple]=\"true\" [(ngModel)]=\"child.assignedState.thu.am\"></mdl-checkbox></span>\n                <span class=\"col flex strong-text\"><mdl-checkbox [mdl-ripple]=\"true\" [(ngModel)]=\"child.assignedState.thu.pm\"></mdl-checkbox></span>\n                <span class=\"col flex\"></span>\n              </div>\n              <div class=\"row flex\">\n                <span class=\"col flex strong-text\"><mdl-checkbox [mdl-ripple]=\"true\" [(ngModel)]=\"child.assignedState.fri.am\"></mdl-checkbox></span>\n                <span class=\"col flex strong-text\"><mdl-checkbox [mdl-ripple]=\"true\" [(ngModel)]=\"child.assignedState.fri.pm\"></mdl-checkbox></span>\n                <span class=\"col flex\"></span>\n              </div>\n            </div>\n            <div class=\"row flex padding-bottom20\">&nbsp;</div>\n            <div class=\"row flex\">\n              <span class=\"col flex strong-text\">Select a Room</span>\n              <span class=\"col flex strong-text\">Start Date</span>\n              <span class=\"col flex strong-text\">End Date</span>\n            </div>\n            <div class=\"row flex\">\n              <span class=\"col flex\">\n                <mdl-select [(ngModel)]=\"child.assignedRoom\" placeholder=\"Select Room\">\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                    {{room.name}}\n                  </mdl-option>\n                </mdl-select>\n              </span>\n              <span class=\"col flex\"><app-datepicker [(ngModel)]=\"child.roomStartdate\"></app-datepicker></span>\n              <span class=\"col flex\"><app-datepicker [(ngModel)]=\"child.roomEnddate\"></app-datepicker></span>\n            </div>\n            <div class=\"row flex\">\n              <span class=\"col flex align-items-center justify-content-center red-color\">{{errorMessage}}</span>\n              <span class=\"col flex align-items-end justify-content-end\">\n                <button mdl-button mdl-ripple class=\"green-color\" (click)=\"moveToRoom()\">SAVE</button>\n              </span>\n            </div>\n          </div>\n          <!--//end first panel-->\n        </div>\n      </div>\n\n    </div>\n  </div>\n</div>"

/***/ },
/* 928 */
/***/ function(module, exports) {

module.exports = "<div class=\"room-accordain\">\n  <app-move-class class=\"flex\" \n    [showOccupancyModal]=\"showOccupancyModal\"\n    [child]=\"selectedChild\"\n    (closeModal)=\"modalClosed()\">\n  </app-move-class>\n\n  <!--//start accordian header-->\n  <div class=\"accordian-header flex column\">\n    <div class=\"row flex\">\n      <div class=\"room-title flex flex1\">\n        <span class=\"col flex align-items-center text-indent20\">{{roomInfo.mdate}}</span>\n        <span class=\"col flex align-items-center\">{{getRoomNameById(roomID)}}</span>\n      </div>\n      <div class=\"flex flex2\"></div>\n      <!--<div class=\"week-picker flex flex2\">\n        <span class=\"col flex p-btn align-items-center justify-content-center\" *ngFor=\"let wtab of weekTabs; let idx = index;\" (click)=\"selectWeekPicker(idx)\" [class.active]=\"wtab.active\">\n          <button mdl-button mdl-ripple>{{wtab.name}}</button>\n        </span>\n        <span class=\"col flex\" *ngFor=\"let num of [1,2,3,4,5];\">&nbsp;</span>\n      </div>-->\n    </div>\n    <!--<div class=\"available-info flex\">\n      <div class=\"row flex flex1\">\n        <span class=\"col flex\">&nbsp;</span>\n        <span class=\"col flex align-items-center\">Spaces Available</span>\n      </div>\n      <div class=\"flex flex2\">\n        <div class=\"row flex\" *ngFor=\"let wtab of weekTabs; let idx = index;\">\n          <span class=\"col flex align-items-center justify-content-center\">0</span>\n          <span class=\"col flex align-items-center justify-content-center\">-</span>\n        </div>\n        <div class=\"row flex\" *ngFor=\"let num of [1,2,3,4,5];\">&nbsp;</div>\n      </div>\n    </div>-->\n  </div>\n  <!--//end accordian header-->\n  <!--//start accordian body-->\n  <div class=\"accordian-body flex\">\n    <!--//start room info-->\n    <div class=\"room-info flex flex1\">\n      <div class=\"room-info-inner flex column\">\n        <div class=\"row flex bottom-border\">\n          <span class=\"col flex5 strong-text\">Maximum Room Capacity</span>\n          <span class=\"col flex1 text-right\">20</span>\n        </div>\n        <div class=\"row flex strong-text\">\n          <span class=\"col flex5\">Staff</span>\n          <span class=\"col flex1 text-center\">AM</span>\n          <span class=\"col flex1 text-center\">PM</span>\n        </div>\n        <div class=\"row flex\" *ngIf=\"staff.length<=0\">No assigned Staffs</div>\n        <div class=\"row flex\" *ngFor=\"let _staff of staff;\">\n          <span class=\"col flex5\">{{_staff.name}}</span>\n          <span class=\"col flex1 text-center\"><mdl-icon class=\"icon\" *ngIf=\"_staff.am\">lens</mdl-icon></span>\n          <span class=\"col flex1 text-center\"><mdl-icon class=\"icon\" *ngIf=\"_staff.pm\">lens</mdl-icon></span>\n        </div>\n        <!--<div class=\"row flex strong-text top-border\">\n          <span class=\"col flex5\">TOTAL Capacity <br><small>(Age group: 12 - 24 months)</small></span>\n          <span class=\"col flex1 text-center\">10</span>\n          <span class=\"col flex1 text-center\">10</span>\n        </div>\n        <div class=\"row flex\">\n          <span class=\"col\"><a href=\"dashboard/occupancy/setup\"><button mdl-button mdl-button-type=\"raised\" mdl-ripple>Add Stuff to Room</button></a></span>\n        </div>\n        <div class=\"row flex strong-text\">\n          <span class=\"col flex5\">Available Spaces</span>\n          <span class=\"col flex1 text-center\">1</span>\n          <span class=\"col flex1 text-center\">2</span>\n        </div>-->\n      </div>\n    </div>\n    <!--//end room info-->\n    <!--//start child info am-->\n    <!--<div class=\"children-info-am flex\">\n      <div class=\"children-info-am-inner flex column\">\n        <div class=\"row flex strong-text bottom-border no-padding\">\n          <span class=\"col flex5\">{{selectedWeeKFullName}} AM</span>\n          <span class=\"col flex1 text-right\">9 of 10</span>\n        </div>\n        <div class=\"panels padding-bottom30 flex\">\n          <div class=\"panel flex child-list\">\n            <div class=\"row flex\" (click)=\"selectChild(child)\" *ngFor=\"let child of childStoreAM;\">{{child.name}}</div>\n            <div class=\"row flex\"><button mdl-button mdl-button-type=\"raised\" mdl-ripple>SPACE AVAILABLE</button></div>\n          </div>\n        </div>\n        <div class=\"row flex strong-text bottom-border no-padding\">\n          <span class=\"col flex5\">Starting next month AM</span>\n          <span class=\"col flex1 text-right\">1</span>\n        </div>\n        <div class=\"row flex\">\n          <span class=\"col\">Marius Stanely</span>\n        </div>\n      </div>\n    </div>-->\n    <!--//end child info ap-->\n    <!--<div class=\"children-info-pm flex\">\n      <div class=\"children-info-pm-inner flex column\">\n        <div class=\"row flex strong-text bottom-border no-padding\">\n          <span class=\"col flex5\">{{selectedWeeKFullName}} AM</span>\n          <span class=\"col flex1 text-right\">8 of 10</span>\n        </div>\n        <div class=\"panels padding-bottom30 flex\">\n          <div class=\"panel flex child-list\">\n            <div class=\"row flex\" (click)=\"selectChild(child)\" *ngFor=\"let child of childStorePM;\">{{child.name}}</div>\n            <div class=\"row flex\"><button mdl-button mdl-button-type=\"raised\" mdl-ripple>SPACE AVAILABLE</button></div>\n          </div>\n        </div>\n        <div class=\"row flex strong-text bottom-border no-padding\">\n          <span class=\"col flex5\">Starting next month PM</span>\n          <span class=\"col flex1 text-right\">1</span>\n        </div>\n        <div class=\"row flex\">\n          <span class=\"col\">Marius Stanely</span>\n        </div>\n      </div>\n    </div>\n  </div>-->\n  <!--//end accordian body-->\n  <div class=\"child-info flex flex2\">\n    <div class=\"child-info-inner flex column\">\n      <div class=\"row flex bottom-border strong-text\">occupied Spaces</div>\n      <div class=\"row flex no-padding\">\n        <span class=\"col flex2\">Monday</span>\n        <span class=\"col flex1\"></span>\n        <span class=\"col flex2\">Tuesday</span>\n        <span class=\"col flex1\"></span>\n        <span class=\"col flex2\">Wednesday</span>\n        <span class=\"col flex1\"></span>\n        <span class=\"col flex2\">Thursday</span>\n        <span class=\"col flex1\"></span>\n        <span class=\"col flex2\">Friday</span>\n        <span class=\"col flex1\"></span>\n      </div>\n      <div class=\"row flex no-padding bottom-border\">\n        <div class=\"flex\" *ngFor=\"let num of [1,2,3,4,5];\">\n          <span class=\"col flex2\">AM</span>\n          <span class=\"col flex2\">PM</span>\n          <span class=\"col flex1\"></span>\n        </div>\n      </div>\n      <div class=\"row flex padding-bottom30\">\n        <div class=\"flex\" *ngFor=\"let num of [1,2,3,4,5];\">\n          <span class=\"col flex2\">6</span>\n          <span class=\"col flex2\">6</span>\n          <span class=\"col flex1\"></span>\n        </div>\n      </div>\n\n      <div class=\"row flex bottom-border strong-text\">Available Spaces</div>\n      <div class=\"row flex no-padding\">\n        <span class=\"col flex2\">Monday</span>\n        <span class=\"col flex1\"></span>\n        <span class=\"col flex2\">Tuesday</span>\n        <span class=\"col flex1\"></span>\n        <span class=\"col flex2\">Wednesday</span>\n        <span class=\"col flex1\"></span>\n        <span class=\"col flex2\">Thursday</span>\n        <span class=\"col flex1\"></span>\n        <span class=\"col flex2\">Friday</span>\n        <span class=\"col flex1\"></span>\n      </div>\n      <div class=\"row flex no-padding bottom-border\">\n        <div class=\"flex\" *ngFor=\"let num of [1,2,3,4,5];\">\n          <span class=\"col flex2\">AM</span>\n          <span class=\"col flex2\">PM</span>\n          <span class=\"col flex1\"></span>\n        </div>\n      </div>\n      <div class=\"row flex padding-bottom30\">\n        <div class=\"flex\" *ngFor=\"let num of [1,2,3,4,5];\">\n          <span class=\"col flex2\">14</span>\n          <span class=\"col flex2\">14</span>\n          <span class=\"col flex1\"></span>\n        </div>\n      </div>\n\n      <div class=\"row flex\">\n        <div class=\"row flex flex4 column\">\n          <div class=\"row flex strong-text bottom-border no-padding\">\n            <span class=\"col flex5\">Starting next month AM</span>\n            <span class=\"col flex1 text-right\">1</span>\n          </div>\n          <div class=\"row flex\">\n            <span class=\"col\">Marius Stanely</span>\n          </div>\n        </div>\n        <div class=\"row flex flex1\"></div>\n        <div class=\"row flex flex4 column\">\n          <div class=\"row flex strong-text bottom-border no-padding\">\n            <span class=\"col flex5\">Starting next month PM</span>\n            <span class=\"col flex1 text-right\">1</span>\n          </div>\n          <div class=\"row flex\">\n            <span class=\"col\">Marius Stanely</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"

/***/ },
/* 929 */
/***/ function(module, exports) {

module.exports = "<div class=\"scroll-holder\" (window:resize)=\"onResize($event)\">\n  <div [class.show]=\"showLeftArrow\" class=\"arrow arrow-back\" (click)=\"scroll()\" mdl-ripple>\n    <mdl-icon>arrow_back</mdl-icon>\n  </div>\n  <div class=\"navbar-scroll\" #nav>\n    <span class=\"btn-tab\" *ngFor=\"let data of datas; let idx=index;\" (click)=\"selectData(data.id)\" [class.active]=\"data.selected\">\n      <button mdl-button mdl-ripple>{{data.name}}</button>\n    </span>\n  </div>\n  <div [class.show]=\"showRightArrow\" class=\"arrow arrow-forward\" #arrow (click)=\"scroll('right')\" mdl-ripple>\n    <mdl-icon>arrow_forward</mdl-icon>\n  </div>\n</div>"

/***/ },
/* 930 */
/***/ function(module, exports) {

module.exports = "<div class=\"transition-lists\" mdl-shadow=\"2\">\n    <div class=\"panel-header flex justify-content-end\">\n      <app-scroll-navbar [datas]=\"datelist\" [hidden]=\"!datelist\" (sendData)=\"selectDateTab($event)\" class=\"flex\"></app-scroll-navbar>\n      <!--<span class=\"btn-tab\" *ngFor=\"let list of datelist; let idx=index;\" (click)=\"selectDateTab(idx)\" [class.active]=\"list.active\">\n        <button mdl-button mdl-ripple>{{list.name}}</button>\n      </span>-->\n    </div>\n    <!--//start transition-lists-->\n    <div class=\"panel-body\">\n      <div class=\"panel-body-inner flex column\">\n          <div class=\"row flex \">\n            <div class=\"col flex strong-text\">{{selectedDate}}</div>\n            <div class=\"col flex filter\">Filter By</div>\n          </div>\n          <div class=\"row flex header bottom-border padding-top-bottom-10\">\n            <div class=\"col flex\">Child Name</div>\n            <div class=\"col flex\">Current Room</div>\n            <div class=\"col flex\">Moving To...</div>\n            <div class=\"col flex\">Transition Date</div>\n            <div class=\"col flex\">Induction Complete</div>\n            <div class=\"col flex\">Child DOB</div>\n          </div>\n          <div class=\"row flex bottom-border padding-top-bottom-10\" *ngFor=\"let list of [1,2,3,4,5,6,7,8]\" (click)=\"showOccupancyModal = true\">\n            <div class=\"col flex\">Maria Demery</div>\n            <div class=\"col flex\">Baby Room 1</div>\n            <div class=\"col flex\">Baby Room 1</div>\n            <div class=\"col flex\">01/10/2016</div>\n            <div class=\"col flex\">-</div>\n            <div class=\"col flex\"></div>\n          </div>\n      </div>\n    </div>\n    <!--//end transition-lists-->\n</div>"

/***/ },
/* 931 */
/***/ function(module, exports) {

module.exports = "<!--<app-navbar title=\"Occupancy Planning\"></app-navbar>-->\n<app-navbar-small [routes]=\"routes\" title=\"Occupancy Planning\"></app-navbar-small>\n<div class=\"layout-content\">\n  <router-outlet></router-outlet>\n</div>"

/***/ },
/* 932 */
/***/ function(module, exports) {

module.exports = "<div class=\"plan-dashboard\" mdl-shadow=\"3\">\n  <!--//start date-picker-->\n  <div class=\"date-picker flex\">\n    <div class=\"left\">\n    </div>\n    <div class=\"right flex\">\n      <div class=\"side-btns flex flex1 justify-content-start\">\n        <button mdl-button mdl-ripple>\n          <mdl-icon>keyboard_arrow_left</mdl-icon>back\n        </button>\n      </div>\n      <div class=\"picker-btns flex flex3 align-items-center\" >\n        <!--<span class=\"p-btn\" *ngFor=\"let tab of dateTabs; let idx = index;\" (click)=\"selDatePicker(idx)\" [class.active]==\"tab.active\">\n          <button mdl-button mdl-ripple>{{tab.name}}</button>\n        </span>-->\n        Spaces Available\n      </div>\n      <div class=\"side-btns flex flex1 justify-content-end\">\n        <button mdl-button mdl-ripple>\n          next<mdl-icon>keyboard_arrow_right</mdl-icon>\n        </button>\n      </div>\n    </div>\n  </div>\n  <!--//end date-picker-->\n  <!--//start picked-data-->\n  <div class=\"picked-data flex column\">\n    <div class=\"date-header flex\">\n      <div class=\"left\"></div>\n      <div class=\"right flex\">\n        <div class=\"row\" *ngFor=\"let date of dates\">\n          <div class=\"col\">\n            {{date}}\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--//start list contents-->\n    <div class=\"list-content flex column\">\n      <div class=\"ap-header flex\">\n        <div class=\"left\"></div>\n        <div class=\"right flex\">\n          <div class=\"row\" *ngFor=\"let ap of items\">\n            <div class=\"col\">AM</div>\n            <div class=\"col\">PM</div>\n          </div>\n        </div>\n      </div>\n      <!--//start contents-->\n      <div class=\"contents flex\" *ngFor=\"let roomList of dashboardData; let idx = index;\">\n        <div class=\"left\">\n          <div class=\"row flex\">\n            <div class=\"flex column\">\n              <div class=\"info\">{{getRoomNameById(roomList.roomId)}}</div>\n              <div class=\"cation\">Capacity: {{roomList.capacity}}</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"right flex\">\n          <div class=\"row\" *ngFor=\"let data of roomList.roomInfo; let jdx = index;\" (click)=\"selectCell(idx, jdx)\" [class.active]=\"data.active\">\n            <div class=\"col\" [class.color]=\"data.available.am<0\">\n              {{data.available.am}}\n            </div>\n            <div class=\"col\" [class.color]=\"data.available.pm<0\">\n              {{data.available.pm}}\n            </div>\n          </div>\n         </div>\n         <div class=\"accordian flex\">\n           <app-room-info-accordian [hidden]=\"!roomList.accordionState\" [roomID]=\"selectedRoomID\" [roomInfo]=\"selectedRoomInfo\" class=\"flex\"></app-room-info-accordian>\n         </div>\n      </div>\n      <!--//end contents-->\n    </div>\n    <!--//end list contents-->\n  </div>\n  <!--//end picked data   -->\n</div>"

/***/ },
/* 933 */
/***/ function(module, exports) {

module.exports = "<div class=\"room-lists\" mdl-shadow=\"2\">\n    <!--//remove child in waiting room and assign to any room.-->\n    <app-remove-waiting-child class=\"flex\" \n      [showOccupancyModal]=\"showOccupancyModal\"\n      [child]=\"selectedChild\"\n      [rooms]=\"rooms\"\n      (moveFromWaitRoomToRoom)=\"moveFromWaitRoomToRoom($event)\"\n      (closeModal)=\"modalClosed()\">\n    </app-remove-waiting-child>\n\n    <!--//Occupancy Child.-->\n    <app-occupancy-chlid class=\"flex\" \n      [showChildModal]=\"showChildModal\"\n      [child]=\"selectedChild\"\n      (closeModal)=\"modalClosed()\">\n    </app-occupancy-chlid>\n    \n    <div class=\"panel-header flex\">\n      <span class=\"btn-tab\" (click)=\"selectRoom('0')\" [class.active]=\"selectedRoomID==='0'\">\n        <button mdl-button mdl-ripple>Waiting List</button>\n      </span>\n      <app-scroll-navbar [datas]=\"rooms\" [hidden]=\"!rooms\" (sendData)=\"selectRoom($event)\" class=\"flex\"></app-scroll-navbar>\n    </div>\n    <!--//start waiting room-->\n    <div class=\"panel-body\" *ngIf=\"selectedRoomID==='0'\">\n      <div class=\"panel-body-inner flex column\">\n          <div class=\"row flex filter\">Filter By</div>\n          <div class=\"row flex header bottom-border padding-top-bottom-10\">\n            <div class=\"col flex\">Parent Name</div>\n            <div class=\"col flex\">Parent Email</div>\n            <div class=\"col flex\">Deposit</div>\n            <div class=\"col flex\">Child Name</div>\n            <div class=\"col flex\">Assign to Room</div>\n            <div class=\"col flex\">Start Date</div>\n            <div class=\"col flex\">Child DOB</div>\n          </div>\n          <div class=\"row flex padding-top-bottom-10\" *ngIf=\"waitingChild.length<=0\">No Waiting list.</div>\n          <div class=\"row flex bottom-border padding-top-bottom-10\" *ngFor=\"let child of waitingChild\" (click)=\"selectWaitChild(child)\">\n            <div class=\"col flex\">{{child.parentName}}</div>\n            <div class=\"col flex\">{{child.parentEmail}}</div>\n            <div class=\"col flex\">{{getDepositNameById(child.deposit)}}</div>\n            <div class=\"col flex\">{{child.name}}</div>\n            <div class=\"col flex\">{{getRoomNameById(child.movetoRoom)}}</div>\n            <div class=\"col flex\">{{child.officialStartdate}}</div>\n            <div class=\"col flex\">{{child.birthdate}}</div>\n          </div>\n      </div>\n    </div>\n    <!--//end waiting room-->\n    <!--//start rooms list-->\n    <div class=\"panel-body\" *ngIf=\"selectedRoomID>0\">\n      <div class=\"panel-body-inner flex column\">\n        <div class=\"row flex picker-row\">\n            <div class=\"month-picker\">\n              <mdl-icon (click)=\"prevMonth()\">keyboard_arrow_left</mdl-icon>\n              <span class=\"title\">\n                <b>{{currentDate.toDate() | date:'MMMM'}}</b> {{currentDate.toDate() | date:'yyyy'}}\n              </span>\n              <mdl-icon (click)=\"nextMonth()\">keyboard_arrow_right</mdl-icon>\n            </div>\n            <div class=\"week-picker\">\n              <mdl-icon (click)=\"prevWeek()\">keyboard_arrow_left</mdl-icon>\n              <span class=\"title\"> WEEK {{ currentDate.week() }} </span>\n              <mdl-icon (click)=\"nextWeek()\">keyboard_arrow_right</mdl-icon>\n            </div>\n        </div>\n        <div class=\"row flex bottom-border padding-top-bottom-10\">\n          <div class=\"row flex flex3 column\">\n            <div class=\"row flex\">&nbsp;</div>\n            <div class=\"row flex header\">\n              <span class=\"col flex\">Child Name</span>\n              <span class=\"col flex\">Child Age</span>\n              <span class=\"col flex\">Official Start Date</span>\n              <span class=\"col flex\">Room Start Date</span>\n            </div>\n          </div>\n          <div class=\"row flex flex2 column\">\n            <div class=\"row flex header\">\n              <span class=\"col flex\">Mon/ {{week[0].date}}</span>\n              <span class=\"col flex\">Tue/ {{week[1].date}}</span>\n              <span class=\"col flex\">Wed/ {{week[2].date}}</span>\n              <span class=\"col flex\">Thur/ {{week[3].date}}</span>\n              <span class=\"col flex\">Fri/ {{week[4].date}}</span>\n            </div>\n            <div class=\"row flex\">\n              <div class=\"row flex\" *ngFor=\"let num of [1,2,3,4,5]\">\n                <span class=\"col flex strong-text\">AM</span>\n                <span class=\"col flex strong-text\">PM</span>\n                <span class=\"col flex strong-text\">&nbsp;</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row flex padding-top-bottom-10\" *ngIf=\"childs.length<=0\">No Children list.</div>\n        <div class=\"row flex bottom-border padding-top-bottom-10\" *ngFor=\"let child of childs;\" (click)=\"selectRoomChild(child)\">\n          <div class=\"row flex flex3\">\n              <span class=\"col flex\">{{child.name}}</span>\n              <span class=\"col flex\">{{child.age}}</span>\n              <span class=\"col flex\">{{child.officialStartdate}}</span>\n              <span class=\"col flex\">{{child.roomStartdate}}</span>\n          </div>\n          <div class=\"row flex flex2\">\n              <div class=\"row flex\">\n                <span class=\"col flex strong-text align-items-center\"><mdl-icon class=\"icon\" *ngIf=\"child.assignedState.mon.am!=0\">lens</mdl-icon></span>\n                <span class=\"col flex strong-text align-items-center\"><mdl-icon class=\"icon\" *ngIf=\"child.assignedState.mon.pm!=0\">lens</mdl-icon></span>\n                <span class=\"col flex strong-text\">&nbsp;</span>\n              </div>\n              <div class=\"row flex\">\n                <span class=\"col flex strong-text align-items-center\"><mdl-icon class=\"icon\" *ngIf=\"child.assignedState.tue.am!=0\">lens</mdl-icon></span>\n                <span class=\"col flex strong-text align-items-center\"><mdl-icon class=\"icon\" *ngIf=\"child.assignedState.tue.pm!=0\">lens</mdl-icon></span>\n                <span class=\"col flex strong-text\">&nbsp;</span>\n              </div>\n              <div class=\"row flex\">\n                <span class=\"col flex strong-text align-items-center\"><mdl-icon class=\"icon\" *ngIf=\"child.assignedState.wed.am!=0\">lens</mdl-icon></span>\n                <span class=\"col flex strong-text align-items-center\"><mdl-icon class=\"icon\" *ngIf=\"child.assignedState.wed.pm!=0\">lens</mdl-icon></span>\n                <span class=\"col flex strong-text\">&nbsp;</span>\n              </div>\n              <div class=\"row flex\">\n                <span class=\"col flex strong-text align-items-center\"><mdl-icon class=\"icon\" *ngIf=\"child.assignedState.thu.am!=0\">lens</mdl-icon></span>\n                <span class=\"col flex strong-text align-items-center\"><mdl-icon class=\"icon\" *ngIf=\"child.assignedState.thu.pm!=0\">lens</mdl-icon></span>\n                <span class=\"col flex strong-text\">&nbsp;</span>\n              </div>\n              <div class=\"row flex\">\n                <span class=\"col flex strong-text align-items-center\"><mdl-icon class=\"icon\" *ngIf=\"child.assignedState.fri.am!=0\">lens</mdl-icon></span>\n                <span class=\"col flex strong-text align-items-center\"><mdl-icon class=\"icon\" *ngIf=\"child.assignedState.fri.pm!=0\">lens</mdl-icon></span>\n                <span class=\"col flex strong-text\">&nbsp;</span>\n              </div>\n          </div>\n        </div>\n        <div class=\"row flex footer\" *ngIf=\"childs.length>0\">\n          <div class=\"row flex flex3\">\n            <span class=\"col flex\">TOTAL</span>\n          </div>\n          <div class=\"row flex flex2\">\n              <div class=\"row flex\">\n                <span class=\"col flex strong-text align-items-center\">{{getRoomCapacityByRoomId(\"mon\",\"am\")}}</span>\n                <span class=\"col flex strong-text align-items-center\">{{getRoomCapacityByRoomId(\"mon\",\"pm\")}}</span>\n                <span class=\"col flex strong-text\">&nbsp;</span>\n              </div>\n              <div class=\"row flex\">\n                <span class=\"col flex strong-text align-items-center\">{{getRoomCapacityByRoomId(\"tue\",\"am\")}}</span>\n                <span class=\"col flex strong-text align-items-center\">{{getRoomCapacityByRoomId(\"tue\",\"pm\")}}</span>\n                <span class=\"col flex strong-text\">&nbsp;</span>\n              </div>\n              <div class=\"row flex\">\n                <span class=\"col flex strong-text align-items-center\">{{getRoomCapacityByRoomId(\"wed\",\"am\")}}</span>\n                <span class=\"col flex strong-text align-items-center\">{{getRoomCapacityByRoomId(\"wed\",\"pm\")}}</span>\n                <span class=\"col flex strong-text\">&nbsp;</span>\n              </div>\n              <div class=\"row flex\">\n                <span class=\"col flex strong-text align-items-center\">{{getRoomCapacityByRoomId(\"thu\",\"am\")}}</span>\n                <span class=\"col flex strong-text align-items-center\">{{getRoomCapacityByRoomId(\"thu\",\"pm\")}}</span>\n                <span class=\"col flex strong-text\">&nbsp;</span>\n              </div>\n              <div class=\"row flex\">\n                <span class=\"col flex strong-text align-items-center\">{{getRoomCapacityByRoomId(\"fri\",\"am\")}}</span>\n                <span class=\"col flex strong-text align-items-center\">{{getRoomCapacityByRoomId(\"fri\",\"pm\")}}</span>\n                <span class=\"col flex strong-text\">&nbsp;</span>\n              </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--//end rooms list-->\n</div>"

/***/ },
/* 934 */
/***/ function(module, exports) {

module.exports = "<div class=\"plan-setup\">\n  <!--//Popup for add staff or edit staff-->\n  <app-add-staff \n      [showOccupancyModal]=\"showOccupancyModal\"\n      [title]=\"title\"\n      [rooms]=\"rooms\"\n      [staff]=\"selectedStaff\"\n      [qualification]=\"qualification\"\n      [isEdit]=\"isEdit\"\n      (closeModal)=\"modalClosed()\">\n  </app-add-staff>\n\n  <!--//start room panel-->\n  <div class=\"panel flex column\" mdl-shadow=\"2\">\n    <div class=\"panel-header flex\" [hidden]=\"!rooms\">\n      <app-scroll-navbar [datas]=\"rooms\" (sendData)=\"selectRoom($event)\" class=\"flex\"></app-scroll-navbar>\n    </div>\n    <div class=\"panel-body\">\n      <div class=\"panel-body-inner flex\">\n        <div *ngIf=\"selectedRoom.assignedStaff.length<=0\">Please add staff to this room by assigning a staff memeber in the table below.</div>\n        <div class=\"list flex column\" *ngIf=\"selectedRoom.assignedStaff.length>0\">\n            <div class=\"row flex bottom-border\">\n              <div class=\"row flex flex3\">\n                <div class=\"col flex flex1\"></div>\n                <div class=\"col flex flex3 column\">\n                  <div class=\"row flex\">\n                    <span class=\"col flex\">Mon</span>\n                    <span class=\"col flex\">Tue</span>\n                    <span class=\"col flex\">Wed</span>\n                    <span class=\"col flex\">Thu</span>\n                    <span class=\"col flex\">Fri</span>\n                  </div>\n                  <div class=\"row flex\">\n                    <div class=\"row flex\" *ngFor=\"let num of [1,2,3,4,5]\">\n                      <span class=\"col flex strong-text align-items\">AM</span>\n                      <span class=\"col flex strong-text align-items\">PM</span>\n                      <span class=\"col flex\"></span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col flex flex1\"></div>\n              </div>\n              <div class=\"row flex flex2\">\n                <div class=\"trans-title col flex flex3 strong-text\">Transition Setup</div>\n              </div>\n            </div>\n            <div class=\"row flex\">\n              <div class=\"row flex flex3 column\" >\n                <div class=\"row flex padding-top-bottom-20\" *ngFor=\"let staff of selectedRoom.assignedStaff;\">\n                  <div class=\"col flex flex1 align-items text-indent10\">{{staff.name}}</div>\n                  <div class=\"col flex flex3\">\n                    <div class=\"row flex\">\n                      <span class=\"col flex align-items\"><mdl-icon class=\"icon\" *ngIf=\"staff.assignedRoom.mon.am===selectedRoomID\">lens</mdl-icon></span>\n                      <span class=\"col flex align-items\"><mdl-icon class=\"icon\" *ngIf=\"staff.assignedRoom.mon.pm===selectedRoomID\">lens</mdl-icon></span>\n                      <span class=\"col flex\"></span>\n                    </div>\n                    <div class=\"row flex\">\n                      <span class=\"col flex align-items\"><mdl-icon class=\"icon\" *ngIf=\"staff.assignedRoom.tue.am===selectedRoomID\">lens</mdl-icon></span>\n                      <span class=\"col flex align-items\"><mdl-icon class=\"icon\" *ngIf=\"staff.assignedRoom.tue.pm===selectedRoomID\">lens</mdl-icon></span>\n                      <span class=\"col flex\"></span>\n                    </div>\n                    <div class=\"row flex\">\n                      <span class=\"col flex align-items\"><mdl-icon class=\"icon\" *ngIf=\"staff.assignedRoom.wed.am===selectedRoomID\">lens</mdl-icon></span>\n                      <span class=\"col flex align-items\"><mdl-icon class=\"icon\" *ngIf=\"staff.assignedRoom.wed.pm===selectedRoomID\">lens</mdl-icon></span>\n                      <span class=\"col flex\"></span>\n                    </div>\n                    <div class=\"row flex\">\n                      <span class=\"col flex align-items\"><mdl-icon class=\"icon\" *ngIf=\"staff.assignedRoom.thu.am===selectedRoomID\">lens</mdl-icon></span>\n                      <span class=\"col flex align-items\"><mdl-icon class=\"icon\" *ngIf=\"staff.assignedRoom.thu.pm===selectedRoomID\">lens</mdl-icon></span>\n                      <span class=\"col flex\"></span>\n                    </div>\n                    <div class=\"row flex\">\n                      <span class=\"col flex align-items\"><mdl-icon class=\"icon\" *ngIf=\"staff.assignedRoom.fri.am===selectedRoomID\">lens</mdl-icon></span>\n                      <span class=\"col flex align-items\"><mdl-icon class=\"icon\" *ngIf=\"staff.assignedRoom.fri.pm===selectedRoomID\">lens</mdl-icon></span>\n                      <span class=\"col flex\"></span>\n                    </div>\n                  </div>\n                  <div class=\"col flex flex1\"></div>\n                </div>\n                <div class=\"row flex padding-top-bottom-20\">\n                  <div class=\"col flex flex1 align-items text-indent10\">Capacity</div>\n                  <div class=\"col flex flex3\">\n                    <div class=\"row flex\">\n                      <span class=\"col flex align-items\">{{selectedRoom.capacity.mon.am}}</span>\n                      <span class=\"col flex align-items\">{{selectedRoom.capacity.mon.pm}}</span>\n                      <span class=\"col flex\"></span>\n                    </div>\n                    <div class=\"row flex\">\n                      <span class=\"col flex align-items\">{{selectedRoom.capacity.tue.am}}</span>\n                      <span class=\"col flex align-items\">{{selectedRoom.capacity.tue.pm}}</span>\n                      <span class=\"col flex\"></span>\n                    </div>\n                    <div class=\"row flex\">\n                      <span class=\"col flex align-items\">{{selectedRoom.capacity.wed.am}}</span>\n                      <span class=\"col flex align-items\">{{selectedRoom.capacity.wed.pm}}</span>\n                      <span class=\"col flex\"></span>\n                    </div>\n                    <div class=\"row flex\">\n                      <span class=\"col flex align-items\">{{selectedRoom.capacity.thu.am}}</span>\n                      <span class=\"col flex align-items\">{{selectedRoom.capacity.thu.pm}}</span>\n                      <span class=\"col flex\"></span>\n                    </div>\n                    <div class=\"row flex\">\n                      <span class=\"col flex align-items\">{{selectedRoom.capacity.fri.am}}</span>\n                      <span class=\"col flex align-items\">{{selectedRoom.capacity.fri.pm}}</span>\n                      <span class=\"col flex\"></span>\n                    </div>\n                  </div>\n                  <div class=\"col flex flex1\"></div>\n                </div>\n              </div>\n              <div class=\"row flex flex2 column\">\n                <div class=\"row flex header\">This is a class setting. Transition Rooms & Ages can also be set for individual children in the Class Room List.</div>\n                <div class=\"row flex\">\n                  <div class=\"col flex flex1 align-items-center\">Transition Room</div>\n                  <div class=\"col flex flex2\">\n                    <mdl-select [(ngModel)]=\"selectedRoom.transitionRoom\" placeholder=\"Select Room\">\n                      <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\n                        {{room.name}}\n                      </mdl-option>\n                    </mdl-select>\n                  </div>\n                </div>\n                <div class=\"row flex\">\n                  <div class=\"col flex flex1 align-items-center\">Transition Age</div>\n                  <div class=\"col flex flex2\">\n                    <mdl-select [(ngModel)]=\"selectedRoom.transitionAge\" placeholder=\"Select Age\">\n                      <mdl-option *ngFor=\"let group of ageGroup\" [value]=\"group.id\">\n                        {{group.name}}\n                      </mdl-option>\n                    </mdl-select>\n                  </div>\n                </div>\n              </div>\n            </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!--//end room panel-->\n  <br><br>\n  <!--//start staff panel-->\n  <div class=\"panel flex column\" mdl-shadow=\"2\">\n    <div class=\"panel-header flex\">\n      <span class=\"text-indent10\">Manage Staff & Room Capacity</span>\n    </div>\n    <div class=\"panel-body\">\n      <div class=\"panel-body-inner flex\">\n        <div *ngIf=\"staffs.length===0\">No staff added yet. Please click on the + icon to begin adding staff.</div>\n        <div class=\"list flex column\" *ngIf=\"staffs.length>0\">\n          <div class=\"row flex header bottom-border padding-top-bottom-10\">\n            <div class=\"col flex\">Name</div>\n            <div class=\"col flex\">Room Assigned to AM</div>\n            <div class=\"col flex\">Room Assigned to PM</div>\n            <div class=\"col flex\">Start Date</div>\n            <div class=\"col flex\">Finish Date</div>\n            <div class=\"col flex\">Qualification</div>\n          </div>\n          <div class=\"row flex bottom-border padding-top-bottom-10\" *ngFor=\"let staff of staffs\" (click)=\"controlStaffs(true, staff)\">\n            <div class=\"col flex\">{{staff.name}}</div>\n            <div class=\"col flex\">{{getRoomNameById(staff.assignedRoom.mon.am)}}</div>\n            <div class=\"col flex\">{{getRoomNameById(staff.assignedRoom.mon.pm)}}</div>\n            <div class=\"col flex\">{{staff.startdate}}</div>\n            <div class=\"col flex\">{{staff.enddate}}</div>\n            <div class=\"col flex\">{{getQualificationNameById(staff.qualification)}}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!--//end staff panel-->\n  <mdl-button mdl-button-type=\"fab\" class=\"add-staff\" mdl-colored=\"accent\" mdl-ripple mdl-shadow=\"8\" (click)=\"controlStaffs(false)\">\n    <mdl-icon>add</mdl-icon>\n  </mdl-button>\n</div>"

/***/ },
/* 935 */
/***/ function(module, exports) {

module.exports = "<div class=\"attendance-status\" [hidden]=\"record.ABSENT\">\r\n  <p>\r\n    <span>IN:</span>\r\n    {{record.IN || '-'}}\r\n  </p>\r\n  <p>\r\n    <span>OUT:</span>\r\n    {{record.OUT || '-'}}\r\n  </p>\r\n</div>\r\n<div class=\"attendance-status\" [hidden]=\"!record.ABSENT\">\r\n  <p>\r\n    <span>ABSENT:</span>\r\n    {{record.ABSENT || '-'}}\r\n  </p>\r\n</div>\r\n"

/***/ },
/* 936 */
/***/ function(module, exports) {

module.exports = "<app-navbar title=\"Reports\"></app-navbar>\r\n<app-navbar-small [routes]=\"routes\"></app-navbar-small>\r\n<div class=\"layout-content\">\r\n  <div class=\"reports-draft\">\r\n    <div class=\"picker-row\">\r\n      <div class=\"month-picker\">\r\n        <mdl-icon (click)=\"prevMonth()\">keyboard_arrow_left</mdl-icon>\r\n        <mdl-icon (click)=\"nextMonth()\">keyboard_arrow_right</mdl-icon>\r\n        <span class=\"title\">\r\n          <b>{{currentDate.toDate() | date:'MMMM'}}</b> {{currentDate.toDate() | date:'yyyy'}}\r\n        </span>\r\n      </div>\r\n      <div class=\"week-picker\">\r\n        <mdl-icon (click)=\"prevWeek()\">keyboard_arrow_left</mdl-icon>\r\n        <span class=\"title\"> Week {{ currentDate.week() }} </span>\r\n        <mdl-icon (click)=\"nextWeek()\">keyboard_arrow_right</mdl-icon>\r\n      </div>\r\n      <i class=\"material-icons\" (click)=\"printReport()\">print</i>\r\n    </div>\r\n    <div id=\"reportDiv\">\r\n      <div class=\"row tooltips\">\r\n        <div class=\"col\">Child Name</div>\r\n        <div class=\"col child-status\">ECCE</div>\r\n        <div class=\"col\" *ngFor=\"let entry of week\" [class.inactive]=\"entry.inactive\">\r\n            <p>{{ entry.day | uppercase }}</p>\r\n            <span>{{ entry.date }}</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngFor=\"let report of reports\">\r\n        <div class=\"col child-name\">{{report.name}}</div>\r\n        <div class=\"col child-status\">\r\n          <span>{{report.status ? 'YES' : 'NO'}}</span>\r\n        </div>\r\n        <div class=\"col\">\r\n          <app-attendance-status [record]=\"report.records.Monday\"></app-attendance-status>\r\n        </div>\r\n        <div class=\"col\">\r\n          <app-attendance-status [record]=\"report.records.Tuesday\"></app-attendance-status>\r\n        </div>\r\n        <div class=\"col\">\r\n          <app-attendance-status [record]=\"report.records.Wednesday\"></app-attendance-status>\r\n        </div>\r\n        <div class=\"col\">\r\n          <app-attendance-status [record]=\"report.records.Thursday\"></app-attendance-status>\r\n        </div>\r\n        <div class=\"col\">\r\n          <app-attendance-status [record]=\"report.records.Friday\"></app-attendance-status>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"

/***/ },
/* 937 */
/***/ function(module, exports) {

module.exports = "<app-modal [showModal]=\"showModal\">\r\n  <app-add-child (closeModal)=\"modalClosed($event)\" [rooms]=\"rooms\" [child]=\"selectedChild\"></app-add-child>\r\n</app-modal>\r\n<app-confirm-dialog [showDialog]=\"confirmDelete\" (closeDialog)=\"confirmDeleteChild($event)\" [message]=\"deleteMessage\"></app-confirm-dialog>\r\n<app-flex-card\r\n  [loading]=\"loading\"\r\n  [options]=\"tableOptions\"\r\n  [collection]=\"children\"\r\n  class=\"centre-children\">\r\n  <app-searchbar (searchFilter)=\"handleFilter($event)\"></app-searchbar>\r\n  <div class=\"row\" *ngFor=\"let child of children\" (click)=\"editChild(child)\">\r\n    <div class=\"col avatar-col\">\r\n      <img src={{child.picture}} alt=\"Child Avatar\" />\r\n    </div>\r\n    <div class=\"col name-col\">\r\n      {{child.name}}\r\n    </div>\r\n    <div class=\"col\">\r\n      {{child.room || '-'}}\r\n    </div>\r\n    <div class=\"col\">\r\n      <mdl-button class=\"remove-child\" mdl-button-type=\"icon\" mdl-colored=\"accent\" (click)=\"deleteChild($event, child)\">\r\n        <mdl-icon>delete</mdl-icon>\r\n      </mdl-button>\r\n    </div>\r\n  </div>\r\n  <mdl-button mdl-button-type=\"fab\" class=\"add-children\" mdl-colored=\"accent\" mdl-ripple mdl-shadow=\"8\" (click)=\"addChild()\">\r\n    <mdl-icon>add</mdl-icon>\r\n  </mdl-button>\r\n</app-flex-card>\r\n"

/***/ },
/* 938 */
/***/ function(module, exports) {

module.exports = "<div class=\"centre-details\" [mdl-shadow]=\"3\" *ngIf=\"profile\">\r\n  <div class=\"title\">\r\n    Centre Details\r\n  </div>\r\n  <div class=\"settings\">\r\n    <div class=\"col\">\r\n      <mdl-textfield type=\"text\" label=\"Centre Name\" [(ngModel)]=\"profile.additional.name\"></mdl-textfield>\r\n      <mdl-textfield type=\"text\" label=\"Address 1\" [(ngModel)]=\"profile.additional.address1\"></mdl-textfield>\r\n      <mdl-textfield type=\"text\" label=\"Address 2\" [(ngModel)]=\"profile.additional.address2\"></mdl-textfield>\r\n      <mdl-textfield type=\"text\" label=\"Address 3\" [(ngModel)]=\"profile.additional.address3\"></mdl-textfield>\r\n    </div>\r\n    <div class=\"col\">\r\n      <mdl-textfield type=\"text\" label=\"Main Contract\" [(ngModel)]=\"profile.additional.mainContact\"></mdl-textfield>\r\n      <mdl-textfield type=\"text\" label=\"Email Address\" [(ngModel)]=\"profile.additional.email\"></mdl-textfield>\r\n      <mdl-textfield type=\"text\" label=\"Work Phone\" [(ngModel)]=\"profile.additional.workPhone\"></mdl-textfield>\r\n      <mdl-textfield type=\"text\" label=\"Mobile\" [(ngModel)]=\"profile.additional.mobilePhone\"></mdl-textfield>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"edit-picture\">\r\n    <img src={{profile.picture}} alt=\"Profile Picture\" />\r\n    <mdl-button mdl-button-type=\"raised\" mdl-ripple>\r\n      EDIT PROFILE IMAGE\r\n    </mdl-button>\r\n  </div>\r\n\r\n  <div class=\"save-button\">\r\n    <mdl-spinner [active]=\"saving\"></mdl-spinner>\r\n    <mdl-button mdl-button-type=\"raised\" mdl-ripple (click)=\"saveDetails()\">\r\n      SAVE\r\n    </mdl-button>\r\n  </div>\r\n</div>\r\n"

/***/ },
/* 939 */
/***/ function(module, exports) {

module.exports = "<app-add-new-families \r\n  [showModal]=\"showModal\"\r\n  [isEdit]=\"isEdit\"\r\n  [maxID]=\"maxID\"\r\n  [rooms]=\"rooms\"\r\n  [family]=\"selectedFamily\"\r\n  [selectedTabIndex]=\"selectedTabIndex\"\r\n  (closeModal)=\"modalClosed()\">\r\n</app-add-new-families>\r\n\r\n<app-flex-card\r\n  [loading]=\"loading\"\r\n  [options]=\"tableOptions\"\r\n  [collection]=\"families\"\r\n  class=\"centre-families\">\r\n  <app-searchbar (searchFilter)=\"handleFilter($event)\"></app-searchbar>\r\n  <div class=\"row\" *ngFor=\"let family of families;\">\r\n    <div class=\"col image-col\">\r\n      <img src=\"/assets/img/default_avatar.png\" atl=\"LittleVista LITE\" />\r\n    </div>\r\n    <div class=\"col name-col\" (click)=\"controlFamilies(true, family, 0)\">\r\n      <span>{{getChildrenNames(family.childrens)}}</span>\r\n    </div>\r\n    <div class=\"col name-col\" (click)=\"controlFamilies(true, family, 1)\">\r\n      <span>{{getGuardianNames(family.guardians)}}</span>\r\n    </div>\r\n    <div class=\"col empty-col\"></div>\r\n  </div>\r\n  <mdl-button mdl-button-type=\"fab\" class=\"add-families\" mdl-colored=\"accent\" mdl-ripple mdl-shadow=\"8\" (click)=\"controlFamilies(false)\">\r\n    <mdl-icon>add</mdl-icon>\r\n  </mdl-button>\r\n</app-flex-card>\r\n"

/***/ },
/* 940 */
/***/ function(module, exports) {

module.exports = "<div class=\"backdrop\" [@backdrop]=\"showModal\">\r\n  <div class=\"modal\" [@modal]=\"showModal\" [mdl-shadow]=\"6\">\r\n    <div class=\"add-families-header flex\">\r\n      <span class=\"tab flex\" (click)=\"selectFamiliesType(0)\" [class.active]=\"selectedTabIndex === 0\">1.Add Children</span>\r\n      <span class=\"tab flex\" (click)=\"selectFamiliesType(1)\" [class.active]=\"selectedTabIndex !== 0\">2.Add Guardian</span>\r\n      <span class=\"close\"><mdl-icon (click)=\"destroy()\" class=\"close-button\">close</mdl-icon></span>\r\n    </div>\r\n    <div class=\"add-families-body flex\">\r\n      <div class=\"add-families-inner flex column\">\r\n        <!--//start add child-->\r\n        <div class=\"row flex column\" *ngIf=\"selectedTabIndex === 0\">\r\n          \r\n          <div class=\"row flex row-header border-bottom\">\r\n            <div class=\"col flex\">Name</div>\r\n            <div class=\"col flex\">Date of Birth</div>\r\n            <div class=\"col flex\">Select a Room</div>\r\n            <div class=\"col flex\">Start Date</div>\r\n          </div>\r\n\r\n          <div class=\"row flex column flexible-container border-bottom\">\r\n            <div class=\"row flex border-bottom\" *ngFor=\"let children of family.childrens; let idx = index;\">\r\n              <div class=\"col flex\">\r\n                <mdl-textfield floating-label [(ngModel)]=\"children.name\" ></mdl-textfield>\r\n              </div>\r\n              <div class=\"col flex\">\r\n                <app-datepicker [(ngModel)]=\"children.birthdate\" ></app-datepicker>\r\n              </div>\r\n              <div class=\"col flex\">\r\n                <mdl-select [(ngModel)]=\"children.roomId\" placeholder=\"Select a Room\">\r\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\r\n                    {{room.name}}\r\n                  </mdl-option>\r\n                </mdl-select>\r\n              </div>\r\n              <div class=\"col flex\">\r\n                <app-datepicker [(ngModel)]=\"children.startdate\" view-format=\"Do MMM YYYY\"></app-datepicker>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row flex add-button border-bottom\">\r\n            <div class=\"col flex\" (click)=\"addAnotherChild()\">Add another child</div>\r\n          </div>\r\n\r\n          <div class=\"row flex column sibling\" *ngIf=\"isTablet\">\r\n            <div class=\"row flex header\">\r\n              <div class=\"col\">Link a sibling</div>\r\n            </div>\r\n            <div class=\"row flex\">\r\n              <div class=\"col flex selector\">\r\n                <mdl-select [(ngModel)]=\"roomId\" placeholder=\"Select Room\">\r\n                  <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\r\n                    {{room.name}}\r\n                  </mdl-option>\r\n                </mdl-select>\r\n              </div>\r\n              <div class=\"col flex link-button\">\r\n                <mdl-button mdl-button-type=\"raised\" mdl-ripple>Link another sibling</mdl-button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!--//end add child-->\r\n        <!--//start add guardian-->\r\n        <div class=\"row flex column container\" *ngIf=\"selectedTabIndex !== 0\">\r\n\r\n          <div class=\"row flex row-header border-bottom\">\r\n            <div class=\"col flex\">Name</div>\r\n            <div class=\"col flex\">Email</div>\r\n            <div class=\"col flex\">Phone</div>\r\n            <div class=\"col flex\">Address</div>\r\n          </div>\r\n\r\n          <div class=\"row flex column flexible-container border-bottom\">\r\n            <div class=\"row flex border-bottom\" *ngFor=\"let guardian of family.guardians; let idx = index;\">\r\n              <div class=\"col flex\">\r\n                <mdl-textfield floating-label [(ngModel)]=\"guardian.name\"></mdl-textfield>\r\n              </div>\r\n              <div class=\"col flex\">\r\n                <mdl-textfield floating-label [(ngModel)]=\"guardian.email\"></mdl-textfield>\r\n              </div>\r\n              <div class=\"col flex\">\r\n                <mdl-textfield floating-label [(ngModel)]=\"guardian.phone\"></mdl-textfield>\r\n              </div>\r\n              <div class=\"col flex\">\r\n              <mdl-textfield floating-label [(ngModel)]=\"guardian.address\"></mdl-textfield>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row flex add-button border-bottom\">\r\n            <div class=\"col flex\" (click)=\"addAnotherGuard()\">Add another guardian</div>\r\n          </div>\r\n          <div class=\"row flex padding-bottom30\"></div>\r\n        </div>\r\n        <!--//end add guardian-->\r\n        <div class=\"row flex\">\r\n          <div class=\"col flex error-msg\" [hidden]=\"!errorMessage\">{{errorMessage}}</div>\r\n          <div class=\"col flex save-btn\">\r\n            <button mdl-button mdl-ripple (click)=\"saveFamilies()\">SAVE</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"

/***/ },
/* 941 */
/***/ function(module, exports) {

module.exports = "<app-modal [showModal]=\"showModal\">\r\n  <app-add-room (closeModal)=\"modalClosed()\" [room]=\"selectedRoom\"></app-add-room>\r\n</app-modal>\r\n<app-confirm-dialog [showDialog]=\"confirmDelete\" (closeDialog)=\"confirmDeleteRoom($event)\" [message]=\"deleteMessage\"></app-confirm-dialog>\r\n<app-flex-card\r\n  [loading]=\"loading\"\r\n  [options]=\"tableOptions\"\r\n  [collection]=\"rooms\"\r\n  class=\"centre-rooms\">\r\n  <app-searchbar (searchFilter)=\"handleFilter($event)\"></app-searchbar>\r\n  <div class=\"row\" *ngFor=\"let room of rooms\" (click)=\"editRoom(room)\">\r\n    <div class=\"col name-col\">\r\n      {{room.name}}\r\n    </div>\r\n    <div class=\"col\">\r\n      {{room.ageGroup || '-'}}\r\n    </div>\r\n    <div class=\"col\">\r\n      {{room.capacity || '-'}}\r\n    </div>\r\n    <div class=\"col\">\r\n      <mdl-button class=\"remove-rooms\" mdl-button-type=\"icon\" mdl-colored=\"accent\" (click)=\"deleteRoom($event, room)\">\r\n        <mdl-icon>delete</mdl-icon>\r\n      </mdl-button>\r\n    </div>\r\n  </div>\r\n  <mdl-button mdl-button-type=\"fab\" class=\"add-rooms\" mdl-colored=\"accent\" mdl-ripple mdl-shadow=\"8\" (click)=\"showModal = true\">\r\n    <mdl-icon>add</mdl-icon>\r\n  </mdl-button>\r\n</app-flex-card>\r\n"

/***/ },
/* 942 */
/***/ function(module, exports) {

module.exports = "<div class=\"centre-subventions\" [mdl-shadow]=\"3\" *ngIf=\"centre\">\r\n  <div class=\"title\">\r\n    ECCE\r\n  </div>\r\n  <div class=\"ecce\">\r\n    <div class=\"col\">\r\n      <div class=\"parameter\">\r\n        <div class=\"mask\" *ngIf=\"!editing\"></div>\r\n        <span class=\"name\">ECCE Capitations</span>\r\n        <app-ecce-capitations [model]=\"centre.ecceSettings.capitations\" (valueSet)=\"centre.ecceSettings.capitations = $event\"></app-ecce-capitations>\r\n      </div>\r\n      <div class=\"details\">\r\n        <p>Selecting the LOW capitation rate will configure your setting with a weekly ECCE rate of €64.50. This is the standard weekly rate.</p>\r\n        <p>Selecting the HIGH capitation rate will configure your setting with a weekly ECCE rate of €75. Please only select this rate if you are in receipt of the higher capitation.</p>\r\n        <p>To confirm your eligibility please consult the DCYA website or consult this <a href=\"http://www.dcya.gov.ie/documents/ecce-scheme/20160728ECCEHigherCapitationFAQsJuly2016.pdf\" target=\"_blank\">link</a></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"save-button\">\r\n    <mdl-spinner [active]=\"saving\"></mdl-spinner>\r\n    <mdl-button mdl-button-type=\"raised\" class=\"edit\" mdl-ripple (click)=\"editing = true\" *ngIf=\"!editing\">\r\n      EDIT\r\n    </mdl-button>\r\n    <mdl-button mdl-button-type=\"raised\" class=\"cancel\" mdl-ripple (click)=\"cancel()\" *ngIf=\"editing\">\r\n      CANCEL\r\n    </mdl-button>\r\n    <mdl-button mdl-button-type=\"raised\" mdl-ripple (click)=\"saveDetails()\" *ngIf=\"editing\">\r\n      SAVE\r\n    </mdl-button>\r\n  </div>\r\n</div>\r\n"

/***/ },
/* 943 */
/***/ function(module, exports) {

module.exports = "<div class=\"simple-modal\">\r\n  <mdl-icon (click)=\"dismiss()\" class=\"close-button\">close</mdl-icon>\r\n  <p class=\"title\">{{isEdit ? 'Edit' : 'Add'}} Child</p>\r\n  <mdl-textfield\r\n    label=\"Child Name\" floating-label\r\n    [(ngModel)]=\"name\"></mdl-textfield>\r\n  <app-datepicker [(ngModel)]=\"date\" [label]=\"'Date of Birth'\"></app-datepicker>\r\n  <div class=\"select-row\">\r\n    <mdl-select\r\n      [(ngModel)]=\"roomId\"\r\n      placeholder=\"Select Room\">\r\n      <mdl-option *ngFor=\"let room of rooms\" [value]=\"room.id\">\r\n        {{room.name}}\r\n      </mdl-option>\r\n    </mdl-select>\r\n  </div>\r\n  <p class=\"error-message\">{{errorMessage}}</p>\r\n  <div class=\"save-button\">\r\n    <mdl-button mdl-ripple (click)=\"saveChild()\">Save</mdl-button>\r\n    <mdl-spinner [active]=\"saving\"></mdl-spinner>\r\n  </div>\r\n</div>\r\n"

/***/ },
/* 944 */
/***/ function(module, exports) {

module.exports = "<div class=\"simple-modal\">\r\n  <mdl-icon (click)=\"dismiss()\" class=\"close-button\">close</mdl-icon>\r\n  <p class=\"title\">{{room ? 'Edit' : 'Add'}} Room</p>\r\n  <mdl-textfield\r\n    label=\"Room Name\" floating-label\r\n    class=\"room-name\"\r\n    [(ngModel)]=\"name\">\r\n  </mdl-textfield>\r\n  <div class=\"select-row\">\r\n    <mdl-select\r\n      [(ngModel)]=\"ageFrom\"\r\n      (change)=\"handleSelect($event, 'from')\"\r\n      placeholder=\"Age Group (from)\">\r\n      <mdl-option *ngFor=\"let option of ageFromAvailable\" [value]=\"option\">\r\n        {{option}}\r\n      </mdl-option>\r\n    </mdl-select>\r\n    <mdl-select\r\n      #ageToSelect\r\n      [(ngModel)]=\"ageTo\"\r\n      (change)=\"handleSelect($event, 'to')\"\r\n      placeholder=\"Age Group (to)\">\r\n      <mdl-option *ngFor=\"let option of ageToAvailable\" [value]=\"option\">\r\n        {{option}}\r\n      </mdl-option>\r\n    </mdl-select>\r\n  </div>\r\n  <div class=\"select-row\">\r\n    <mdl-textfield\r\n      label=\"Capacity\" floating-label\r\n      class=\"capacity\"\r\n      pattern=\"-?[0-9]*(\\.[0-9]+)?\"\r\n      error-msg=\"Capacity needs to be a number\"\r\n      [(ngModel)]=\"capacity\">\r\n    </mdl-textfield>\r\n    <div class=\"ecce-capitations\">\r\n      <label>ECCE Capitations</label>\r\n      <app-ecce-capitations [model]=\"ecceCapitations\" (valueSet)=\"ecceCapitations = $event\"></app-ecce-capitations>\r\n    </div>\r\n  </div>\r\n  <p class=\"error-message\">{{errorMessage}}</p>\r\n  <div class=\"save-button\">\r\n    <mdl-spinner [active]=\"saving\"></mdl-spinner>\r\n    <button mdl-button mdl-ripple (click)=\"saveRoom()\">Save</button>\r\n  </div>\r\n</div>\r\n"

/***/ },
/* 945 */
/***/ function(module, exports) {

module.exports = "<div class=\"capitations\">\r\n  <span\r\n    [mdl-tooltip]=\"offTooltip\"\r\n    [class.off]=\"value == 'low'\"\r\n    (click)=\"setValue('low')\">\r\n      LOW\r\n  </span>\r\n  <span\r\n    [mdl-tooltip]=\"mixedTooltip\"\r\n    [class.mixed]=\"value == 'mixed'\"\r\n    (click)=\"setValue('mixed')\">\r\n      MIXED\r\n  </span>\r\n  <span\r\n    [mdl-tooltip]=\"onTooltip\"\r\n    [class.on]=\"value == 'high'\"\r\n    (click)=\"setValue('high')\">\r\n      HIGH\r\n  </span>\r\n\r\n  <mdl-tooltip #onTooltip=\"mdlTooltip\">\r\n    Set High weekly rate - €75. Please check eligibility\r\n  </mdl-tooltip>\r\n  <mdl-tooltip #mixedTooltip=\"mdlTooltip\">\r\n    For centres in receipt of the high capitation but using the low to calculate fees\r\n  </mdl-tooltip>\r\n  <mdl-tooltip #offTooltip=\"mdlTooltip\">\r\n    Set LOW weekly rate - €64.50\r\n  </mdl-tooltip>\r\n</div>\r\n"

/***/ },
/* 946 */
/***/ function(module, exports) {

module.exports = "<!--<app-navbar ></app-navbar>-->\r\n<app-navbar-small [routes]=\"routes\" title=\"Centre Setup\"></app-navbar-small>\r\n<div class=\"layout-content\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n"

/***/ },
/* 947 */
/***/ function(module, exports) {

module.exports = "<app-modal [showModal]=\"!!showDialog\">\r\n  <div class=\"simple-modal\">\r\n    <div class=\"dialog-content\">\r\n      <p>{{ message }}</p>\r\n      <div class=\"modal-controls\">\r\n        <mdl-button mdl-ripple mdl-colored=\"accent\" (click)=\"close(false)\">\r\n          Cancel\r\n        </mdl-button>\r\n        <mdl-button mdl-ripple (click)=\"close(true)\">Ok</mdl-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</app-modal>\r\n"

/***/ },
/* 948 */
/***/ function(module, exports) {

module.exports = "<div class=\"datepicker-wrapper\">\r\n  <mdl-textfield\r\n    type=\"text\"\r\n    class=\"ng-datepicker-input\"\r\n    [label]=\"label\"\r\n    floating-label\r\n    (click)=\"toggle()\"\r\n    [ngModel]=\"viewDate\"\r\n    readonly>\r\n  </mdl-textfield>\r\n  <div class=\"ng-datepicker\" *ngIf=\"opened\">\r\n    <div class=\"controls\">\r\n      <div class=\"left\">\r\n        <mdl-icon class=\"prev-year-btn\" (click)=\"prevYear()\">keyboard_arrow_left</mdl-icon>\r\n        <mdl-icon class=\"prev-month-btn\" (click)=\"prevMonth()\">arrow_back</mdl-icon>\r\n      </div>\r\n      <span class=\"date\">\r\n        {{ date.format('MMMM YYYY') }}\r\n      </span>\r\n      <div class=\"right\">\r\n        <mdl-icon class=\"next-month-btn\" (click)=\"nextMonth()\">arrow_forward</mdl-icon>\r\n        <mdl-icon class=\"next-year-btn\" (click)=\"nextYear()\">keyboard_arrow_right</mdl-icon>\r\n      </div>\r\n    </div>\r\n    <div class=\"day-names\">\r\n      <span>Mon</span>\r\n      <span>Tue</span>\r\n      <span>Wed</span>\r\n      <span>Thu</span>\r\n      <span>Fri</span>\r\n      <span>Sat</span>\r\n      <span>Sun</span>\r\n    </div>\r\n    <div class=\"calendar\">\r\n      <span\r\n        *ngFor=\"let d of days; let i = index;\"\r\n        (click)=\"selectDate($event, i)\"\r\n        class=\"day\" [ngClass]=\"{'disabled': !d.enabled, 'selected': d.selected, 'today': d.today}\">\r\n          {{ d.day }}\r\n        </span>\r\n    </div>\r\n  </div>\r\n</div>\r\n"

/***/ },
/* 949 */
/***/ function(module, exports) {

module.exports = "<div class=\"flex-card\" [mdl-shadow]=\"tableShadow\">\r\n  <ng-content select=\"app-searchbar\"></ng-content>\r\n  <div class=\"row tooltips\">\r\n    <template ngFor let-tooltip [ngForOf]=\"options.tooltips\">\r\n      <div\r\n        *ngIf=\"!tooltip.inactive\"\r\n        [ngClass]=\"['col', tooltip.className || '', resolveClass(tooltip.value)]\"\r\n        (click)=\"changeSort(tooltip.value)\">\r\n        {{tooltip.caption || tooltip.value}}\r\n      </div>\r\n      <div\r\n        *ngIf=\"tooltip.inactive\"\r\n        [ngClass]=\"['col', tooltip.className || '']\">\r\n        {{tooltip.caption || tooltip.value}}\r\n      </div>\r\n    </template>\r\n  </div>\r\n  <mdl-progress indeterminate=\"true\" *ngIf=\"loading\"></mdl-progress>\r\n  <ng-content></ng-content>\r\n</div>\r\n"

/***/ },
/* 950 */
/***/ function(module, exports) {

module.exports = "<div class=\"backdrop\" [@backdrop]=\"showModal\">\r\n  <div class=\"modal\" [@modal]=\"showModal\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>"

/***/ },
/* 951 */
/***/ function(module, exports) {

module.exports = "<div class=\"navbar\" mdl-shadow=\"3\">\r\n  <!--//navbar-title-->\r\n  <div class=\"navbar-title\">\r\n    <div class=\"menu\">&nbsp;</div>\r\n    <div class=\"logo\">Little Vista</div>\r\n    <div class=\"sub-title\">{{title}}</div>\r\n  </div>\r\n  <!--//end navbar title-->\r\n  <!--//navbar holder-->\r\n  <div class=\"navbar-holder\" (window:resize)=\"onResize($event)\" [hidden]=\"!routes\">\r\n    <div [class.show]=\"showLeftArrow\" class=\"arrow arrow-back\" (click)=\"scroll()\" mdl-ripple>\r\n      <mdl-icon>arrow_back</mdl-icon>\r\n    </div>\r\n    <div class=\"navbar-scroll\" #nav>\r\n      <a\r\n        class=\"navbar-item\"\r\n        *ngFor=\"let route of routes\"\r\n        [routerLink]=\"[route.path]\"\r\n        routerLinkActive=\"active-route\"\r\n        >\r\n        <p>{{route.link}}</p>\r\n      </a>\r\n    </div>\r\n    <div [class.show]=\"showRightArrow\" class=\"arrow arrow-forward\" #arrow (click)=\"scroll('right')\" mdl-ripple>\r\n      <mdl-icon>arrow_forward</mdl-icon>\r\n    </div>\r\n  </div>\r\n  <!--//end navbar holder-->\r\n</div>"

/***/ },
/* 952 */
/***/ function(module, exports) {

module.exports = "<div class=\"navbar\">\r\n  {{title}}\r\n</div>\r\n"

/***/ },
/* 953 */
/***/ function(module, exports) {

module.exports = "<div class=\"searchbar\" [class.active]=\"activated\" #searchbar>\r\n    <mdl-icon class=\"search-button\" (click)=\"toggleState()\">search</mdl-icon>\r\n    <mdl-textfield #textfield [formControl]=\"filter\"></mdl-textfield>\r\n    <mdl-icon class=\"clear-button\" [hidden]=\"!textfield.value\" (click)=\"textfield.value = ''\">clear</mdl-icon>\r\n</div>\r\n"

/***/ },
/* 954 */
/***/ function(module, exports) {

module.exports = "<div class=\"colored-button\" [class.light-green]=\"classes.indexOf('light-green') !== -1\" #button mdl-shadow=\"2\">\r\n  {{message}}\r\n</div>\r\n"

/***/ },
/* 955 */
/***/ function(module, exports) {

module.exports = "<div class=\"ecce-modal\">\r\n  <div class=\"modal-header\">\r\n    <button\r\n      mdl-button mdl-button-type=\"icon\"\r\n      (click)=\"dismiss()\"\r\n      class=\"close-button\">\r\n      <mdl-icon>close</mdl-icon>\r\n    </button>\r\n    <div class=\"child-details\">\r\n      <p class=\"name\">\r\n        {{ pageModel.name }}\r\n      </p>\r\n      <div class=\"ecce-status\">\r\n        STATUS\r\n        <app-colored-button\r\n          [message]=\"pageModel.status ? 'ECCE' : 'NOT ECCE'\"\r\n          (click)=\"toggleStatus()\"\r\n          type=\"status\">\r\n        </app-colored-button>\r\n      </div>\r\n      <div class=\"start-date\">\r\n        <app-datepicker\r\n          [(ngModel)]=\"date\"\r\n          label=\"Start Date\"\r\n          view-format=\"Do MMM YYYY\">\r\n        </app-datepicker>\r\n      </div>\r\n    </div>\r\n    <div class=\"control-pills\">\r\n      <button mdl-button [class.active-pill]=\"step === 0\" [disabled]=\"true\">\r\n        ECCE Days\r\n      </button>\r\n      <button mdl-button [class.active-pill]=\"step === 1\" [disabled]=\"true\">\r\n        Optional Extras &amp; Other Costs\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div *ngIf=\"step === 0\" class=\"ecce\">\r\n        <div class=\"payment-model\">\r\n          <p class=\"header\">\r\n            How do you charge for this child:\r\n          </p>\r\n          <mdl-switch [(ngModel)]=\"pageModel.monthly\">\r\n           {{pageModel.monthly ? 'Monthly' : 'Weekly' }}\r\n         </mdl-switch>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <p class=\"header\">\r\n              Please select a weekly ECCE model for this child:\r\n            </p>\r\n            <div class=\"button-bar\">\r\n              <label>Annual Model: </label>\r\n              <app-list-buttons\r\n                [values]=\"pageModel.annualModel\"\r\n                [interactive]=\"true\"\r\n                (change)=\"handleAnnualModel($event)\"\r\n                [buttons]=\"'38::38 WEEK|41::41 WEEK|50::50 WEEK|52::52 WEEK'\"\r\n                [toggle]=\"true\"></app-list-buttons>\r\n            </div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div class=\"weekly-total\">\r\n              <p class=\"header\">\r\n                Weekly ECCE Total\r\n              </p>\r\n              <p class=\"total-value\">\r\n                {{weeklyTotal | currency:'EUR':'1-1.2'}}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"button-bar\">\r\n          <label>Days in Attendance: </label>\r\n          <app-list-buttons\r\n            [values]=\"pageModel.days\"\r\n            [interactive]=\"true\"\r\n            (change)=\"handleDays($event)\"\r\n            [buttons]=\"'monday::MONDAY|tuesday::TUESDAY|wednesday::WEDNESDAY|thursday::THURSDAY|friday::FRIDAY'\">\r\n          </app-list-buttons>\r\n        </div>\r\n        <p class=\"error-message\" [hidden]=\"!errorMessage\">\r\n          {{errorMessage}}\r\n        </p>\r\n    </div>\r\n    <div *ngIf=\"step === 1\" class=\"costs\">\r\n      <div class=\"row\">\r\n        <div class=\"col col-40\">\r\n          <p class=\"header\">\r\n            Enter {{ pageModel.monthly ? 'Monthly' : 'Weekly' }} Parent Fee Before ECCE\r\n          </p>\r\n        </div>\r\n        <div class=\"col col-10\">\r\n          <mdl-textfield\r\n            class=\"with-currency euro\"\r\n            step=\"any\"\r\n            [(ngModel)]=\"pageModel.normalFee\"\r\n            type=\"number\">\r\n          </mdl-textfield>\r\n        </div>\r\n      </div>\r\n      <div class=\"parent-fee\">\r\n      </div>\r\n      <p class=\"header\">\r\n        Add Optional Weekly Extras for this child\r\n      </p>\r\n      <div class=\"row extras\">\r\n        <div class=\"col col-10\">\r\n          <p>Meals</p>\r\n          <mdl-textfield\r\n            class=\"with-currency euro\"\r\n            type=\"number\"\r\n            step=\"any\"\r\n            [(ngModel)]=\"pageModel.extras.meals\"></mdl-textfield>\r\n        </div>\r\n        <div class=\"col col-10\">\r\n          <p>Extra Hours</p>\r\n          <mdl-textfield\r\n            class=\"with-currency euro\"\r\n            type=\"number\"\r\n            step=\"any\"\r\n            [(ngModel)]=\"pageModel.extras.hours\"></mdl-textfield>\r\n        </div>\r\n        <div class=\"col col-10\">\r\n          <p>Trips</p>\r\n          <mdl-textfield\r\n            class=\"with-currency euro\"\r\n            type=\"number\"\r\n            step=\"any\"\r\n            [(ngModel)]=\"pageModel.extras.trips\"></mdl-textfield>\r\n        </div>\r\n        <div class=\"col col-10\">\r\n          <p>Other</p>\r\n          <mdl-textfield\r\n            class=\"with-currency euro\"\r\n            type=\"number\"\r\n            step=\"any\"\r\n            [(ngModel)]=\"pageModel.extras.other\"></mdl-textfield>\r\n        </div>\r\n        <div class=\"col col-10\">\r\n          <p>Voluntary</p>\r\n          <mdl-textfield\r\n            class=\"with-currency euro\"\r\n            type=\"number\"\r\n            step=\"any\"\r\n            [(ngModel)]=\"pageModel.extras.voluntary\"></mdl-textfield>\r\n        </div>\r\n        <div class=\"col\">\r\n          <p>Total weekly extras</p>\r\n          <span class=\"extras-value\">\r\n            {{weeklyTotalExtras | currency:'EUR':'1-1.2'}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row totals\">\r\n        <div class=\"col  col-90\">\r\n          <p class=\"header\">\r\n            {{ pageModel.monthly ? 'Monthly' : 'Weekly' }} Parent Reduced Fee\r\n          </p>\r\n          <p class=\"fee\">\r\n            {{ reducedFee  | currency:'EUR':'1-1.2' }}\r\n          </p>\r\n        </div>\r\n        <div class=\"col col-10\">\r\n          <p class=\"header\">\r\n            Total Annual ECCE\r\n          </p>\r\n          <p class=\"fee\">\r\n            {{\r\n              (capitation === 'HIGH' ? 2850 : 2451)\r\n              | currency:'EUR':'1-1.2'\r\n            }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <div class=\"control-bar\">\r\n    <button\r\n      [hidden]=\"step === 0\"\r\n      (click)=\"step = step - 1\"\r\n      mdl-button>\r\n        Back\r\n    </button>\r\n    <button\r\n      mdl-button\r\n      [hidden]=\"step === 1\"\r\n      [disabled]=\"isDisabled()\"\r\n      (click)=\"step = step + 1\"\r\n      class=\"button-right\">\r\n        Next\r\n    </button>\r\n    <div class=\"button-right\" [hidden]=\"step !== 1\">\r\n        <mdl-spinner [active]=\"saving\"></mdl-spinner>\r\n        <button\r\n          mdl-button\r\n          [disabled]=\"isDisabled()\"\r\n          (click)=\"saveChanges()\">\r\n            Save\r\n        </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n"

/***/ },
/* 956 */
/***/ function(module, exports) {

module.exports = "<div class=\"list-buttons\" [class.interactive]=\"interactive\">\r\n  <app-colored-button\r\n    *ngFor=\"let button of _buttons\"\r\n    [message]=\"button.name\"\r\n    [type]=\"button.status\"\r\n    [classes]=\"classes\"\r\n    (click)=\"interactive && toggleChange(button)\"></app-colored-button>\r\n</div>\r\n"

/***/ },
/* 957 */
/***/ function(module, exports) {

module.exports = "<app-navbar title=\"Subventions\"></app-navbar>\r\n<div class=\"layout-content\">\r\n  <app-modal [showModal]=\"!!selectedChild\">\r\n    <app-ecce-modal [child]=\"selectedChild\" (closeModal)=\"selectedChild = null\"></app-ecce-modal>\r\n  </app-modal>\r\n  <app-flex-card\r\n    [loading]=\"loading\"\r\n    [options]=\"tableOptions\"\r\n    [collection]=\"subventions\"\r\n    class=\"ecce-subventions\">\r\n    <app-searchbar (searchFilter)=\"handleFilter($event)\"></app-searchbar>\r\n    <div class=\"row\" *ngFor=\"let person of subventions\" (click)=\"selectedChild = person\">\r\n      <div class=\"col child-name\">\r\n        {{person.name}}\r\n      </div>\r\n      <div class=\"col start-date\">\r\n        {{person.startDate ? (person.startDate | date:'dd/MM/yyyy') : ''}}\r\n      </div>\r\n      <div class=\"col status\">\r\n        <app-colored-button  [message]=\"person.status ? 'ECCE' : 'NOT ECCE'\" type=\"status\"></app-colored-button>\r\n      </div>\r\n      <div class=\"col attendance\">\r\n        <div>\r\n          <app-list-buttons [values]=\"person.days\" [buttons]=\"'monday::MONDAY|tuesday::TUESDAY|wednesday::WEDNESDAY|thursday::THURSDAY|friday::FRIDAY'\"></app-list-buttons>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </app-flex-card>\r\n</div>\r\n"

/***/ },
/* 958 */
/***/ function(module, exports) {

module.exports = "<div class=\"verify\">\r\n  <mdl-progress [indeterminate]=\"true\" *ngIf=\"loading\"></mdl-progress>\r\n  <div class=\"vista-logo\">\r\n    <img src=\"/assets/img/logo-large.png\" alt=\"Little Vista logo\" />\r\n  </div>\r\n  <div class=\"stabilizer\">\r\n    <p>\r\n      {{message}}\r\n    </p>\r\n  </div>\r\n</div>\r\n"

/***/ },
/* 959 */
/***/ function(module, exports) {

"use strict";
"use strict";
/**
 * An execution context and a data structure to order tasks and schedule their
 * execution. Provides a notion of (potentially virtual) time, through the
 * `now()` getter method.
 *
 * Each unit of work in a Scheduler is called an {@link Action}.
 *
 * ```ts
 * class Scheduler {
 *   now(): number;
 *   schedule(work, delay?, state?): Subscription;
 * }
 * ```
 *
 * @class Scheduler
 */
var Scheduler = (function () {
    function Scheduler(SchedulerAction, now) {
        if (now === void 0) { now = Scheduler.now; }
        this.SchedulerAction = SchedulerAction;
        this.now = now;
    }
    /**
     * Schedules a function, `work`, for execution. May happen at some point in
     * the future, according to the `delay` parameter, if specified. May be passed
     * some context object, `state`, which will be passed to the `work` function.
     *
     * The given arguments will be processed an stored as an Action object in a
     * queue of actions.
     *
     * @param {function(state: ?T): ?Subscription} work A function representing a
     * task, or some unit of work to be executed by the Scheduler.
     * @param {number} [delay] Time to wait before executing the work, where the
     * time unit is implicit and defined by the Scheduler itself.
     * @param {T} [state] Some contextual data that the `work` function uses when
     * called by the Scheduler.
     * @return {Subscription} A subscription in order to be able to unsubscribe
     * the scheduled work.
     */
    Scheduler.prototype.schedule = function (work, delay, state) {
        if (delay === void 0) { delay = 0; }
        return new this.SchedulerAction(this, work).schedule(state, delay);
    };
    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };
    return Scheduler;
}());
exports.Scheduler = Scheduler;
//# sourceMappingURL=Scheduler.js.map

/***/ },
/* 960 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var bindCallback_1 = __webpack_require__(1105);
Observable_1.Observable.bindCallback = bindCallback_1.bindCallback;
//# sourceMappingURL=bindCallback.js.map

/***/ },
/* 961 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var bindNodeCallback_1 = __webpack_require__(1106);
Observable_1.Observable.bindNodeCallback = bindNodeCallback_1.bindNodeCallback;
//# sourceMappingURL=bindNodeCallback.js.map

/***/ },
/* 962 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var combineLatest_1 = __webpack_require__(1107);
Observable_1.Observable.combineLatest = combineLatest_1.combineLatest;
//# sourceMappingURL=combineLatest.js.map

/***/ },
/* 963 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var concat_1 = __webpack_require__(1108);
Observable_1.Observable.concat = concat_1.concat;
//# sourceMappingURL=concat.js.map

/***/ },
/* 964 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var defer_1 = __webpack_require__(1109);
Observable_1.Observable.defer = defer_1.defer;
//# sourceMappingURL=defer.js.map

/***/ },
/* 965 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var ajax_1 = __webpack_require__(1111);
Observable_1.Observable.ajax = ajax_1.ajax;
//# sourceMappingURL=ajax.js.map

/***/ },
/* 966 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var webSocket_1 = __webpack_require__(1112);
Observable_1.Observable.webSocket = webSocket_1.webSocket;
//# sourceMappingURL=webSocket.js.map

/***/ },
/* 967 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var empty_1 = __webpack_require__(1113);
Observable_1.Observable.empty = empty_1.empty;
//# sourceMappingURL=empty.js.map

/***/ },
/* 968 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var forkJoin_1 = __webpack_require__(1114);
Observable_1.Observable.forkJoin = forkJoin_1.forkJoin;
//# sourceMappingURL=forkJoin.js.map

/***/ },
/* 969 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var from_1 = __webpack_require__(151);
Observable_1.Observable.from = from_1.from;
//# sourceMappingURL=from.js.map

/***/ },
/* 970 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var fromEvent_1 = __webpack_require__(1115);
Observable_1.Observable.fromEvent = fromEvent_1.fromEvent;
//# sourceMappingURL=fromEvent.js.map

/***/ },
/* 971 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var fromEventPattern_1 = __webpack_require__(1116);
Observable_1.Observable.fromEventPattern = fromEventPattern_1.fromEventPattern;
//# sourceMappingURL=fromEventPattern.js.map

/***/ },
/* 972 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var fromPromise_1 = __webpack_require__(152);
Observable_1.Observable.fromPromise = fromPromise_1.fromPromise;
//# sourceMappingURL=fromPromise.js.map

/***/ },
/* 973 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var GenerateObservable_1 = __webpack_require__(1096);
Observable_1.Observable.generate = GenerateObservable_1.GenerateObservable.create;
//# sourceMappingURL=generate.js.map

/***/ },
/* 974 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var if_1 = __webpack_require__(1117);
Observable_1.Observable.if = if_1._if;
//# sourceMappingURL=if.js.map

/***/ },
/* 975 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var interval_1 = __webpack_require__(1118);
Observable_1.Observable.interval = interval_1.interval;
//# sourceMappingURL=interval.js.map

/***/ },
/* 976 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var merge_1 = __webpack_require__(1119);
Observable_1.Observable.merge = merge_1.merge;
//# sourceMappingURL=merge.js.map

/***/ },
/* 977 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var never_1 = __webpack_require__(1120);
Observable_1.Observable.never = never_1.never;
//# sourceMappingURL=never.js.map

/***/ },
/* 978 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var of_1 = __webpack_require__(65);
Observable_1.Observable.of = of_1.of;
//# sourceMappingURL=of.js.map

/***/ },
/* 979 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var onErrorResumeNext_1 = __webpack_require__(792);
Observable_1.Observable.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNextStatic;
//# sourceMappingURL=onErrorResumeNext.js.map

/***/ },
/* 980 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var pairs_1 = __webpack_require__(1121);
Observable_1.Observable.pairs = pairs_1.pairs;
//# sourceMappingURL=pairs.js.map

/***/ },
/* 981 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var race_1 = __webpack_require__(793);
Observable_1.Observable.race = race_1.raceStatic;
//# sourceMappingURL=race.js.map

/***/ },
/* 982 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var range_1 = __webpack_require__(1122);
Observable_1.Observable.range = range_1.range;
//# sourceMappingURL=range.js.map

/***/ },
/* 983 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var throw_1 = __webpack_require__(1123);
Observable_1.Observable.throw = throw_1._throw;
//# sourceMappingURL=throw.js.map

/***/ },
/* 984 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var timer_1 = __webpack_require__(1124);
Observable_1.Observable.timer = timer_1.timer;
//# sourceMappingURL=timer.js.map

/***/ },
/* 985 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var using_1 = __webpack_require__(1125);
Observable_1.Observable.using = using_1.using;
//# sourceMappingURL=using.js.map

/***/ },
/* 986 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var zip_1 = __webpack_require__(1126);
Observable_1.Observable.zip = zip_1.zip;
//# sourceMappingURL=zip.js.map

/***/ },
/* 987 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var audit_1 = __webpack_require__(1127);
Observable_1.Observable.prototype.audit = audit_1.audit;
//# sourceMappingURL=audit.js.map

/***/ },
/* 988 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var auditTime_1 = __webpack_require__(1128);
Observable_1.Observable.prototype.auditTime = auditTime_1.auditTime;
//# sourceMappingURL=auditTime.js.map

/***/ },
/* 989 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var buffer_1 = __webpack_require__(1129);
Observable_1.Observable.prototype.buffer = buffer_1.buffer;
//# sourceMappingURL=buffer.js.map

/***/ },
/* 990 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var bufferCount_1 = __webpack_require__(1130);
Observable_1.Observable.prototype.bufferCount = bufferCount_1.bufferCount;
//# sourceMappingURL=bufferCount.js.map

/***/ },
/* 991 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var bufferTime_1 = __webpack_require__(1131);
Observable_1.Observable.prototype.bufferTime = bufferTime_1.bufferTime;
//# sourceMappingURL=bufferTime.js.map

/***/ },
/* 992 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var bufferToggle_1 = __webpack_require__(1132);
Observable_1.Observable.prototype.bufferToggle = bufferToggle_1.bufferToggle;
//# sourceMappingURL=bufferToggle.js.map

/***/ },
/* 993 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var bufferWhen_1 = __webpack_require__(1133);
Observable_1.Observable.prototype.bufferWhen = bufferWhen_1.bufferWhen;
//# sourceMappingURL=bufferWhen.js.map

/***/ },
/* 994 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var cache_1 = __webpack_require__(1134);
Observable_1.Observable.prototype.cache = cache_1.cache;
//# sourceMappingURL=cache.js.map

/***/ },
/* 995 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var catch_1 = __webpack_require__(235);
Observable_1.Observable.prototype.catch = catch_1._catch;
Observable_1.Observable.prototype._catch = catch_1._catch;
//# sourceMappingURL=catch.js.map

/***/ },
/* 996 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var combineAll_1 = __webpack_require__(1135);
Observable_1.Observable.prototype.combineAll = combineAll_1.combineAll;
//# sourceMappingURL=combineAll.js.map

/***/ },
/* 997 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var combineLatest_1 = __webpack_require__(720);
Observable_1.Observable.prototype.combineLatest = combineLatest_1.combineLatest;
//# sourceMappingURL=combineLatest.js.map

/***/ },
/* 998 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var concat_1 = __webpack_require__(721);
Observable_1.Observable.prototype.concat = concat_1.concat;
//# sourceMappingURL=concat.js.map

/***/ },
/* 999 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var concatAll_1 = __webpack_require__(236);
Observable_1.Observable.prototype.concatAll = concatAll_1.concatAll;
//# sourceMappingURL=concatAll.js.map

/***/ },
/* 1000 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var concatMap_1 = __webpack_require__(237);
Observable_1.Observable.prototype.concatMap = concatMap_1.concatMap;
//# sourceMappingURL=concatMap.js.map

/***/ },
/* 1001 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var concatMapTo_1 = __webpack_require__(1136);
Observable_1.Observable.prototype.concatMapTo = concatMapTo_1.concatMapTo;
//# sourceMappingURL=concatMapTo.js.map

/***/ },
/* 1002 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var count_1 = __webpack_require__(1137);
Observable_1.Observable.prototype.count = count_1.count;
//# sourceMappingURL=count.js.map

/***/ },
/* 1003 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var debounce_1 = __webpack_require__(1138);
Observable_1.Observable.prototype.debounce = debounce_1.debounce;
//# sourceMappingURL=debounce.js.map

/***/ },
/* 1004 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var debounceTime_1 = __webpack_require__(1139);
Observable_1.Observable.prototype.debounceTime = debounceTime_1.debounceTime;
//# sourceMappingURL=debounceTime.js.map

/***/ },
/* 1005 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var defaultIfEmpty_1 = __webpack_require__(1140);
Observable_1.Observable.prototype.defaultIfEmpty = defaultIfEmpty_1.defaultIfEmpty;
//# sourceMappingURL=defaultIfEmpty.js.map

/***/ },
/* 1006 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var delay_1 = __webpack_require__(1141);
Observable_1.Observable.prototype.delay = delay_1.delay;
//# sourceMappingURL=delay.js.map

/***/ },
/* 1007 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var delayWhen_1 = __webpack_require__(1142);
Observable_1.Observable.prototype.delayWhen = delayWhen_1.delayWhen;
//# sourceMappingURL=delayWhen.js.map

/***/ },
/* 1008 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var dematerialize_1 = __webpack_require__(1143);
Observable_1.Observable.prototype.dematerialize = dematerialize_1.dematerialize;
//# sourceMappingURL=dematerialize.js.map

/***/ },
/* 1009 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var distinct_1 = __webpack_require__(787);
Observable_1.Observable.prototype.distinct = distinct_1.distinct;
//# sourceMappingURL=distinct.js.map

/***/ },
/* 1010 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var distinctKey_1 = __webpack_require__(1144);
Observable_1.Observable.prototype.distinctKey = distinctKey_1.distinctKey;
//# sourceMappingURL=distinctKey.js.map

/***/ },
/* 1011 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var distinctUntilChanged_1 = __webpack_require__(788);
Observable_1.Observable.prototype.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;
//# sourceMappingURL=distinctUntilChanged.js.map

/***/ },
/* 1012 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var distinctUntilKeyChanged_1 = __webpack_require__(1145);
Observable_1.Observable.prototype.distinctUntilKeyChanged = distinctUntilKeyChanged_1.distinctUntilKeyChanged;
//# sourceMappingURL=distinctUntilKeyChanged.js.map

/***/ },
/* 1013 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var do_1 = __webpack_require__(1146);
Observable_1.Observable.prototype.do = do_1._do;
Observable_1.Observable.prototype._do = do_1._do;
//# sourceMappingURL=do.js.map

/***/ },
/* 1014 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var elementAt_1 = __webpack_require__(1147);
Observable_1.Observable.prototype.elementAt = elementAt_1.elementAt;
//# sourceMappingURL=elementAt.js.map

/***/ },
/* 1015 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var every_1 = __webpack_require__(238);
Observable_1.Observable.prototype.every = every_1.every;
//# sourceMappingURL=every.js.map

/***/ },
/* 1016 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var exhaust_1 = __webpack_require__(1148);
Observable_1.Observable.prototype.exhaust = exhaust_1.exhaust;
//# sourceMappingURL=exhaust.js.map

/***/ },
/* 1017 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var exhaustMap_1 = __webpack_require__(1149);
Observable_1.Observable.prototype.exhaustMap = exhaustMap_1.exhaustMap;
//# sourceMappingURL=exhaustMap.js.map

/***/ },
/* 1018 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var expand_1 = __webpack_require__(1150);
Observable_1.Observable.prototype.expand = expand_1.expand;
//# sourceMappingURL=expand.js.map

/***/ },
/* 1019 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var filter_1 = __webpack_require__(375);
Observable_1.Observable.prototype.filter = filter_1.filter;
//# sourceMappingURL=filter.js.map

/***/ },
/* 1020 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var finally_1 = __webpack_require__(1151);
Observable_1.Observable.prototype.finally = finally_1._finally;
Observable_1.Observable.prototype._finally = finally_1._finally;
//# sourceMappingURL=finally.js.map

/***/ },
/* 1021 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var find_1 = __webpack_require__(789);
Observable_1.Observable.prototype.find = find_1.find;
//# sourceMappingURL=find.js.map

/***/ },
/* 1022 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var findIndex_1 = __webpack_require__(1152);
Observable_1.Observable.prototype.findIndex = findIndex_1.findIndex;
//# sourceMappingURL=findIndex.js.map

/***/ },
/* 1023 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var first_1 = __webpack_require__(239);
Observable_1.Observable.prototype.first = first_1.first;
//# sourceMappingURL=first.js.map

/***/ },
/* 1024 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var groupBy_1 = __webpack_require__(1153);
Observable_1.Observable.prototype.groupBy = groupBy_1.groupBy;
//# sourceMappingURL=groupBy.js.map

/***/ },
/* 1025 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var ignoreElements_1 = __webpack_require__(1154);
Observable_1.Observable.prototype.ignoreElements = ignoreElements_1.ignoreElements;
//# sourceMappingURL=ignoreElements.js.map

/***/ },
/* 1026 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var isEmpty_1 = __webpack_require__(1155);
Observable_1.Observable.prototype.isEmpty = isEmpty_1.isEmpty;
//# sourceMappingURL=isEmpty.js.map

/***/ },
/* 1027 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var last_1 = __webpack_require__(380);
Observable_1.Observable.prototype.last = last_1.last;
//# sourceMappingURL=last.js.map

/***/ },
/* 1028 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var let_1 = __webpack_require__(1156);
Observable_1.Observable.prototype.let = let_1.letProto;
Observable_1.Observable.prototype.letBind = let_1.letProto;
//# sourceMappingURL=let.js.map

/***/ },
/* 1029 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var map_1 = __webpack_require__(101);
Observable_1.Observable.prototype.map = map_1.map;
//# sourceMappingURL=map.js.map

/***/ },
/* 1030 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var mapTo_1 = __webpack_require__(1157);
Observable_1.Observable.prototype.mapTo = mapTo_1.mapTo;
//# sourceMappingURL=mapTo.js.map

/***/ },
/* 1031 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var materialize_1 = __webpack_require__(1158);
Observable_1.Observable.prototype.materialize = materialize_1.materialize;
//# sourceMappingURL=materialize.js.map

/***/ },
/* 1032 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var max_1 = __webpack_require__(1159);
Observable_1.Observable.prototype.max = max_1.max;
//# sourceMappingURL=max.js.map

/***/ },
/* 1033 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var merge_1 = __webpack_require__(790);
Observable_1.Observable.prototype.merge = merge_1.merge;
//# sourceMappingURL=merge.js.map

/***/ },
/* 1034 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var mergeAll_1 = __webpack_require__(147);
Observable_1.Observable.prototype.mergeAll = mergeAll_1.mergeAll;
//# sourceMappingURL=mergeAll.js.map

/***/ },
/* 1035 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var mergeMap_1 = __webpack_require__(78);
Observable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;
Observable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;
//# sourceMappingURL=mergeMap.js.map

/***/ },
/* 1036 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var mergeMapTo_1 = __webpack_require__(791);
Observable_1.Observable.prototype.flatMapTo = mergeMapTo_1.mergeMapTo;
Observable_1.Observable.prototype.mergeMapTo = mergeMapTo_1.mergeMapTo;
//# sourceMappingURL=mergeMapTo.js.map

/***/ },
/* 1037 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var mergeScan_1 = __webpack_require__(1160);
Observable_1.Observable.prototype.mergeScan = mergeScan_1.mergeScan;
//# sourceMappingURL=mergeScan.js.map

/***/ },
/* 1038 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var min_1 = __webpack_require__(1161);
Observable_1.Observable.prototype.min = min_1.min;
//# sourceMappingURL=min.js.map

/***/ },
/* 1039 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var multicast_1 = __webpack_require__(682);
Observable_1.Observable.prototype.multicast = multicast_1.multicast;
//# sourceMappingURL=multicast.js.map

/***/ },
/* 1040 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var observeOn_1 = __webpack_require__(376);
Observable_1.Observable.prototype.observeOn = observeOn_1.observeOn;
//# sourceMappingURL=observeOn.js.map

/***/ },
/* 1041 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var onErrorResumeNext_1 = __webpack_require__(792);
Observable_1.Observable.prototype.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;
//# sourceMappingURL=onErrorResumeNext.js.map

/***/ },
/* 1042 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var pairwise_1 = __webpack_require__(1162);
Observable_1.Observable.prototype.pairwise = pairwise_1.pairwise;
//# sourceMappingURL=pairwise.js.map

/***/ },
/* 1043 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var partition_1 = __webpack_require__(1163);
Observable_1.Observable.prototype.partition = partition_1.partition;
//# sourceMappingURL=partition.js.map

/***/ },
/* 1044 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var pluck_1 = __webpack_require__(1164);
Observable_1.Observable.prototype.pluck = pluck_1.pluck;
//# sourceMappingURL=pluck.js.map

/***/ },
/* 1045 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var publish_1 = __webpack_require__(1165);
Observable_1.Observable.prototype.publish = publish_1.publish;
//# sourceMappingURL=publish.js.map

/***/ },
/* 1046 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var publishBehavior_1 = __webpack_require__(1166);
Observable_1.Observable.prototype.publishBehavior = publishBehavior_1.publishBehavior;
//# sourceMappingURL=publishBehavior.js.map

/***/ },
/* 1047 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var publishLast_1 = __webpack_require__(1167);
Observable_1.Observable.prototype.publishLast = publishLast_1.publishLast;
//# sourceMappingURL=publishLast.js.map

/***/ },
/* 1048 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var publishReplay_1 = __webpack_require__(1168);
Observable_1.Observable.prototype.publishReplay = publishReplay_1.publishReplay;
//# sourceMappingURL=publishReplay.js.map

/***/ },
/* 1049 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var race_1 = __webpack_require__(793);
Observable_1.Observable.prototype.race = race_1.race;
//# sourceMappingURL=race.js.map

/***/ },
/* 1050 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var reduce_1 = __webpack_require__(374);
Observable_1.Observable.prototype.reduce = reduce_1.reduce;
//# sourceMappingURL=reduce.js.map

/***/ },
/* 1051 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var repeat_1 = __webpack_require__(1169);
Observable_1.Observable.prototype.repeat = repeat_1.repeat;
//# sourceMappingURL=repeat.js.map

/***/ },
/* 1052 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var repeatWhen_1 = __webpack_require__(1170);
Observable_1.Observable.prototype.repeatWhen = repeatWhen_1.repeatWhen;
//# sourceMappingURL=repeatWhen.js.map

/***/ },
/* 1053 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var retry_1 = __webpack_require__(1171);
Observable_1.Observable.prototype.retry = retry_1.retry;
//# sourceMappingURL=retry.js.map

/***/ },
/* 1054 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var retryWhen_1 = __webpack_require__(1172);
Observable_1.Observable.prototype.retryWhen = retryWhen_1.retryWhen;
//# sourceMappingURL=retryWhen.js.map

/***/ },
/* 1055 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var sample_1 = __webpack_require__(1173);
Observable_1.Observable.prototype.sample = sample_1.sample;
//# sourceMappingURL=sample.js.map

/***/ },
/* 1056 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var sampleTime_1 = __webpack_require__(1174);
Observable_1.Observable.prototype.sampleTime = sampleTime_1.sampleTime;
//# sourceMappingURL=sampleTime.js.map

/***/ },
/* 1057 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var scan_1 = __webpack_require__(1175);
Observable_1.Observable.prototype.scan = scan_1.scan;
//# sourceMappingURL=scan.js.map

/***/ },
/* 1058 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var sequenceEqual_1 = __webpack_require__(1176);
Observable_1.Observable.prototype.sequenceEqual = sequenceEqual_1.sequenceEqual;
//# sourceMappingURL=sequenceEqual.js.map

/***/ },
/* 1059 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var share_1 = __webpack_require__(1177);
Observable_1.Observable.prototype.share = share_1.share;
//# sourceMappingURL=share.js.map

/***/ },
/* 1060 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var single_1 = __webpack_require__(1178);
Observable_1.Observable.prototype.single = single_1.single;
//# sourceMappingURL=single.js.map

/***/ },
/* 1061 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var skip_1 = __webpack_require__(1179);
Observable_1.Observable.prototype.skip = skip_1.skip;
//# sourceMappingURL=skip.js.map

/***/ },
/* 1062 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var skipUntil_1 = __webpack_require__(1180);
Observable_1.Observable.prototype.skipUntil = skipUntil_1.skipUntil;
//# sourceMappingURL=skipUntil.js.map

/***/ },
/* 1063 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var skipWhile_1 = __webpack_require__(1181);
Observable_1.Observable.prototype.skipWhile = skipWhile_1.skipWhile;
//# sourceMappingURL=skipWhile.js.map

/***/ },
/* 1064 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var startWith_1 = __webpack_require__(1182);
Observable_1.Observable.prototype.startWith = startWith_1.startWith;
//# sourceMappingURL=startWith.js.map

/***/ },
/* 1065 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var subscribeOn_1 = __webpack_require__(1183);
Observable_1.Observable.prototype.subscribeOn = subscribeOn_1.subscribeOn;
//# sourceMappingURL=subscribeOn.js.map

/***/ },
/* 1066 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var switch_1 = __webpack_require__(1184);
Observable_1.Observable.prototype.switch = switch_1._switch;
Observable_1.Observable.prototype._switch = switch_1._switch;
//# sourceMappingURL=switch.js.map

/***/ },
/* 1067 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var switchMap_1 = __webpack_require__(1185);
Observable_1.Observable.prototype.switchMap = switchMap_1.switchMap;
//# sourceMappingURL=switchMap.js.map

/***/ },
/* 1068 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var switchMapTo_1 = __webpack_require__(1186);
Observable_1.Observable.prototype.switchMapTo = switchMapTo_1.switchMapTo;
//# sourceMappingURL=switchMapTo.js.map

/***/ },
/* 1069 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var take_1 = __webpack_require__(1187);
Observable_1.Observable.prototype.take = take_1.take;
//# sourceMappingURL=take.js.map

/***/ },
/* 1070 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var takeLast_1 = __webpack_require__(1188);
Observable_1.Observable.prototype.takeLast = takeLast_1.takeLast;
//# sourceMappingURL=takeLast.js.map

/***/ },
/* 1071 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var takeUntil_1 = __webpack_require__(1189);
Observable_1.Observable.prototype.takeUntil = takeUntil_1.takeUntil;
//# sourceMappingURL=takeUntil.js.map

/***/ },
/* 1072 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var takeWhile_1 = __webpack_require__(1190);
Observable_1.Observable.prototype.takeWhile = takeWhile_1.takeWhile;
//# sourceMappingURL=takeWhile.js.map

/***/ },
/* 1073 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var throttle_1 = __webpack_require__(1191);
Observable_1.Observable.prototype.throttle = throttle_1.throttle;
//# sourceMappingURL=throttle.js.map

/***/ },
/* 1074 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var throttleTime_1 = __webpack_require__(1192);
Observable_1.Observable.prototype.throttleTime = throttleTime_1.throttleTime;
//# sourceMappingURL=throttleTime.js.map

/***/ },
/* 1075 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var timeInterval_1 = __webpack_require__(794);
Observable_1.Observable.prototype.timeInterval = timeInterval_1.timeInterval;
//# sourceMappingURL=timeInterval.js.map

/***/ },
/* 1076 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var timeout_1 = __webpack_require__(1193);
Observable_1.Observable.prototype.timeout = timeout_1.timeout;
//# sourceMappingURL=timeout.js.map

/***/ },
/* 1077 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var timeoutWith_1 = __webpack_require__(1194);
Observable_1.Observable.prototype.timeoutWith = timeoutWith_1.timeoutWith;
//# sourceMappingURL=timeoutWith.js.map

/***/ },
/* 1078 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var timestamp_1 = __webpack_require__(795);
Observable_1.Observable.prototype.timestamp = timestamp_1.timestamp;
//# sourceMappingURL=timestamp.js.map

/***/ },
/* 1079 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var toArray_1 = __webpack_require__(1195);
Observable_1.Observable.prototype.toArray = toArray_1.toArray;
//# sourceMappingURL=toArray.js.map

/***/ },
/* 1080 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var toPromise_1 = __webpack_require__(381);
Observable_1.Observable.prototype.toPromise = toPromise_1.toPromise;
//# sourceMappingURL=toPromise.js.map

/***/ },
/* 1081 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var window_1 = __webpack_require__(1196);
Observable_1.Observable.prototype.window = window_1.window;
//# sourceMappingURL=window.js.map

/***/ },
/* 1082 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var windowCount_1 = __webpack_require__(1197);
Observable_1.Observable.prototype.windowCount = windowCount_1.windowCount;
//# sourceMappingURL=windowCount.js.map

/***/ },
/* 1083 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var windowTime_1 = __webpack_require__(1198);
Observable_1.Observable.prototype.windowTime = windowTime_1.windowTime;
//# sourceMappingURL=windowTime.js.map

/***/ },
/* 1084 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var windowToggle_1 = __webpack_require__(1199);
Observable_1.Observable.prototype.windowToggle = windowToggle_1.windowToggle;
//# sourceMappingURL=windowToggle.js.map

/***/ },
/* 1085 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var windowWhen_1 = __webpack_require__(1200);
Observable_1.Observable.prototype.windowWhen = windowWhen_1.windowWhen;
//# sourceMappingURL=windowWhen.js.map

/***/ },
/* 1086 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var withLatestFrom_1 = __webpack_require__(1201);
Observable_1.Observable.prototype.withLatestFrom = withLatestFrom_1.withLatestFrom;
//# sourceMappingURL=withLatestFrom.js.map

/***/ },
/* 1087 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var zip_1 = __webpack_require__(722);
Observable_1.Observable.prototype.zip = zip_1.zipProto;
//# sourceMappingURL=zip.js.map

/***/ },
/* 1088 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var zipAll_1 = __webpack_require__(1202);
Observable_1.Observable.prototype.zipAll = zipAll_1.zipAll;
//# sourceMappingURL=zipAll.js.map

/***/ },
/* 1089 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(13);
var tryCatch_1 = __webpack_require__(370);
var errorObject_1 = __webpack_require__(231);
var AsyncSubject_1 = __webpack_require__(697);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var BoundCallbackObservable = (function (_super) {
    __extends(BoundCallbackObservable, _super);
    function BoundCallbackObservable(callbackFunc, selector, args, scheduler) {
        _super.call(this);
        this.callbackFunc = callbackFunc;
        this.selector = selector;
        this.args = args;
        this.scheduler = scheduler;
    }
    /* tslint:enable:max-line-length */
    /**
     * Converts a callback API to a function that returns an Observable.
     *
     * <span class="informal">Give it a function `f` of type `f(x, callback)` and
     * it will return a function `g` that when called as `g(x)` will output an
     * Observable.</span>
     *
     * `bindCallback` is not an operator because its input and output are not
     * Observables. The input is a function `func` with some parameters, but the
     * last parameter must be a callback function that `func` calls when it is
     * done. The output of `bindCallback` is a function that takes the same
     * parameters as `func`, except the last one (the callback). When the output
     * function is called with arguments, it will return an Observable where the
     * results will be delivered to.
     *
     * @example <caption>Convert jQuery's getJSON to an Observable API</caption>
     * // Suppose we have jQuery.getJSON('/my/url', callback)
     * var getJSONAsObservable = Rx.Observable.bindCallback(jQuery.getJSON);
     * var result = getJSONAsObservable('/my/url');
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     * @see {@link bindNodeCallback}
     * @see {@link from}
     * @see {@link fromPromise}
     *
     * @param {function} func Function with a callback as the last parameter.
     * @param {function} selector A function which takes the arguments from the
     * callback and maps those a value to emit on the output Observable.
     * @param {Scheduler} [scheduler] The scheduler on which to schedule the
     * callbacks.
     * @return {function(...params: *): Observable} A function which returns the
     * Observable that delivers the same values the callback would deliver.
     * @static true
     * @name bindCallback
     * @owner Observable
     */
    BoundCallbackObservable.create = function (func, selector, scheduler) {
        if (selector === void 0) { selector = undefined; }
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            return new BoundCallbackObservable(func, selector, args, scheduler);
        };
    };
    BoundCallbackObservable.prototype._subscribe = function (subscriber) {
        var callbackFunc = this.callbackFunc;
        var args = this.args;
        var scheduler = this.scheduler;
        var subject = this.subject;
        if (!scheduler) {
            if (!subject) {
                subject = this.subject = new AsyncSubject_1.AsyncSubject();
                var handler = function handlerFn() {
                    var innerArgs = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        innerArgs[_i - 0] = arguments[_i];
                    }
                    var source = handlerFn.source;
                    var selector = source.selector, subject = source.subject;
                    if (selector) {
                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);
                        if (result_1 === errorObject_1.errorObject) {
                            subject.error(errorObject_1.errorObject.e);
                        }
                        else {
                            subject.next(result_1);
                            subject.complete();
                        }
                    }
                    else {
                        subject.next(innerArgs.length === 1 ? innerArgs[0] : innerArgs);
                        subject.complete();
                    }
                };
                // use named function instance to avoid closure.
                handler.source = this;
                var result = tryCatch_1.tryCatch(callbackFunc).apply(this, args.concat(handler));
                if (result === errorObject_1.errorObject) {
                    subject.error(errorObject_1.errorObject.e);
                }
            }
            return subject.subscribe(subscriber);
        }
        else {
            return scheduler.schedule(BoundCallbackObservable.dispatch, 0, { source: this, subscriber: subscriber });
        }
    };
    BoundCallbackObservable.dispatch = function (state) {
        var self = this;
        var source = state.source, subscriber = state.subscriber;
        var callbackFunc = source.callbackFunc, args = source.args, scheduler = source.scheduler;
        var subject = source.subject;
        if (!subject) {
            subject = source.subject = new AsyncSubject_1.AsyncSubject();
            var handler = function handlerFn() {
                var innerArgs = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    innerArgs[_i - 0] = arguments[_i];
                }
                var source = handlerFn.source;
                var selector = source.selector, subject = source.subject;
                if (selector) {
                    var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);
                    if (result_2 === errorObject_1.errorObject) {
                        self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));
                    }
                    else {
                        self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));
                    }
                }
                else {
                    var value = innerArgs.length === 1 ? innerArgs[0] : innerArgs;
                    self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));
                }
            };
            // use named function to pass values in without closure
            handler.source = source;
            var result = tryCatch_1.tryCatch(callbackFunc).apply(this, args.concat(handler));
            if (result === errorObject_1.errorObject) {
                subject.error(errorObject_1.errorObject.e);
            }
        }
        self.add(subject.subscribe(subscriber));
    };
    return BoundCallbackObservable;
}(Observable_1.Observable));
exports.BoundCallbackObservable = BoundCallbackObservable;
function dispatchNext(arg) {
    var value = arg.value, subject = arg.subject;
    subject.next(value);
    subject.complete();
}
function dispatchError(arg) {
    var err = arg.err, subject = arg.subject;
    subject.error(err);
}
//# sourceMappingURL=BoundCallbackObservable.js.map

/***/ },
/* 1090 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(13);
var tryCatch_1 = __webpack_require__(370);
var errorObject_1 = __webpack_require__(231);
var AsyncSubject_1 = __webpack_require__(697);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var BoundNodeCallbackObservable = (function (_super) {
    __extends(BoundNodeCallbackObservable, _super);
    function BoundNodeCallbackObservable(callbackFunc, selector, args, scheduler) {
        _super.call(this);
        this.callbackFunc = callbackFunc;
        this.selector = selector;
        this.args = args;
        this.scheduler = scheduler;
    }
    /* tslint:enable:max-line-length */
    /**
     * Converts a Node.js-style callback API to a function that returns an
     * Observable.
     *
     * <span class="informal">It's just like {@link bindCallback}, but the
     * callback is expected to be of type `callback(error, result)`.</span>
     *
     * `bindNodeCallback` is not an operator because its input and output are not
     * Observables. The input is a function `func` with some parameters, but the
     * last parameter must be a callback function that `func` calls when it is
     * done. The callback function is expected to follow Node.js conventions,
     * where the first argument to the callback is an error, while remaining
     * arguments are the callback result. The output of `bindNodeCallback` is a
     * function that takes the same parameters as `func`, except the last one (the
     * callback). When the output function is called with arguments, it will
     * return an Observable where the results will be delivered to.
     *
     * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>
     * import * as fs from 'fs';
     * var readFileAsObservable = Rx.Observable.bindNodeCallback(fs.readFile);
     * var result = readFileAsObservable('./roadNames.txt', 'utf8');
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     * @see {@link bindCallback}
     * @see {@link from}
     * @see {@link fromPromise}
     *
     * @param {function} func Function with a callback as the last parameter.
     * @param {function} selector A function which takes the arguments from the
     * callback and maps those a value to emit on the output Observable.
     * @param {Scheduler} [scheduler] The scheduler on which to schedule the
     * callbacks.
     * @return {function(...params: *): Observable} A function which returns the
     * Observable that delivers the same values the Node.js callback would
     * deliver.
     * @static true
     * @name bindNodeCallback
     * @owner Observable
     */
    BoundNodeCallbackObservable.create = function (func, selector, scheduler) {
        if (selector === void 0) { selector = undefined; }
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            return new BoundNodeCallbackObservable(func, selector, args, scheduler);
        };
    };
    BoundNodeCallbackObservable.prototype._subscribe = function (subscriber) {
        var callbackFunc = this.callbackFunc;
        var args = this.args;
        var scheduler = this.scheduler;
        var subject = this.subject;
        if (!scheduler) {
            if (!subject) {
                subject = this.subject = new AsyncSubject_1.AsyncSubject();
                var handler = function handlerFn() {
                    var innerArgs = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        innerArgs[_i - 0] = arguments[_i];
                    }
                    var source = handlerFn.source;
                    var selector = source.selector, subject = source.subject;
                    var err = innerArgs.shift();
                    if (err) {
                        subject.error(err);
                    }
                    else if (selector) {
                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);
                        if (result_1 === errorObject_1.errorObject) {
                            subject.error(errorObject_1.errorObject.e);
                        }
                        else {
                            subject.next(result_1);
                            subject.complete();
                        }
                    }
                    else {
                        subject.next(innerArgs.length === 1 ? innerArgs[0] : innerArgs);
                        subject.complete();
                    }
                };
                // use named function instance to avoid closure.
                handler.source = this;
                var result = tryCatch_1.tryCatch(callbackFunc).apply(this, args.concat(handler));
                if (result === errorObject_1.errorObject) {
                    subject.error(errorObject_1.errorObject.e);
                }
            }
            return subject.subscribe(subscriber);
        }
        else {
            return scheduler.schedule(dispatch, 0, { source: this, subscriber: subscriber });
        }
    };
    return BoundNodeCallbackObservable;
}(Observable_1.Observable));
exports.BoundNodeCallbackObservable = BoundNodeCallbackObservable;
function dispatch(state) {
    var self = this;
    var source = state.source, subscriber = state.subscriber;
    // XXX: cast to `any` to access to the private field in `source`.
    var _a = source, callbackFunc = _a.callbackFunc, args = _a.args, scheduler = _a.scheduler;
    var subject = source.subject;
    if (!subject) {
        subject = source.subject = new AsyncSubject_1.AsyncSubject();
        var handler = function handlerFn() {
            var innerArgs = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                innerArgs[_i - 0] = arguments[_i];
            }
            var source = handlerFn.source;
            var selector = source.selector, subject = source.subject;
            var err = innerArgs.shift();
            if (err) {
                subject.error(err);
            }
            else if (selector) {
                var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);
                if (result_2 === errorObject_1.errorObject) {
                    self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));
                }
                else {
                    self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));
                }
            }
            else {
                var value = innerArgs.length === 1 ? innerArgs[0] : innerArgs;
                self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));
            }
        };
        // use named function to pass values in without closure
        handler.source = source;
        var result = tryCatch_1.tryCatch(callbackFunc).apply(this, args.concat(handler));
        if (result === errorObject_1.errorObject) {
            subject.error(errorObject_1.errorObject.e);
        }
    }
    self.add(subject.subscribe(subscriber));
}
function dispatchNext(arg) {
    var value = arg.value, subject = arg.subject;
    subject.next(value);
    subject.complete();
}
function dispatchError(arg) {
    var err = arg.err, subject = arg.subject;
    subject.error(err);
}
//# sourceMappingURL=BoundNodeCallbackObservable.js.map

/***/ },
/* 1091 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(13);
var subscribeToResult_1 = __webpack_require__(144);
var OuterSubscriber_1 = __webpack_require__(143);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var DeferObservable = (function (_super) {
    __extends(DeferObservable, _super);
    function DeferObservable(observableFactory) {
        _super.call(this);
        this.observableFactory = observableFactory;
    }
    /**
     * Creates an Observable that, on subscribe, calls an Observable factory to
     * make an Observable for each new Observer.
     *
     * <span class="informal">Creates the Observable lazily, that is, only when it
     * is subscribed.
     * </span>
     *
     * <img src="./img/defer.png" width="100%">
     *
     * `defer` allows you to create the Observable only when the Observer
     * subscribes, and create a fresh Observable for each Observer. It waits until
     * an Observer subscribes to it, and then it generates an Observable,
     * typically with an Observable factory function. It does this afresh for each
     * subscriber, so although each subscriber may think it is subscribing to the
     * same Observable, in fact each subscriber gets its own individual
     * Observable.
     *
     * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>
     * var clicksOrInterval = Rx.Observable.defer(function () {
     *   if (Math.random() > 0.5) {
     *     return Rx.Observable.fromEvent(document, 'click');
     *   } else {
     *     return Rx.Observable.interval(1000);
     *   }
     * });
     * clicksOrInterval.subscribe(x => console.log(x));
     *
     * @see {@link create}
     *
     * @param {function(): Observable|Promise} observableFactory The Observable
     * factory function to invoke for each Observer that subscribes to the output
     * Observable. May also return a Promise, which will be converted on the fly
     * to an Observable.
     * @return {Observable} An Observable whose Observers' subscriptions trigger
     * an invocation of the given Observable factory function.
     * @static true
     * @name defer
     * @owner Observable
     */
    DeferObservable.create = function (observableFactory) {
        return new DeferObservable(observableFactory);
    };
    DeferObservable.prototype._subscribe = function (subscriber) {
        return new DeferSubscriber(subscriber, this.observableFactory);
    };
    return DeferObservable;
}(Observable_1.Observable));
exports.DeferObservable = DeferObservable;
var DeferSubscriber = (function (_super) {
    __extends(DeferSubscriber, _super);
    function DeferSubscriber(destination, factory) {
        _super.call(this, destination);
        this.factory = factory;
        this.tryDefer();
    }
    DeferSubscriber.prototype.tryDefer = function () {
        try {
            this._callFactory();
        }
        catch (err) {
            this._error(err);
        }
    };
    DeferSubscriber.prototype._callFactory = function () {
        var result = this.factory();
        if (result) {
            this.add(subscribeToResult_1.subscribeToResult(this, result));
        }
    };
    return DeferSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=DeferObservable.js.map

/***/ },
/* 1092 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(13);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ErrorObservable = (function (_super) {
    __extends(ErrorObservable, _super);
    function ErrorObservable(error, scheduler) {
        _super.call(this);
        this.error = error;
        this.scheduler = scheduler;
    }
    /**
     * Creates an Observable that emits no items to the Observer and immediately
     * emits an error notification.
     *
     * <span class="informal">Just emits 'error', and nothing else.
     * </span>
     *
     * <img src="./img/throw.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that only
     * emits the error notification. It can be used for composing with other
     * Observables, such as in a {@link mergeMap}.
     *
     * @example <caption>Emit the number 7, then emit an error.</caption>
     * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     * @example <caption>Map and flattens numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>
     * var interval = Rx.Observable.interval(1000);
     * var result = interval.mergeMap(x =>
     *   x === 13 ?
     *     Rx.Observable.throw('Thirteens are bad') :
     *     Rx.Observable.of('a', 'b', 'c')
     * );
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     * @see {@link create}
     * @see {@link empty}
     * @see {@link never}
     * @see {@link of}
     *
     * @param {any} error The particular Error to pass to the error notification.
     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling
     * the emission of the error notification.
     * @return {Observable} An error Observable: emits only the error notification
     * using the given error argument.
     * @static true
     * @name throw
     * @owner Observable
     */
    ErrorObservable.create = function (error, scheduler) {
        return new ErrorObservable(error, scheduler);
    };
    ErrorObservable.dispatch = function (arg) {
        var error = arg.error, subscriber = arg.subscriber;
        subscriber.error(error);
    };
    ErrorObservable.prototype._subscribe = function (subscriber) {
        var error = this.error;
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(ErrorObservable.dispatch, 0, {
                error: error, subscriber: subscriber
            });
        }
        else {
            subscriber.error(error);
        }
    };
    return ErrorObservable;
}(Observable_1.Observable));
exports.ErrorObservable = ErrorObservable;
//# sourceMappingURL=ErrorObservable.js.map

/***/ },
/* 1093 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(13);
var EmptyObservable_1 = __webpack_require__(233);
var isArray_1 = __webpack_require__(146);
var subscribeToResult_1 = __webpack_require__(144);
var OuterSubscriber_1 = __webpack_require__(143);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ForkJoinObservable = (function (_super) {
    __extends(ForkJoinObservable, _super);
    function ForkJoinObservable(sources, resultSelector) {
        _super.call(this);
        this.sources = sources;
        this.resultSelector = resultSelector;
    }
    /* tslint:enable:max-line-length */
    /**
     * @param sources
     * @return {any}
     * @static true
     * @name forkJoin
     * @owner Observable
     */
    ForkJoinObservable.create = function () {
        var sources = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            sources[_i - 0] = arguments[_i];
        }
        if (sources === null || arguments.length === 0) {
            return new EmptyObservable_1.EmptyObservable();
        }
        var resultSelector = null;
        if (typeof sources[sources.length - 1] === 'function') {
            resultSelector = sources.pop();
        }
        // if the first and only other argument besides the resultSelector is an array
        // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`
        if (sources.length === 1 && isArray_1.isArray(sources[0])) {
            sources = sources[0];
        }
        if (sources.length === 0) {
            return new EmptyObservable_1.EmptyObservable();
        }
        return new ForkJoinObservable(sources, resultSelector);
    };
    ForkJoinObservable.prototype._subscribe = function (subscriber) {
        return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);
    };
    return ForkJoinObservable;
}(Observable_1.Observable));
exports.ForkJoinObservable = ForkJoinObservable;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ForkJoinSubscriber = (function (_super) {
    __extends(ForkJoinSubscriber, _super);
    function ForkJoinSubscriber(destination, sources, resultSelector) {
        _super.call(this, destination);
        this.sources = sources;
        this.resultSelector = resultSelector;
        this.completed = 0;
        this.haveValues = 0;
        var len = sources.length;
        this.total = len;
        this.values = new Array(len);
        for (var i = 0; i < len; i++) {
            var source = sources[i];
            var innerSubscription = subscribeToResult_1.subscribeToResult(this, source, null, i);
            if (innerSubscription) {
                innerSubscription.outerIndex = i;
                this.add(innerSubscription);
            }
        }
    }
    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.values[outerIndex] = innerValue;
        if (!innerSub._hasValue) {
            innerSub._hasValue = true;
            this.haveValues++;
        }
    };
    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {
        var destination = this.destination;
        var _a = this, haveValues = _a.haveValues, resultSelector = _a.resultSelector, values = _a.values;
        var len = values.length;
        if (!innerSub._hasValue) {
            destination.complete();
            return;
        }
        this.completed++;
        if (this.completed !== len) {
            return;
        }
        if (haveValues === len) {
            var value = resultSelector ? resultSelector.apply(this, values) : values;
            destination.next(value);
        }
        destination.complete();
    };
    return ForkJoinSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=ForkJoinObservable.js.map

/***/ },
/* 1094 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(13);
var tryCatch_1 = __webpack_require__(370);
var isFunction_1 = __webpack_require__(241);
var errorObject_1 = __webpack_require__(231);
var Subscription_1 = __webpack_require__(145);
function isNodeStyleEventEmmitter(sourceObj) {
    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';
}
function isJQueryStyleEventEmitter(sourceObj) {
    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';
}
function isNodeList(sourceObj) {
    return !!sourceObj && sourceObj.toString() === '[object NodeList]';
}
function isHTMLCollection(sourceObj) {
    return !!sourceObj && sourceObj.toString() === '[object HTMLCollection]';
}
function isEventTarget(sourceObj) {
    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';
}
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var FromEventObservable = (function (_super) {
    __extends(FromEventObservable, _super);
    function FromEventObservable(sourceObj, eventName, selector, options) {
        _super.call(this);
        this.sourceObj = sourceObj;
        this.eventName = eventName;
        this.selector = selector;
        this.options = options;
    }
    /* tslint:enable:max-line-length */
    /**
     * Creates an Observable that emits events of a specific type coming from the
     * given event target.
     *
     * <span class="informal">Creates an Observable from DOM events, or Node
     * EventEmitter events or others.</span>
     *
     * <img src="./img/fromEvent.png" width="100%">
     *
     * Creates an Observable by attaching an event listener to an "event target",
     * which may be an object with `addEventListener` and `removeEventListener`,
     * a Node.js EventEmitter, a jQuery style EventEmitter, a NodeList from the
     * DOM, or an HTMLCollection from the DOM. The event handler is attached when
     * the output Observable is subscribed, and removed when the Subscription is
     * unsubscribed.
     *
     * @example <caption>Emits clicks happening on the DOM document</caption>
     * var clicks = Rx.Observable.fromEvent(document, 'click');
     * clicks.subscribe(x => console.log(x));
     *
     * @see {@link from}
     * @see {@link fromEventPattern}
     *
     * @param {EventTargetLike} target The DOMElement, event target, Node.js
     * EventEmitter, NodeList or HTMLCollection to attach the event handler to.
     * @param {string} eventName The event name of interest, being emitted by the
     * `target`.
     * @parm {EventListenerOptions} [options] Options to pass through to addEventListener
     * @param {SelectorMethodSignature<T>} [selector] An optional function to
     * post-process results. It takes the arguments from the event handler and
     * should return a single value.
     * @return {Observable<T>}
     * @static true
     * @name fromEvent
     * @owner Observable
     */
    FromEventObservable.create = function (target, eventName, options, selector) {
        if (isFunction_1.isFunction(options)) {
            selector = options;
            options = undefined;
        }
        return new FromEventObservable(target, eventName, selector, options);
    };
    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {
        var unsubscribe;
        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {
            for (var i = 0, len = sourceObj.length; i < len; i++) {
                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);
            }
        }
        else if (isEventTarget(sourceObj)) {
            var source_1 = sourceObj;
            sourceObj.addEventListener(eventName, handler, options);
            unsubscribe = function () { return source_1.removeEventListener(eventName, handler); };
        }
        else if (isJQueryStyleEventEmitter(sourceObj)) {
            var source_2 = sourceObj;
            sourceObj.on(eventName, handler);
            unsubscribe = function () { return source_2.off(eventName, handler); };
        }
        else if (isNodeStyleEventEmmitter(sourceObj)) {
            var source_3 = sourceObj;
            sourceObj.addListener(eventName, handler);
            unsubscribe = function () { return source_3.removeListener(eventName, handler); };
        }
        subscriber.add(new Subscription_1.Subscription(unsubscribe));
    };
    FromEventObservable.prototype._subscribe = function (subscriber) {
        var sourceObj = this.sourceObj;
        var eventName = this.eventName;
        var options = this.options;
        var selector = this.selector;
        var handler = selector ? function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            var result = tryCatch_1.tryCatch(selector).apply(void 0, args);
            if (result === errorObject_1.errorObject) {
                subscriber.error(errorObject_1.errorObject.e);
            }
            else {
                subscriber.next(result);
            }
        } : function (e) { return subscriber.next(e); };
        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);
    };
    return FromEventObservable;
}(Observable_1.Observable));
exports.FromEventObservable = FromEventObservable;
//# sourceMappingURL=FromEventObservable.js.map

/***/ },
/* 1095 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(13);
var Subscription_1 = __webpack_require__(145);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var FromEventPatternObservable = (function (_super) {
    __extends(FromEventPatternObservable, _super);
    function FromEventPatternObservable(addHandler, removeHandler, selector) {
        _super.call(this);
        this.addHandler = addHandler;
        this.removeHandler = removeHandler;
        this.selector = selector;
    }
    /**
     * Creates an Observable from an API based on addHandler/removeHandler
     * functions.
     *
     * <span class="informal">Converts any addHandler/removeHandler API to an
     * Observable.</span>
     *
     * <img src="./img/fromEventPattern.png" width="100%">
     *
     * Creates an Observable by using the `addHandler` and `removeHandler`
     * functions to add and remove the handlers, with an optional selector
     * function to project the event arguments to a result. The `addHandler` is
     * called when the output Observable is subscribed, and `removeHandler` is
     * called when the Subscription is unsubscribed.
     *
     * @example <caption>Emits clicks happening on the DOM document</caption>
     * function addClickHandler(handler) {
     *   document.addEventListener('click', handler);
     * }
     *
     * function removeClickHandler(handler) {
     *   document.removeEventListener('click', handler);
     * }
     *
     * var clicks = Rx.Observable.fromEventPattern(
     *   addClickHandler,
     *   removeClickHandler
     * );
     * clicks.subscribe(x => console.log(x));
     *
     * @see {@link from}
     * @see {@link fromEvent}
     *
     * @param {function(handler: Function): any} addHandler A function that takes
     * a `handler` function as argument and attaches it somehow to the actual
     * source of events.
     * @param {function(handler: Function): void} removeHandler A function that
     * takes a `handler` function as argument and removes it in case it was
     * previously attached using `addHandler`.
     * @param {function(...args: any): T} [selector] An optional function to
     * post-process results. It takes the arguments from the event handler and
     * should return a single value.
     * @return {Observable<T>}
     * @static true
     * @name fromEventPattern
     * @owner Observable
     */
    FromEventPatternObservable.create = function (addHandler, removeHandler, selector) {
        return new FromEventPatternObservable(addHandler, removeHandler, selector);
    };
    FromEventPatternObservable.prototype._subscribe = function (subscriber) {
        var _this = this;
        var removeHandler = this.removeHandler;
        var handler = !!this.selector ? function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            _this._callSelector(subscriber, args);
        } : function (e) { subscriber.next(e); };
        this._callAddHandler(handler, subscriber);
        subscriber.add(new Subscription_1.Subscription(function () {
            //TODO: determine whether or not to forward to error handler
            removeHandler(handler);
        }));
    };
    FromEventPatternObservable.prototype._callSelector = function (subscriber, args) {
        try {
            var result = this.selector.apply(this, args);
            subscriber.next(result);
        }
        catch (e) {
            subscriber.error(e);
        }
    };
    FromEventPatternObservable.prototype._callAddHandler = function (handler, errorSubscriber) {
        try {
            this.addHandler(handler);
        }
        catch (e) {
            errorSubscriber.error(e);
        }
    };
    return FromEventPatternObservable;
}(Observable_1.Observable));
exports.FromEventPatternObservable = FromEventPatternObservable;
//# sourceMappingURL=FromEventPatternObservable.js.map

/***/ },
/* 1096 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(13);
var isScheduler_1 = __webpack_require__(372);
var selfSelector = function (value) { return value; };
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var GenerateObservable = (function (_super) {
    __extends(GenerateObservable, _super);
    function GenerateObservable(initialState, condition, iterate, resultSelector, scheduler) {
        _super.call(this);
        this.initialState = initialState;
        this.condition = condition;
        this.iterate = iterate;
        this.resultSelector = resultSelector;
        this.scheduler = scheduler;
    }
    GenerateObservable.create = function (initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {
        if (arguments.length == 1) {
            return new GenerateObservable(initialStateOrOptions.initialState, initialStateOrOptions.condition, initialStateOrOptions.iterate, initialStateOrOptions.resultSelector || selfSelector, initialStateOrOptions.scheduler);
        }
        if (resultSelectorOrObservable === undefined || isScheduler_1.isScheduler(resultSelectorOrObservable)) {
            return new GenerateObservable(initialStateOrOptions, condition, iterate, selfSelector, resultSelectorOrObservable);
        }
        return new GenerateObservable(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler);
    };
    GenerateObservable.prototype._subscribe = function (subscriber) {
        var state = this.initialState;
        if (this.scheduler) {
            return this.scheduler.schedule(GenerateObservable.dispatch, 0, {
                subscriber: subscriber,
                iterate: this.iterate,
                condition: this.condition,
                resultSelector: this.resultSelector,
                state: state });
        }
        var _a = this, condition = _a.condition, resultSelector = _a.resultSelector, iterate = _a.iterate;
        do {
            if (condition) {
                var conditionResult = void 0;
                try {
                    conditionResult = condition(state);
                }
                catch (err) {
                    subscriber.error(err);
                    return;
                }
                if (!conditionResult) {
                    subscriber.complete();
                    break;
                }
            }
            var value = void 0;
            try {
                value = resultSelector(state);
            }
            catch (err) {
                subscriber.error(err);
                return;
            }
            subscriber.next(value);
            if (subscriber.closed) {
                break;
            }
            try {
                state = iterate(state);
            }
            catch (err) {
                subscriber.error(err);
                return;
            }
        } while (true);
    };
    GenerateObservable.dispatch = function (state) {
        var subscriber = state.subscriber, condition = state.condition;
        if (subscriber.closed) {
            return;
        }
        if (state.needIterate) {
            try {
                state.state = state.iterate(state.state);
            }
            catch (err) {
                subscriber.error(err);
                return;
            }
        }
        else {
            state.needIterate = true;
        }
        if (condition) {
            var conditionResult = void 0;
            try {
                conditionResult = condition(state.state);
            }
            catch (err) {
                subscriber.error(err);
                return;
            }
            if (!conditionResult) {
                subscriber.complete();
                return;
            }
            if (subscriber.closed) {
                return;
            }
        }
        var value;
        try {
            value = state.resultSelector(state.state);
        }
        catch (err) {
            subscriber.error(err);
            return;
        }
        if (subscriber.closed) {
            return;
        }
        subscriber.next(value);
        if (subscriber.closed) {
            return;
        }
        return this.schedule(state);
    };
    return GenerateObservable;
}(Observable_1.Observable));
exports.GenerateObservable = GenerateObservable;
//# sourceMappingURL=GenerateObservable.js.map

/***/ },
/* 1097 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(13);
var subscribeToResult_1 = __webpack_require__(144);
var OuterSubscriber_1 = __webpack_require__(143);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var IfObservable = (function (_super) {
    __extends(IfObservable, _super);
    function IfObservable(condition, thenSource, elseSource) {
        _super.call(this);
        this.condition = condition;
        this.thenSource = thenSource;
        this.elseSource = elseSource;
    }
    IfObservable.create = function (condition, thenSource, elseSource) {
        return new IfObservable(condition, thenSource, elseSource);
    };
    IfObservable.prototype._subscribe = function (subscriber) {
        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;
        return new IfSubscriber(subscriber, condition, thenSource, elseSource);
    };
    return IfObservable;
}(Observable_1.Observable));
exports.IfObservable = IfObservable;
var IfSubscriber = (function (_super) {
    __extends(IfSubscriber, _super);
    function IfSubscriber(destination, condition, thenSource, elseSource) {
        _super.call(this, destination);
        this.condition = condition;
        this.thenSource = thenSource;
        this.elseSource = elseSource;
        this.tryIf();
    }
    IfSubscriber.prototype.tryIf = function () {
        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;
        var result;
        try {
            result = condition();
            var source = result ? thenSource : elseSource;
            if (source) {
                this.add(subscribeToResult_1.subscribeToResult(this, source));
            }
            else {
                this._complete();
            }
        }
        catch (err) {
            this._error(err);
        }
    };
    return IfSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=IfObservable.js.map

/***/ },
/* 1098 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isNumeric_1 = __webpack_require__(723);
var Observable_1 = __webpack_require__(13);
var async_1 = __webpack_require__(666);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var IntervalObservable = (function (_super) {
    __extends(IntervalObservable, _super);
    function IntervalObservable(period, scheduler) {
        if (period === void 0) { period = 0; }
        if (scheduler === void 0) { scheduler = async_1.async; }
        _super.call(this);
        this.period = period;
        this.scheduler = scheduler;
        if (!isNumeric_1.isNumeric(period) || period < 0) {
            this.period = 0;
        }
        if (!scheduler || typeof scheduler.schedule !== 'function') {
            this.scheduler = async_1.async;
        }
    }
    /**
     * Creates an Observable that emits sequential numbers every specified
     * interval of time, on a specified Scheduler.
     *
     * <span class="informal">Emits incremental numbers periodically in time.
     * </span>
     *
     * <img src="./img/interval.png" width="100%">
     *
     * `interval` returns an Observable that emits an infinite sequence of
     * ascending integers, with a constant interval of time of your choosing
     * between those emissions. The first emission is not sent immediately, but
     * only after the first period has passed. By default, this operator uses the
     * `async` Scheduler to provide a notion of time, but you may pass any
     * Scheduler to it.
     *
     * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>
     * var numbers = Rx.Observable.interval(1000);
     * numbers.subscribe(x => console.log(x));
     *
     * @see {@link timer}
     * @see {@link delay}
     *
     * @param {number} [period=0] The interval size in milliseconds (by default)
     * or the time unit determined by the scheduler's clock.
     * @param {Scheduler} [scheduler=async] The Scheduler to use for scheduling
     * the emission of values, and providing a notion of "time".
     * @return {Observable} An Observable that emits a sequential number each time
     * interval.
     * @static true
     * @name interval
     * @owner Observable
     */
    IntervalObservable.create = function (period, scheduler) {
        if (period === void 0) { period = 0; }
        if (scheduler === void 0) { scheduler = async_1.async; }
        return new IntervalObservable(period, scheduler);
    };
    IntervalObservable.dispatch = function (state) {
        var index = state.index, subscriber = state.subscriber, period = state.period;
        subscriber.next(index);
        if (subscriber.closed) {
            return;
        }
        state.index += 1;
        this.schedule(state, period);
    };
    IntervalObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var period = this.period;
        var scheduler = this.scheduler;
        subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {
            index: index, subscriber: subscriber, period: period
        }));
    };
    return IntervalObservable;
}(Observable_1.Observable));
exports.IntervalObservable = IntervalObservable;
//# sourceMappingURL=IntervalObservable.js.map

/***/ },
/* 1099 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(13);
var noop_1 = __webpack_require__(802);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var NeverObservable = (function (_super) {
    __extends(NeverObservable, _super);
    function NeverObservable() {
        _super.call(this);
    }
    /**
     * Creates an Observable that emits no items to the Observer.
     *
     * <span class="informal">An Observable that never emits anything.</span>
     *
     * <img src="./img/never.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that emits
     * neither values nor errors nor the completion notification. It can be used
     * for testing purposes or for composing with other Observables. Please not
     * that by never emitting a complete notification, this Observable keeps the
     * subscription from being disposed automatically. Subscriptions need to be
     * manually disposed.
     *
     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>
     * function info() {
     *   console.log('Will not be called');
     * }
     * var result = Rx.Observable.never().startWith(7);
     * result.subscribe(x => console.log(x), info, info);
     *
     * @see {@link create}
     * @see {@link empty}
     * @see {@link of}
     * @see {@link throw}
     *
     * @return {Observable} A "never" Observable: never emits anything.
     * @static true
     * @name never
     * @owner Observable
     */
    NeverObservable.create = function () {
        return new NeverObservable();
    };
    NeverObservable.prototype._subscribe = function (subscriber) {
        noop_1.noop();
    };
    return NeverObservable;
}(Observable_1.Observable));
exports.NeverObservable = NeverObservable;
//# sourceMappingURL=NeverObservable.js.map

/***/ },
/* 1100 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(13);
function dispatch(state) {
    var obj = state.obj, keys = state.keys, length = state.length, index = state.index, subscriber = state.subscriber;
    if (index === length) {
        subscriber.complete();
        return;
    }
    var key = keys[index];
    subscriber.next([key, obj[key]]);
    state.index = index + 1;
    this.schedule(state);
}
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var PairsObservable = (function (_super) {
    __extends(PairsObservable, _super);
    function PairsObservable(obj, scheduler) {
        _super.call(this);
        this.obj = obj;
        this.scheduler = scheduler;
        this.keys = Object.keys(obj);
    }
    /**
     * Convert an object into an observable sequence of [key, value] pairs
     * using an optional Scheduler to enumerate the object.
     *
     * @example <caption>Converts a javascript object to an Observable</caption>
     * var obj = {
     *   foo: 42,
     *   bar: 56,
     *   baz: 78
     * };
     *
     * var source = Rx.Observable.pairs(obj);
     *
     * var subscription = source.subscribe(
     *   function (x) {
     *     console.log('Next: %s', x);
     *   },
     *   function (err) {
     *     console.log('Error: %s', err);
     *   },
     *   function () {
     *     console.log('Completed');
     *   });
     *
     * @param {Object} obj The object to inspect and turn into an
     * Observable sequence.
     * @param {Scheduler} [scheduler] An optional Scheduler to run the
     * enumeration of the input sequence on.
     * @returns {(Observable<Array<string | T>>)} An observable sequence of
     * [key, value] pairs from the object.
     */
    PairsObservable.create = function (obj, scheduler) {
        return new PairsObservable(obj, scheduler);
    };
    PairsObservable.prototype._subscribe = function (subscriber) {
        var _a = this, keys = _a.keys, scheduler = _a.scheduler;
        var length = keys.length;
        if (scheduler) {
            return scheduler.schedule(dispatch, 0, {
                obj: this.obj, keys: keys, length: length, index: 0, subscriber: subscriber
            });
        }
        else {
            for (var idx = 0; idx < length; idx++) {
                var key = keys[idx];
                subscriber.next([key, this.obj[key]]);
            }
            subscriber.complete();
        }
    };
    return PairsObservable;
}(Observable_1.Observable));
exports.PairsObservable = PairsObservable;
//# sourceMappingURL=PairsObservable.js.map

/***/ },
/* 1101 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(13);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var RangeObservable = (function (_super) {
    __extends(RangeObservable, _super);
    function RangeObservable(start, count, scheduler) {
        _super.call(this);
        this.start = start;
        this._count = count;
        this.scheduler = scheduler;
    }
    /**
     * Creates an Observable that emits a sequence of numbers within a specified
     * range.
     *
     * <span class="informal">Emits a sequence of numbers in a range.</span>
     *
     * <img src="./img/range.png" width="100%">
     *
     * `range` operator emits a range of sequential integers, in order, where you
     * select the `start` of the range and its `length`. By default, uses no
     * Scheduler and just delivers the notifications synchronously, but may use
     * an optional Scheduler to regulate those deliveries.
     *
     * @example <caption>Emits the numbers 1 to 10</caption>
     * var numbers = Rx.Observable.range(1, 10);
     * numbers.subscribe(x => console.log(x));
     *
     * @see {@link timer}
     * @see {@link interval}
     *
     * @param {number} [start=0] The value of the first integer in the sequence.
     * @param {number} [count=0] The number of sequential integers to generate.
     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling
     * the emissions of the notifications.
     * @return {Observable} An Observable of numbers that emits a finite range of
     * sequential integers.
     * @static true
     * @name range
     * @owner Observable
     */
    RangeObservable.create = function (start, count, scheduler) {
        if (start === void 0) { start = 0; }
        if (count === void 0) { count = 0; }
        return new RangeObservable(start, count, scheduler);
    };
    RangeObservable.dispatch = function (state) {
        var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;
        if (index >= count) {
            subscriber.complete();
            return;
        }
        subscriber.next(start);
        if (subscriber.closed) {
            return;
        }
        state.index = index + 1;
        state.start = start + 1;
        this.schedule(state);
    };
    RangeObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var start = this.start;
        var count = this._count;
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(RangeObservable.dispatch, 0, {
                index: index, count: count, start: start, subscriber: subscriber
            });
        }
        else {
            do {
                if (index++ >= count) {
                    subscriber.complete();
                    break;
                }
                subscriber.next(start++);
                if (subscriber.closed) {
                    break;
                }
            } while (true);
        }
    };
    return RangeObservable;
}(Observable_1.Observable));
exports.RangeObservable = RangeObservable;
//# sourceMappingURL=RangeObservable.js.map

/***/ },
/* 1102 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(13);
var asap_1 = __webpack_require__(797);
var isNumeric_1 = __webpack_require__(723);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var SubscribeOnObservable = (function (_super) {
    __extends(SubscribeOnObservable, _super);
    function SubscribeOnObservable(source, delayTime, scheduler) {
        if (delayTime === void 0) { delayTime = 0; }
        if (scheduler === void 0) { scheduler = asap_1.asap; }
        _super.call(this);
        this.source = source;
        this.delayTime = delayTime;
        this.scheduler = scheduler;
        if (!isNumeric_1.isNumeric(delayTime) || delayTime < 0) {
            this.delayTime = 0;
        }
        if (!scheduler || typeof scheduler.schedule !== 'function') {
            this.scheduler = asap_1.asap;
        }
    }
    SubscribeOnObservable.create = function (source, delay, scheduler) {
        if (delay === void 0) { delay = 0; }
        if (scheduler === void 0) { scheduler = asap_1.asap; }
        return new SubscribeOnObservable(source, delay, scheduler);
    };
    SubscribeOnObservable.dispatch = function (arg) {
        var source = arg.source, subscriber = arg.subscriber;
        return source.subscribe(subscriber);
    };
    SubscribeOnObservable.prototype._subscribe = function (subscriber) {
        var delay = this.delayTime;
        var source = this.source;
        var scheduler = this.scheduler;
        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {
            source: source, subscriber: subscriber
        });
    };
    return SubscribeOnObservable;
}(Observable_1.Observable));
exports.SubscribeOnObservable = SubscribeOnObservable;
//# sourceMappingURL=SubscribeOnObservable.js.map

/***/ },
/* 1103 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isNumeric_1 = __webpack_require__(723);
var Observable_1 = __webpack_require__(13);
var async_1 = __webpack_require__(666);
var isScheduler_1 = __webpack_require__(372);
var isDate_1 = __webpack_require__(700);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var TimerObservable = (function (_super) {
    __extends(TimerObservable, _super);
    function TimerObservable(dueTime, period, scheduler) {
        if (dueTime === void 0) { dueTime = 0; }
        _super.call(this);
        this.period = -1;
        this.dueTime = 0;
        if (isNumeric_1.isNumeric(period)) {
            this.period = Number(period) < 1 && 1 || Number(period);
        }
        else if (isScheduler_1.isScheduler(period)) {
            scheduler = period;
        }
        if (!isScheduler_1.isScheduler(scheduler)) {
            scheduler = async_1.async;
        }
        this.scheduler = scheduler;
        this.dueTime = isDate_1.isDate(dueTime) ?
            (+dueTime - this.scheduler.now()) :
            dueTime;
    }
    /**
     * Creates an Observable that starts emitting after an `initialDelay` and
     * emits ever increasing numbers after each `period` of time thereafter.
     *
     * <span class="informal">Its like {@link interval}, but you can specify when
     * should the emissions start.</span>
     *
     * <img src="./img/timer.png" width="100%">
     *
     * `timer` returns an Observable that emits an infinite sequence of ascending
     * integers, with a constant interval of time, `period` of your choosing
     * between those emissions. The first emission happens after the specified
     * `initialDelay`. The initial delay may be a {@link Date}. By default, this
     * operator uses the `async` Scheduler to provide a notion of time, but you
     * may pass any Scheduler to it. If `period` is not specified, the output
     * Observable emits only one value, `0`. Otherwise, it emits an infinite
     * sequence.
     *
     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>
     * var numbers = Rx.Observable.timer(3000, 1000);
     * numbers.subscribe(x => console.log(x));
     *
     * @example <caption>Emits one number after five seconds</caption>
     * var numbers = Rx.Observable.timer(5000);
     * numbers.subscribe(x => console.log(x));
     *
     * @see {@link interval}
     * @see {@link delay}
     *
     * @param {number|Date} initialDelay The initial delay time to wait before
     * emitting the first value of `0`.
     * @param {number} [period] The period of time between emissions of the
     * subsequent numbers.
     * @param {Scheduler} [scheduler=async] The Scheduler to use for scheduling
     * the emission of values, and providing a notion of "time".
     * @return {Observable} An Observable that emits a `0` after the
     * `initialDelay` and ever increasing numbers after each `period` of time
     * thereafter.
     * @static true
     * @name timer
     * @owner Observable
     */
    TimerObservable.create = function (initialDelay, period, scheduler) {
        if (initialDelay === void 0) { initialDelay = 0; }
        return new TimerObservable(initialDelay, period, scheduler);
    };
    TimerObservable.dispatch = function (state) {
        var index = state.index, period = state.period, subscriber = state.subscriber;
        var action = this;
        subscriber.next(index);
        if (subscriber.closed) {
            return;
        }
        else if (period === -1) {
            return subscriber.complete();
        }
        state.index = index + 1;
        action.schedule(state, period);
    };
    TimerObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;
        return scheduler.schedule(TimerObservable.dispatch, dueTime, {
            index: index, period: period, subscriber: subscriber
        });
    };
    return TimerObservable;
}(Observable_1.Observable));
exports.TimerObservable = TimerObservable;
//# sourceMappingURL=TimerObservable.js.map

/***/ },
/* 1104 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(13);
var subscribeToResult_1 = __webpack_require__(144);
var OuterSubscriber_1 = __webpack_require__(143);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var UsingObservable = (function (_super) {
    __extends(UsingObservable, _super);
    function UsingObservable(resourceFactory, observableFactory) {
        _super.call(this);
        this.resourceFactory = resourceFactory;
        this.observableFactory = observableFactory;
    }
    UsingObservable.create = function (resourceFactory, observableFactory) {
        return new UsingObservable(resourceFactory, observableFactory);
    };
    UsingObservable.prototype._subscribe = function (subscriber) {
        var _a = this, resourceFactory = _a.resourceFactory, observableFactory = _a.observableFactory;
        var resource;
        try {
            resource = resourceFactory();
            return new UsingSubscriber(subscriber, resource, observableFactory);
        }
        catch (err) {
            subscriber.error(err);
        }
    };
    return UsingObservable;
}(Observable_1.Observable));
exports.UsingObservable = UsingObservable;
var UsingSubscriber = (function (_super) {
    __extends(UsingSubscriber, _super);
    function UsingSubscriber(destination, resource, observableFactory) {
        _super.call(this, destination);
        this.resource = resource;
        this.observableFactory = observableFactory;
        destination.add(resource);
        this.tryUse();
    }
    UsingSubscriber.prototype.tryUse = function () {
        try {
            var source = this.observableFactory.call(this, this.resource);
            if (source) {
                this.add(subscribeToResult_1.subscribeToResult(this, source));
            }
        }
        catch (err) {
            this._error(err);
        }
    };
    return UsingSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=UsingObservable.js.map

/***/ },
/* 1105 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var BoundCallbackObservable_1 = __webpack_require__(1089);
exports.bindCallback = BoundCallbackObservable_1.BoundCallbackObservable.create;
//# sourceMappingURL=bindCallback.js.map

/***/ },
/* 1106 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var BoundNodeCallbackObservable_1 = __webpack_require__(1090);
exports.bindNodeCallback = BoundNodeCallbackObservable_1.BoundNodeCallbackObservable.create;
//# sourceMappingURL=bindNodeCallback.js.map

/***/ },
/* 1107 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var isScheduler_1 = __webpack_require__(372);
var isArray_1 = __webpack_require__(146);
var ArrayObservable_1 = __webpack_require__(232);
var combineLatest_1 = __webpack_require__(720);
/* tslint:enable:max-line-length */
/**
 * Combines multiple Observables to create an Observable whose values are
 * calculated from the latest values of each of its input Observables.
 *
 * <span class="informal">Whenever any input Observable emits a value, it
 * computes a formula using the latest values from all the inputs, then emits
 * the output of that formula.</span>
 *
 * <img src="./img/combineLatest.png" width="100%">
 *
 * `combineLatest` combines the values from all the Observables passed as
 * arguments. This is done by subscribing to each Observable, in order, and
 * collecting an array of each of the most recent values any time any of the
 * input Observables emits, then either taking that array and passing it as
 * arguments to an optional `project` function and emitting the return value of
 * that, or just emitting the array of recent values directly if there is no
 * `project` function.
 *
 * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>
 * var weight = Rx.Observable.of(70, 72, 76, 79, 75);
 * var height = Rx.Observable.of(1.76, 1.77, 1.78);
 * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));
 * bmi.subscribe(x => console.log('BMI is ' + x));
 *
 * @see {@link combineAll}
 * @see {@link merge}
 * @see {@link withLatestFrom}
 *
 * @param {Observable} observable1 An input Observable to combine with the
 * source Observable.
 * @param {Observable} observable2 An input Observable to combine with the
 * source Observable. More than one input Observables may be given as argument.
 * @param {function} [project] An optional function to project the values from
 * the combined latest values into a new value on the output Observable.
 * @param {Scheduler} [scheduler=null] The Scheduler to use for subscribing to
 * each input Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 * @static true
 * @name combineLatest
 * @owner Observable
 */
function combineLatest() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var project = null;
    var scheduler = null;
    if (isScheduler_1.isScheduler(observables[observables.length - 1])) {
        scheduler = observables.pop();
    }
    if (typeof observables[observables.length - 1] === 'function') {
        project = observables.pop();
    }
    // if the first and only other argument besides the resultSelector is an array
    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`
    if (observables.length === 1 && isArray_1.isArray(observables[0])) {
        observables = observables[0];
    }
    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new combineLatest_1.CombineLatestOperator(project));
}
exports.combineLatest = combineLatest;
//# sourceMappingURL=combineLatest.js.map

/***/ },
/* 1108 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var concat_1 = __webpack_require__(721);
exports.concat = concat_1.concatStatic;
//# sourceMappingURL=concat.js.map

/***/ },
/* 1109 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var DeferObservable_1 = __webpack_require__(1091);
exports.defer = DeferObservable_1.DeferObservable.create;
//# sourceMappingURL=defer.js.map

/***/ },
/* 1110 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(64);
var Subscriber_1 = __webpack_require__(24);
var Observable_1 = __webpack_require__(13);
var Subscription_1 = __webpack_require__(145);
var root_1 = __webpack_require__(46);
var ReplaySubject_1 = __webpack_require__(698);
var tryCatch_1 = __webpack_require__(370);
var errorObject_1 = __webpack_require__(231);
var assign_1 = __webpack_require__(1219);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var WebSocketSubject = (function (_super) {
    __extends(WebSocketSubject, _super);
    function WebSocketSubject(urlConfigOrSource, destination) {
        if (urlConfigOrSource instanceof Observable_1.Observable) {
            _super.call(this, destination, urlConfigOrSource);
        }
        else {
            _super.call(this);
            this.WebSocketCtor = root_1.root.WebSocket;
            this._output = new Subject_1.Subject();
            if (typeof urlConfigOrSource === 'string') {
                this.url = urlConfigOrSource;
            }
            else {
                // WARNING: config object could override important members here.
                assign_1.assign(this, urlConfigOrSource);
            }
            if (!this.WebSocketCtor) {
                throw new Error('no WebSocket constructor can be found');
            }
            this.destination = new ReplaySubject_1.ReplaySubject();
        }
    }
    WebSocketSubject.prototype.resultSelector = function (e) {
        return JSON.parse(e.data);
    };
    /**
     * @param urlConfigOrSource
     * @return {WebSocketSubject}
     * @static true
     * @name webSocket
     * @owner Observable
     */
    WebSocketSubject.create = function (urlConfigOrSource) {
        return new WebSocketSubject(urlConfigOrSource);
    };
    WebSocketSubject.prototype.lift = function (operator) {
        var sock = new WebSocketSubject(this, this.destination);
        sock.operator = operator;
        return sock;
    };
    // TODO: factor this out to be a proper Operator/Subscriber implementation and eliminate closures
    WebSocketSubject.prototype.multiplex = function (subMsg, unsubMsg, messageFilter) {
        var self = this;
        return new Observable_1.Observable(function (observer) {
            var result = tryCatch_1.tryCatch(subMsg)();
            if (result === errorObject_1.errorObject) {
                observer.error(errorObject_1.errorObject.e);
            }
            else {
                self.next(result);
            }
            var subscription = self.subscribe(function (x) {
                var result = tryCatch_1.tryCatch(messageFilter)(x);
                if (result === errorObject_1.errorObject) {
                    observer.error(errorObject_1.errorObject.e);
                }
                else if (result) {
                    observer.next(x);
                }
            }, function (err) { return observer.error(err); }, function () { return observer.complete(); });
            return function () {
                var result = tryCatch_1.tryCatch(unsubMsg)();
                if (result === errorObject_1.errorObject) {
                    observer.error(errorObject_1.errorObject.e);
                }
                else {
                    self.next(result);
                }
                subscription.unsubscribe();
            };
        });
    };
    WebSocketSubject.prototype._connectSocket = function () {
        var _this = this;
        var WebSocketCtor = this.WebSocketCtor;
        var observer = this._output;
        var socket = null;
        try {
            socket = this.protocol ?
                new WebSocketCtor(this.url, this.protocol) :
                new WebSocketCtor(this.url);
            this.socket = socket;
        }
        catch (e) {
            observer.error(e);
            return;
        }
        var subscription = new Subscription_1.Subscription(function () {
            _this.socket = null;
            if (socket && socket.readyState === 1) {
                socket.close();
            }
        });
        socket.onopen = function (e) {
            var openObserver = _this.openObserver;
            if (openObserver) {
                openObserver.next(e);
            }
            var queue = _this.destination;
            _this.destination = Subscriber_1.Subscriber.create(function (x) { return socket.readyState === 1 && socket.send(x); }, function (e) {
                var closingObserver = _this.closingObserver;
                if (closingObserver) {
                    closingObserver.next(undefined);
                }
                if (e && e.code) {
                    socket.close(e.code, e.reason);
                }
                else {
                    observer.error(new TypeError('WebSocketSubject.error must be called with an object with an error code, ' +
                        'and an optional reason: { code: number, reason: string }'));
                }
                _this.destination = new ReplaySubject_1.ReplaySubject();
                _this.socket = null;
            }, function () {
                var closingObserver = _this.closingObserver;
                if (closingObserver) {
                    closingObserver.next(undefined);
                }
                socket.close();
                _this.destination = new ReplaySubject_1.ReplaySubject();
                _this.socket = null;
            });
            if (queue && queue instanceof ReplaySubject_1.ReplaySubject) {
                subscription.add(queue.subscribe(_this.destination));
            }
        };
        socket.onerror = function (e) { return observer.error(e); };
        socket.onclose = function (e) {
            var closeObserver = _this.closeObserver;
            if (closeObserver) {
                closeObserver.next(e);
            }
            if (e.wasClean) {
                observer.complete();
            }
            else {
                observer.error(e);
            }
        };
        socket.onmessage = function (e) {
            var result = tryCatch_1.tryCatch(_this.resultSelector)(e);
            if (result === errorObject_1.errorObject) {
                observer.error(errorObject_1.errorObject.e);
            }
            else {
                observer.next(result);
            }
        };
    };
    WebSocketSubject.prototype._subscribe = function (subscriber) {
        var _this = this;
        var source = this.source;
        if (source) {
            return source.subscribe(subscriber);
        }
        if (!this.socket) {
            this._connectSocket();
        }
        var subscription = new Subscription_1.Subscription();
        subscription.add(this._output.subscribe(subscriber));
        subscription.add(function () {
            var socket = _this.socket;
            if (_this._output.observers.length === 0 && socket && socket.readyState === 1) {
                socket.close();
                _this.socket = null;
            }
        });
        return subscription;
    };
    WebSocketSubject.prototype.unsubscribe = function () {
        var _a = this, source = _a.source, socket = _a.socket;
        if (socket && socket.readyState === 1) {
            socket.close();
            this.socket = null;
        }
        _super.prototype.unsubscribe.call(this);
        if (!source) {
            this.destination = new ReplaySubject_1.ReplaySubject();
        }
    };
    return WebSocketSubject;
}(Subject_1.AnonymousSubject));
exports.WebSocketSubject = WebSocketSubject;
//# sourceMappingURL=WebSocketSubject.js.map

/***/ },
/* 1111 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var AjaxObservable_1 = __webpack_require__(786);
exports.ajax = AjaxObservable_1.AjaxObservable.create;
//# sourceMappingURL=ajax.js.map

/***/ },
/* 1112 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var WebSocketSubject_1 = __webpack_require__(1110);
exports.webSocket = WebSocketSubject_1.WebSocketSubject.create;
//# sourceMappingURL=webSocket.js.map

/***/ },
/* 1113 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var EmptyObservable_1 = __webpack_require__(233);
exports.empty = EmptyObservable_1.EmptyObservable.create;
//# sourceMappingURL=empty.js.map

/***/ },
/* 1114 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var ForkJoinObservable_1 = __webpack_require__(1093);
exports.forkJoin = ForkJoinObservable_1.ForkJoinObservable.create;
//# sourceMappingURL=forkJoin.js.map

/***/ },
/* 1115 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var FromEventObservable_1 = __webpack_require__(1094);
exports.fromEvent = FromEventObservable_1.FromEventObservable.create;
//# sourceMappingURL=fromEvent.js.map

/***/ },
/* 1116 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var FromEventPatternObservable_1 = __webpack_require__(1095);
exports.fromEventPattern = FromEventPatternObservable_1.FromEventPatternObservable.create;
//# sourceMappingURL=fromEventPattern.js.map

/***/ },
/* 1117 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var IfObservable_1 = __webpack_require__(1097);
exports._if = IfObservable_1.IfObservable.create;
//# sourceMappingURL=if.js.map

/***/ },
/* 1118 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var IntervalObservable_1 = __webpack_require__(1098);
exports.interval = IntervalObservable_1.IntervalObservable.create;
//# sourceMappingURL=interval.js.map

/***/ },
/* 1119 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var merge_1 = __webpack_require__(790);
exports.merge = merge_1.mergeStatic;
//# sourceMappingURL=merge.js.map

/***/ },
/* 1120 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var NeverObservable_1 = __webpack_require__(1099);
exports.never = NeverObservable_1.NeverObservable.create;
//# sourceMappingURL=never.js.map

/***/ },
/* 1121 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var PairsObservable_1 = __webpack_require__(1100);
exports.pairs = PairsObservable_1.PairsObservable.create;
//# sourceMappingURL=pairs.js.map

/***/ },
/* 1122 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var RangeObservable_1 = __webpack_require__(1101);
exports.range = RangeObservable_1.RangeObservable.create;
//# sourceMappingURL=range.js.map

/***/ },
/* 1123 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var ErrorObservable_1 = __webpack_require__(1092);
exports._throw = ErrorObservable_1.ErrorObservable.create;
//# sourceMappingURL=throw.js.map

/***/ },
/* 1124 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var TimerObservable_1 = __webpack_require__(1103);
exports.timer = TimerObservable_1.TimerObservable.create;
//# sourceMappingURL=timer.js.map

/***/ },
/* 1125 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var UsingObservable_1 = __webpack_require__(1104);
exports.using = UsingObservable_1.UsingObservable.create;
//# sourceMappingURL=using.js.map

/***/ },
/* 1126 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var zip_1 = __webpack_require__(722);
exports.zip = zip_1.zipStatic;
//# sourceMappingURL=zip.js.map

/***/ },
/* 1127 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var tryCatch_1 = __webpack_require__(370);
var errorObject_1 = __webpack_require__(231);
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Ignores source values for a duration determined by another Observable, then
 * emits the most recent value from the source Observable, then repeats this
 * process.
 *
 * <span class="informal">It's like {@link auditTime}, but the silencing
 * duration is determined by a second Observable.</span>
 *
 * <img src="./img/audit.png" width="100%">
 *
 * `audit` is similar to `throttle`, but emits the last value from the silenced
 * time window, instead of the first value. `audit` emits the most recent value
 * from the source Observable on the output Observable as soon as its internal
 * timer becomes disabled, and ignores source values while the timer is enabled.
 * Initially, the timer is disabled. As soon as the first source value arrives,
 * the timer is enabled by calling the `durationSelector` function with the
 * source value, which returns the "duration" Observable. When the duration
 * Observable emits a value or completes, the timer is disabled, then the most
 * recent source value is emitted on the output Observable, and this process
 * repeats for the next source value.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.audit(ev => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounce}
 * @see {@link delayWhen}
 * @see {@link sample}
 * @see {@link throttle}
 *
 * @param {function(value: T): Observable|Promise} durationSelector A function
 * that receives a value from the source Observable, for computing the silencing
 * duration, returned as an Observable or a Promise.
 * @return {Observable<T>} An Observable that performs rate-limiting of
 * emissions from the source Observable.
 * @method audit
 * @owner Observable
 */
function audit(durationSelector) {
    return this.lift(new AuditOperator(durationSelector));
}
exports.audit = audit;
var AuditOperator = (function () {
    function AuditOperator(durationSelector) {
        this.durationSelector = durationSelector;
    }
    AuditOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new AuditSubscriber(subscriber, this.durationSelector));
    };
    return AuditOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AuditSubscriber = (function (_super) {
    __extends(AuditSubscriber, _super);
    function AuditSubscriber(destination, durationSelector) {
        _super.call(this, destination);
        this.durationSelector = durationSelector;
        this.hasValue = false;
    }
    AuditSubscriber.prototype._next = function (value) {
        this.value = value;
        this.hasValue = true;
        if (!this.throttled) {
            var duration = tryCatch_1.tryCatch(this.durationSelector)(value);
            if (duration === errorObject_1.errorObject) {
                this.destination.error(errorObject_1.errorObject.e);
            }
            else {
                this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));
            }
        }
    };
    AuditSubscriber.prototype.clearThrottle = function () {
        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;
        if (throttled) {
            this.remove(throttled);
            this.throttled = null;
            throttled.unsubscribe();
        }
        if (hasValue) {
            this.value = null;
            this.hasValue = false;
            this.destination.next(value);
        }
    };
    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {
        this.clearThrottle();
    };
    AuditSubscriber.prototype.notifyComplete = function () {
        this.clearThrottle();
    };
    return AuditSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=audit.js.map

/***/ },
/* 1128 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var async_1 = __webpack_require__(666);
var Subscriber_1 = __webpack_require__(24);
/**
 * Ignores source values for `duration` milliseconds, then emits the most recent
 * value from the source Observable, then repeats this process.
 *
 * <span class="informal">When it sees a source values, it ignores that plus
 * the next ones for `duration` milliseconds, and then it emits the most recent
 * value from the source.</span>
 *
 * <img src="./img/auditTime.png" width="100%">
 *
 * `auditTime` is similar to `throttleTime`, but emits the last value from the
 * silenced time window, instead of the first value. `auditTime` emits the most
 * recent value from the source Observable on the output Observable as soon as
 * its internal timer becomes disabled, and ignores source values while the
 * timer is enabled. Initially, the timer is disabled. As soon as the first
 * source value arrives, the timer is enabled. After `duration` milliseconds (or
 * the time unit determined internally by the optional `scheduler`) has passed,
 * the timer is disabled, then the most recent source value is emitted on the
 * output Observable, and this process repeats for the next source value.
 * Optionally takes a {@link Scheduler} for managing timers.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.auditTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttleTime}
 *
 * @param {number} duration Time to wait before emitting the most recent source
 * value, measured in milliseconds or the time unit determined internally
 * by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link Scheduler} to use for
 * managing the timers that handle the rate-limiting behavior.
 * @return {Observable<T>} An Observable that performs rate-limiting of
 * emissions from the source Observable.
 * @method auditTime
 * @owner Observable
 */
function auditTime(duration, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return this.lift(new AuditTimeOperator(duration, scheduler));
}
exports.auditTime = auditTime;
var AuditTimeOperator = (function () {
    function AuditTimeOperator(duration, scheduler) {
        this.duration = duration;
        this.scheduler = scheduler;
    }
    AuditTimeOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new AuditTimeSubscriber(subscriber, this.duration, this.scheduler));
    };
    return AuditTimeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AuditTimeSubscriber = (function (_super) {
    __extends(AuditTimeSubscriber, _super);
    function AuditTimeSubscriber(destination, duration, scheduler) {
        _super.call(this, destination);
        this.duration = duration;
        this.scheduler = scheduler;
        this.hasValue = false;
    }
    AuditTimeSubscriber.prototype._next = function (value) {
        this.value = value;
        this.hasValue = true;
        if (!this.throttled) {
            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, this));
        }
    };
    AuditTimeSubscriber.prototype.clearThrottle = function () {
        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;
        if (throttled) {
            this.remove(throttled);
            this.throttled = null;
            throttled.unsubscribe();
        }
        if (hasValue) {
            this.value = null;
            this.hasValue = false;
            this.destination.next(value);
        }
    };
    return AuditTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchNext(subscriber) {
    subscriber.clearThrottle();
}
//# sourceMappingURL=auditTime.js.map

/***/ },
/* 1129 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Buffers the source Observable values until `closingNotifier` emits.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * that array only when another Observable emits.</span>
 *
 * <img src="./img/buffer.png" width="100%">
 *
 * Buffers the incoming Observable values until the given `closingNotifier`
 * Observable emits a value, at which point it emits the buffer on the output
 * Observable and starts a new buffer internally, awaiting the next time
 * `closingNotifier` emits.
 *
 * @example <caption>On every click, emit array of most recent interval events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var interval = Rx.Observable.interval(1000);
 * var buffered = interval.buffer(clicks);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link window}
 *
 * @param {Observable<any>} closingNotifier An Observable that signals the
 * buffer to be emitted on the output Observable.
 * @return {Observable<T[]>} An Observable of buffers, which are arrays of
 * values.
 * @method buffer
 * @owner Observable
 */
function buffer(closingNotifier) {
    return this.lift(new BufferOperator(closingNotifier));
}
exports.buffer = buffer;
var BufferOperator = (function () {
    function BufferOperator(closingNotifier) {
        this.closingNotifier = closingNotifier;
    }
    BufferOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new BufferSubscriber(subscriber, this.closingNotifier));
    };
    return BufferOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferSubscriber = (function (_super) {
    __extends(BufferSubscriber, _super);
    function BufferSubscriber(destination, closingNotifier) {
        _super.call(this, destination);
        this.buffer = [];
        this.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));
    }
    BufferSubscriber.prototype._next = function (value) {
        this.buffer.push(value);
    };
    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var buffer = this.buffer;
        this.buffer = [];
        this.destination.next(buffer);
    };
    return BufferSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=buffer.js.map

/***/ },
/* 1130 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
/**
 * Buffers the source Observable values until the size hits the maximum
 * `bufferSize` given.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * that array only when its size reaches `bufferSize`.</span>
 *
 * <img src="./img/bufferCount.png" width="100%">
 *
 * Buffers a number of values from the source Observable by `bufferSize` then
 * emits the buffer and clears it, and starts a new buffer each
 * `startBufferEvery` values. If `startBufferEvery` is not provided or is
 * `null`, then new buffers are started immediately at the start of the source
 * and when each buffer closes and is emitted.
 *
 * @example <caption>Emit the last two click events as an array</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferCount(2);
 * buffered.subscribe(x => console.log(x));
 *
 * @example <caption>On every click, emit the last two click events as an array</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferCount(2, 1);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link pairwise}
 * @see {@link windowCount}
 *
 * @param {number} bufferSize The maximum size of the buffer emitted.
 * @param {number} [startBufferEvery] Interval at which to start a new buffer.
 * For example if `startBufferEvery` is `2`, then a new buffer will be started
 * on every other value from the source. A new buffer is started at the
 * beginning of the source by default.
 * @return {Observable<T[]>} An Observable of arrays of buffered values.
 * @method bufferCount
 * @owner Observable
 */
function bufferCount(bufferSize, startBufferEvery) {
    if (startBufferEvery === void 0) { startBufferEvery = null; }
    return this.lift(new BufferCountOperator(bufferSize, startBufferEvery));
}
exports.bufferCount = bufferCount;
var BufferCountOperator = (function () {
    function BufferCountOperator(bufferSize, startBufferEvery) {
        this.bufferSize = bufferSize;
        this.startBufferEvery = startBufferEvery;
    }
    BufferCountOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new BufferCountSubscriber(subscriber, this.bufferSize, this.startBufferEvery));
    };
    return BufferCountOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferCountSubscriber = (function (_super) {
    __extends(BufferCountSubscriber, _super);
    function BufferCountSubscriber(destination, bufferSize, startBufferEvery) {
        _super.call(this, destination);
        this.bufferSize = bufferSize;
        this.startBufferEvery = startBufferEvery;
        this.buffers = [[]];
        this.count = 0;
    }
    BufferCountSubscriber.prototype._next = function (value) {
        var count = (this.count += 1);
        var destination = this.destination;
        var bufferSize = this.bufferSize;
        var startBufferEvery = (this.startBufferEvery == null) ? bufferSize : this.startBufferEvery;
        var buffers = this.buffers;
        var len = buffers.length;
        var remove = -1;
        if (count % startBufferEvery === 0) {
            buffers.push([]);
        }
        for (var i = 0; i < len; i++) {
            var buffer = buffers[i];
            buffer.push(value);
            if (buffer.length === bufferSize) {
                remove = i;
                destination.next(buffer);
            }
        }
        if (remove !== -1) {
            buffers.splice(remove, 1);
        }
    };
    BufferCountSubscriber.prototype._complete = function () {
        var destination = this.destination;
        var buffers = this.buffers;
        while (buffers.length > 0) {
            var buffer = buffers.shift();
            if (buffer.length > 0) {
                destination.next(buffer);
            }
        }
        _super.prototype._complete.call(this);
    };
    return BufferCountSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=bufferCount.js.map

/***/ },
/* 1131 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var async_1 = __webpack_require__(666);
var Subscriber_1 = __webpack_require__(24);
var isScheduler_1 = __webpack_require__(372);
/**
 * Buffers the source Observable values for a specific time period.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * those arrays periodically in time.</span>
 *
 * <img src="./img/bufferTime.png" width="100%">
 *
 * Buffers values from the source for a specific time duration `bufferTimeSpan`.
 * Unless the optional argument `bufferCreationInterval` is given, it emits and
 * resets the buffer every `bufferTimeSpan` milliseconds. If
 * `bufferCreationInterval` is given, this operator opens the buffer every
 * `bufferCreationInterval` milliseconds and closes (emits and resets) the
 * buffer every `bufferTimeSpan` milliseconds. When the optional argument
 * `maxBufferSize` is specified, the buffer will be closed either after
 * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.
 *
 * @example <caption>Every second, emit an array of the recent click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferTime(1000);
 * buffered.subscribe(x => console.log(x));
 *
 * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferTime(2000, 5000);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link windowTime}
 *
 * @param {number} bufferTimeSpan The amount of time to fill each buffer array.
 * @param {number} [bufferCreationInterval] The interval at which to start new
 * buffers.
 * @param {number} [maxBufferSize] The maximum buffer size.
 * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the
 * intervals that determine buffer boundaries.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferTime
 * @owner Observable
 */
function bufferTime(bufferTimeSpan) {
    var length = arguments.length;
    var scheduler = async_1.async;
    if (isScheduler_1.isScheduler(arguments[arguments.length - 1])) {
        scheduler = arguments[arguments.length - 1];
        length--;
    }
    var bufferCreationInterval = null;
    if (length >= 2) {
        bufferCreationInterval = arguments[1];
    }
    var maxBufferSize = Number.POSITIVE_INFINITY;
    if (length >= 3) {
        maxBufferSize = arguments[2];
    }
    return this.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));
}
exports.bufferTime = bufferTime;
var BufferTimeOperator = (function () {
    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
        this.bufferTimeSpan = bufferTimeSpan;
        this.bufferCreationInterval = bufferCreationInterval;
        this.maxBufferSize = maxBufferSize;
        this.scheduler = scheduler;
    }
    BufferTimeOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));
    };
    return BufferTimeOperator;
}());
var Context = (function () {
    function Context() {
        this.buffer = [];
    }
    return Context;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferTimeSubscriber = (function (_super) {
    __extends(BufferTimeSubscriber, _super);
    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
        _super.call(this, destination);
        this.bufferTimeSpan = bufferTimeSpan;
        this.bufferCreationInterval = bufferCreationInterval;
        this.maxBufferSize = maxBufferSize;
        this.scheduler = scheduler;
        this.contexts = [];
        var context = this.openContext();
        this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;
        if (this.timespanOnly) {
            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };
            this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
        }
        else {
            var closeState = { subscriber: this, context: context };
            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: this, scheduler: scheduler };
            this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));
            this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));
        }
    }
    BufferTimeSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        var len = contexts.length;
        var filledBufferContext;
        for (var i = 0; i < len; i++) {
            var context = contexts[i];
            var buffer = context.buffer;
            buffer.push(value);
            if (buffer.length == this.maxBufferSize) {
                filledBufferContext = context;
            }
        }
        if (filledBufferContext) {
            this.onBufferFull(filledBufferContext);
        }
    };
    BufferTimeSubscriber.prototype._error = function (err) {
        this.contexts.length = 0;
        _super.prototype._error.call(this, err);
    };
    BufferTimeSubscriber.prototype._complete = function () {
        var _a = this, contexts = _a.contexts, destination = _a.destination;
        while (contexts.length > 0) {
            var context = contexts.shift();
            destination.next(context.buffer);
        }
        _super.prototype._complete.call(this);
    };
    BufferTimeSubscriber.prototype._unsubscribe = function () {
        this.contexts = null;
    };
    BufferTimeSubscriber.prototype.onBufferFull = function (context) {
        this.closeContext(context);
        var closeAction = context.closeAction;
        closeAction.unsubscribe();
        this.remove(closeAction);
        if (this.timespanOnly) {
            context = this.openContext();
            var bufferTimeSpan = this.bufferTimeSpan;
            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };
            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
        }
    };
    BufferTimeSubscriber.prototype.openContext = function () {
        var context = new Context();
        this.contexts.push(context);
        return context;
    };
    BufferTimeSubscriber.prototype.closeContext = function (context) {
        this.destination.next(context.buffer);
        var contexts = this.contexts;
        var spliceIndex = contexts ? contexts.indexOf(context) : -1;
        if (spliceIndex >= 0) {
            contexts.splice(contexts.indexOf(context), 1);
        }
    };
    return BufferTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchBufferTimeSpanOnly(state) {
    var subscriber = state.subscriber;
    var prevContext = state.context;
    if (prevContext) {
        subscriber.closeContext(prevContext);
    }
    if (!subscriber.closed) {
        state.context = subscriber.openContext();
        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);
    }
}
function dispatchBufferCreation(state) {
    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;
    var context = subscriber.openContext();
    var action = this;
    if (!subscriber.closed) {
        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));
        action.schedule(state, bufferCreationInterval);
    }
}
function dispatchBufferClose(arg) {
    var subscriber = arg.subscriber, context = arg.context;
    subscriber.closeContext(context);
}
//# sourceMappingURL=bufferTime.js.map

/***/ },
/* 1132 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscription_1 = __webpack_require__(145);
var subscribeToResult_1 = __webpack_require__(144);
var OuterSubscriber_1 = __webpack_require__(143);
/**
 * Buffers the source Observable values starting from an emission from
 * `openings` and ending when the output of `closingSelector` emits.
 *
 * <span class="informal">Collects values from the past as an array. Starts
 * collecting only when `opening` emits, and calls the `closingSelector`
 * function to get an Observable that tells when to close the buffer.</span>
 *
 * <img src="./img/bufferToggle.png" width="100%">
 *
 * Buffers values from the source by opening the buffer via signals from an
 * Observable provided to `openings`, and closing and sending the buffers when
 * a Subscribable or Promise returned by the `closingSelector` function emits.
 *
 * @example <caption>Every other second, emit the click events from the next 500ms</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var openings = Rx.Observable.interval(1000);
 * var buffered = clicks.bufferToggle(openings, i =>
 *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()
 * );
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferWhen}
 * @see {@link windowToggle}
 *
 * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new
 * buffers.
 * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes
 * the value emitted by the `openings` observable and returns a Subscribable or Promise,
 * which, when it emits, signals that the associated buffer should be emitted
 * and cleared.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferToggle
 * @owner Observable
 */
function bufferToggle(openings, closingSelector) {
    return this.lift(new BufferToggleOperator(openings, closingSelector));
}
exports.bufferToggle = bufferToggle;
var BufferToggleOperator = (function () {
    function BufferToggleOperator(openings, closingSelector) {
        this.openings = openings;
        this.closingSelector = closingSelector;
    }
    BufferToggleOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));
    };
    return BufferToggleOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferToggleSubscriber = (function (_super) {
    __extends(BufferToggleSubscriber, _super);
    function BufferToggleSubscriber(destination, openings, closingSelector) {
        _super.call(this, destination);
        this.openings = openings;
        this.closingSelector = closingSelector;
        this.contexts = [];
        this.add(subscribeToResult_1.subscribeToResult(this, openings));
    }
    BufferToggleSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        var len = contexts.length;
        for (var i = 0; i < len; i++) {
            contexts[i].buffer.push(value);
        }
    };
    BufferToggleSubscriber.prototype._error = function (err) {
        var contexts = this.contexts;
        while (contexts.length > 0) {
            var context = contexts.shift();
            context.subscription.unsubscribe();
            context.buffer = null;
            context.subscription = null;
        }
        this.contexts = null;
        _super.prototype._error.call(this, err);
    };
    BufferToggleSubscriber.prototype._complete = function () {
        var contexts = this.contexts;
        while (contexts.length > 0) {
            var context = contexts.shift();
            this.destination.next(context.buffer);
            context.subscription.unsubscribe();
            context.buffer = null;
            context.subscription = null;
        }
        this.contexts = null;
        _super.prototype._complete.call(this);
    };
    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);
    };
    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {
        this.closeBuffer(innerSub.context);
    };
    BufferToggleSubscriber.prototype.openBuffer = function (value) {
        try {
            var closingSelector = this.closingSelector;
            var closingNotifier = closingSelector.call(this, value);
            if (closingNotifier) {
                this.trySubscribe(closingNotifier);
            }
        }
        catch (err) {
            this._error(err);
        }
    };
    BufferToggleSubscriber.prototype.closeBuffer = function (context) {
        var contexts = this.contexts;
        if (contexts && context) {
            var buffer = context.buffer, subscription = context.subscription;
            this.destination.next(buffer);
            contexts.splice(contexts.indexOf(context), 1);
            this.remove(subscription);
            subscription.unsubscribe();
        }
    };
    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {
        var contexts = this.contexts;
        var buffer = [];
        var subscription = new Subscription_1.Subscription();
        var context = { buffer: buffer, subscription: subscription };
        contexts.push(context);
        var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);
        if (!innerSubscription || innerSubscription.closed) {
            this.closeBuffer(context);
        }
        else {
            innerSubscription.context = context;
            this.add(innerSubscription);
            subscription.add(innerSubscription);
        }
    };
    return BufferToggleSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=bufferToggle.js.map

/***/ },
/* 1133 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscription_1 = __webpack_require__(145);
var tryCatch_1 = __webpack_require__(370);
var errorObject_1 = __webpack_require__(231);
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Buffers the source Observable values, using a factory function of closing
 * Observables to determine when to close, emit, and reset the buffer.
 *
 * <span class="informal">Collects values from the past as an array. When it
 * starts collecting values, it calls a function that returns an Observable that
 * tells when to close the buffer and restart collecting.</span>
 *
 * <img src="./img/bufferWhen.png" width="100%">
 *
 * Opens a buffer immediately, then closes the buffer when the observable
 * returned by calling `closingSelector` function emits a value. When it closes
 * the buffer, it immediately opens a new buffer and repeats the process.
 *
 * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferWhen(() =>
 *   Rx.Observable.interval(1000 + Math.random() * 4000)
 * );
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link windowWhen}
 *
 * @param {function(): Observable} closingSelector A function that takes no
 * arguments and returns an Observable that signals buffer closure.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferWhen
 * @owner Observable
 */
function bufferWhen(closingSelector) {
    return this.lift(new BufferWhenOperator(closingSelector));
}
exports.bufferWhen = bufferWhen;
var BufferWhenOperator = (function () {
    function BufferWhenOperator(closingSelector) {
        this.closingSelector = closingSelector;
    }
    BufferWhenOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));
    };
    return BufferWhenOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferWhenSubscriber = (function (_super) {
    __extends(BufferWhenSubscriber, _super);
    function BufferWhenSubscriber(destination, closingSelector) {
        _super.call(this, destination);
        this.closingSelector = closingSelector;
        this.subscribing = false;
        this.openBuffer();
    }
    BufferWhenSubscriber.prototype._next = function (value) {
        this.buffer.push(value);
    };
    BufferWhenSubscriber.prototype._complete = function () {
        var buffer = this.buffer;
        if (buffer) {
            this.destination.next(buffer);
        }
        _super.prototype._complete.call(this);
    };
    BufferWhenSubscriber.prototype._unsubscribe = function () {
        this.buffer = null;
        this.subscribing = false;
    };
    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openBuffer();
    };
    BufferWhenSubscriber.prototype.notifyComplete = function () {
        if (this.subscribing) {
            this.complete();
        }
        else {
            this.openBuffer();
        }
    };
    BufferWhenSubscriber.prototype.openBuffer = function () {
        var closingSubscription = this.closingSubscription;
        if (closingSubscription) {
            this.remove(closingSubscription);
            closingSubscription.unsubscribe();
        }
        var buffer = this.buffer;
        if (this.buffer) {
            this.destination.next(buffer);
        }
        this.buffer = [];
        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();
        if (closingNotifier === errorObject_1.errorObject) {
            this.error(errorObject_1.errorObject.e);
        }
        else {
            closingSubscription = new Subscription_1.Subscription();
            this.closingSubscription = closingSubscription;
            this.add(closingSubscription);
            this.subscribing = true;
            closingSubscription.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));
            this.subscribing = false;
        }
    };
    return BufferWhenSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=bufferWhen.js.map

/***/ },
/* 1134 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Observable_1 = __webpack_require__(13);
var ReplaySubject_1 = __webpack_require__(698);
/**
 * @param bufferSize
 * @param windowTime
 * @param scheduler
 * @return {Observable<any>}
 * @method cache
 * @owner Observable
 */
function cache(bufferSize, windowTime, scheduler) {
    if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }
    if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }
    var subject;
    var source = this;
    var refs = 0;
    var outerSub;
    var getSubject = function () {
        subject = new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler);
        return subject;
    };
    return new Observable_1.Observable(function (observer) {
        if (!subject) {
            subject = getSubject();
            outerSub = source.subscribe(function (value) { return subject.next(value); }, function (err) {
                var s = subject;
                subject = null;
                s.error(err);
            }, function () { return subject.complete(); });
        }
        refs++;
        if (!subject) {
            subject = getSubject();
        }
        var innerSub = subject.subscribe(observer);
        return function () {
            refs--;
            if (innerSub) {
                innerSub.unsubscribe();
            }
            if (refs === 0) {
                outerSub.unsubscribe();
            }
        };
    });
}
exports.cache = cache;
//# sourceMappingURL=cache.js.map

/***/ },
/* 1135 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var combineLatest_1 = __webpack_require__(720);
/**
 * Converts a higher-order Observable into a first-order Observable by waiting
 * for the outer Observable to complete, then applying {@link combineLatest}.
 *
 * <span class="informal">Flattens an Observable-of-Observables by applying
 * {@link combineLatest} when the Observable-of-Observables completes.</span>
 *
 * <img src="./img/combineAll.png" width="100%">
 *
 * Takes an Observable of Observables, and collects all Observables from it.
 * Once the outer Observable completes, it subscribes to all collected
 * Observables and combines their values using the {@link combineLatest}
 * strategy, such that:
 * - Every time an inner Observable emits, the output Observable emits.
 * - When the returned observable emits, it emits all of the latest values by:
 *   - If a `project` function is provided, it is called with each recent value
 *     from each inner Observable in whatever order they arrived, and the result
 *     of the `project` function is what is emitted by the output Observable.
 *   - If there is no `project` function, an array of all of the most recent
 *     values is emitted by the output Observable.
 *
 * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map(ev =>
 *   Rx.Observable.interval(Math.random()*2000).take(3)
 * ).take(2);
 * var result = higherOrder.combineAll();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineLatest}
 * @see {@link mergeAll}
 *
 * @param {function} [project] An optional function to map the most recent
 * values from each inner Observable into a new result. Takes each of the most
 * recent values from each collected inner Observable as arguments, in order.
 * @return {Observable} An Observable of projected results or arrays of recent
 * values.
 * @method combineAll
 * @owner Observable
 */
function combineAll(project) {
    return this.lift(new combineLatest_1.CombineLatestOperator(project));
}
exports.combineAll = combineAll;
//# sourceMappingURL=combineAll.js.map

/***/ },
/* 1136 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var mergeMapTo_1 = __webpack_require__(791);
/**
 * Projects each source value to the same Observable which is merged multiple
 * times in a serialized fashion on the output Observable.
 *
 * <span class="informal">It's like {@link concatMap}, but maps each value
 * always to the same inner Observable.</span>
 *
 * <img src="./img/concatMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then flattens those resulting Observables into one
 * single Observable, which is the output Observable. Each new `innerObservable`
 * instance emitted on the output Observable is concatenated with the previous
 * `innerObservable` instance.
 *
 * __Warning:__ if source values arrive endlessly and faster than their
 * corresponding inner Observables can complete, it will result in memory issues
 * as inner Observables amass in an unbounded buffer waiting for their turn to
 * be subscribed to.
 *
 * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter
 * set to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concat}
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link mergeMapTo}
 * @see {@link switchMapTo}
 *
 * @param {Observable} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An observable of values merged together by joining the
 * passed observable with itself, one after the other, for each value emitted
 * from the source.
 * @method concatMapTo
 * @owner Observable
 */
function concatMapTo(innerObservable, resultSelector) {
    return this.lift(new mergeMapTo_1.MergeMapToOperator(innerObservable, resultSelector, 1));
}
exports.concatMapTo = concatMapTo;
//# sourceMappingURL=concatMapTo.js.map

/***/ },
/* 1137 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
/**
 * Counts the number of emissions on the source and emits that number when the
 * source completes.
 *
 * <span class="informal">Tells how many values were emitted, when the source
 * completes.</span>
 *
 * <img src="./img/count.png" width="100%">
 *
 * `count` transforms an Observable that emits values into an Observable that
 * emits a single value that represents the number of values emitted by the
 * source Observable. If the source Observable terminates with an error, `count`
 * will pass this error notification along without emitting an value first. If
 * the source Observable does not terminate at all, `count` will neither emit
 * a value nor terminate. This operator takes an optional `predicate` function
 * as argument, in which case the output emission will represent the number of
 * source values that matched `true` with the `predicate`.
 *
 * @example <caption>Counts how many seconds have passed before the first click happened</caption>
 * var seconds = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var secondsBeforeClick = seconds.takeUntil(clicks);
 * var result = secondsBeforeClick.count();
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>
 * var numbers = Rx.Observable.range(1, 7);
 * var result = numbers.count(i => i % 2 === 1);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link max}
 * @see {@link min}
 * @see {@link reduce}
 *
 * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A
 * boolean function to select what values are to be counted. It is provided with
 * arguments of:
 * - `value`: the value from the source Observable.
 * - `index`: the (zero-based) "index" of the value from the source Observable.
 * - `source`: the source Observable instance itself.
 * @return {Observable} An Observable of one number that represents the count as
 * described above.
 * @method count
 * @owner Observable
 */
function count(predicate) {
    return this.lift(new CountOperator(predicate, this));
}
exports.count = count;
var CountOperator = (function () {
    function CountOperator(predicate, source) {
        this.predicate = predicate;
        this.source = source;
    }
    CountOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new CountSubscriber(subscriber, this.predicate, this.source));
    };
    return CountOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var CountSubscriber = (function (_super) {
    __extends(CountSubscriber, _super);
    function CountSubscriber(destination, predicate, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.source = source;
        this.count = 0;
        this.index = 0;
    }
    CountSubscriber.prototype._next = function (value) {
        if (this.predicate) {
            this._tryPredicate(value);
        }
        else {
            this.count++;
        }
    };
    CountSubscriber.prototype._tryPredicate = function (value) {
        var result;
        try {
            result = this.predicate(value, this.index++, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this.count++;
        }
    };
    CountSubscriber.prototype._complete = function () {
        this.destination.next(this.count);
        this.destination.complete();
    };
    return CountSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=count.js.map

/***/ },
/* 1138 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Emits a value from the source Observable only after a particular time span
 * determined by another Observable has passed without another source emission.
 *
 * <span class="informal">It's like {@link debounceTime}, but the time span of
 * emission silence is determined by a second Observable.</span>
 *
 * <img src="./img/debounce.png" width="100%">
 *
 * `debounce` delays values emitted by the source Observable, but drops previous
 * pending delayed emissions if a new value arrives on the source Observable.
 * This operator keeps track of the most recent value from the source
 * Observable, and spawns a duration Observable by calling the
 * `durationSelector` function. The value is emitted only when the duration
 * Observable emits a value or completes, and if no other value was emitted on
 * the source Observable since the duration Observable was spawned. If a new
 * value appears before the duration Observable emits, the previous value will
 * be dropped and will not be emitted on the output Observable.
 *
 * Like {@link debounceTime}, this is a rate-limiting operator, and also a
 * delay-like operator since output emissions do not necessarily occur at the
 * same time as they did on the source Observable.
 *
 * @example <caption>Emit the most recent click after a burst of clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.debounce(() => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounceTime}
 * @see {@link delayWhen}
 * @see {@link throttle}
 *
 * @param {function(value: T): Observable|Promise} durationSelector A function
 * that receives a value from the source Observable, for computing the timeout
 * duration for each source value, returned as an Observable or a Promise.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified duration Observable returned by
 * `durationSelector`, and may drop some values if they occur too frequently.
 * @method debounce
 * @owner Observable
 */
function debounce(durationSelector) {
    return this.lift(new DebounceOperator(durationSelector));
}
exports.debounce = debounce;
var DebounceOperator = (function () {
    function DebounceOperator(durationSelector) {
        this.durationSelector = durationSelector;
    }
    DebounceOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new DebounceSubscriber(subscriber, this.durationSelector));
    };
    return DebounceOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DebounceSubscriber = (function (_super) {
    __extends(DebounceSubscriber, _super);
    function DebounceSubscriber(destination, durationSelector) {
        _super.call(this, destination);
        this.durationSelector = durationSelector;
        this.hasValue = false;
        this.durationSubscription = null;
    }
    DebounceSubscriber.prototype._next = function (value) {
        try {
            var result = this.durationSelector.call(this, value);
            if (result) {
                this._tryNext(value, result);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    DebounceSubscriber.prototype._complete = function () {
        this.emitValue();
        this.destination.complete();
    };
    DebounceSubscriber.prototype._tryNext = function (value, duration) {
        var subscription = this.durationSubscription;
        this.value = value;
        this.hasValue = true;
        if (subscription) {
            subscription.unsubscribe();
            this.remove(subscription);
        }
        subscription = subscribeToResult_1.subscribeToResult(this, duration);
        if (!subscription.closed) {
            this.add(this.durationSubscription = subscription);
        }
    };
    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.emitValue();
    };
    DebounceSubscriber.prototype.notifyComplete = function () {
        this.emitValue();
    };
    DebounceSubscriber.prototype.emitValue = function () {
        if (this.hasValue) {
            var value = this.value;
            var subscription = this.durationSubscription;
            if (subscription) {
                this.durationSubscription = null;
                subscription.unsubscribe();
                this.remove(subscription);
            }
            this.value = null;
            this.hasValue = false;
            _super.prototype._next.call(this, value);
        }
    };
    return DebounceSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=debounce.js.map

/***/ },
/* 1139 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
var async_1 = __webpack_require__(666);
/**
 * Emits a value from the source Observable only after a particular time span
 * has passed without another source emission.
 *
 * <span class="informal">It's like {@link delay}, but passes only the most
 * recent value from each burst of emissions.</span>
 *
 * <img src="./img/debounceTime.png" width="100%">
 *
 * `debounceTime` delays values emitted by the source Observable, but drops
 * previous pending delayed emissions if a new value arrives on the source
 * Observable. This operator keeps track of the most recent value from the
 * source Observable, and emits that only when `dueTime` enough time has passed
 * without any other value appearing on the source Observable. If a new value
 * appears before `dueTime` silence occurs, the previous value will be dropped
 * and will not be emitted on the output Observable.
 *
 * This is a rate-limiting operator, because it is impossible for more than one
 * value to be emitted in any time window of duration `dueTime`, but it is also
 * a delay-like operator since output emissions do not occur at the same time as
 * they did on the source Observable. Optionally takes a {@link Scheduler} for
 * managing timers.
 *
 * @example <caption>Emit the most recent click after a burst of clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.debounceTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounce}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttleTime}
 *
 * @param {number} dueTime The timeout duration in milliseconds (or the time
 * unit determined internally by the optional `scheduler`) for the window of
 * time required to wait for emission silence before emitting the most recent
 * source value.
 * @param {Scheduler} [scheduler=async] The {@link Scheduler} to use for
 * managing the timers that handle the timeout for each value.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified `dueTime`, and may drop some values if they occur
 * too frequently.
 * @method debounceTime
 * @owner Observable
 */
function debounceTime(dueTime, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return this.lift(new DebounceTimeOperator(dueTime, scheduler));
}
exports.debounceTime = debounceTime;
var DebounceTimeOperator = (function () {
    function DebounceTimeOperator(dueTime, scheduler) {
        this.dueTime = dueTime;
        this.scheduler = scheduler;
    }
    DebounceTimeOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));
    };
    return DebounceTimeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DebounceTimeSubscriber = (function (_super) {
    __extends(DebounceTimeSubscriber, _super);
    function DebounceTimeSubscriber(destination, dueTime, scheduler) {
        _super.call(this, destination);
        this.dueTime = dueTime;
        this.scheduler = scheduler;
        this.debouncedSubscription = null;
        this.lastValue = null;
        this.hasValue = false;
    }
    DebounceTimeSubscriber.prototype._next = function (value) {
        this.clearDebounce();
        this.lastValue = value;
        this.hasValue = true;
        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));
    };
    DebounceTimeSubscriber.prototype._complete = function () {
        this.debouncedNext();
        this.destination.complete();
    };
    DebounceTimeSubscriber.prototype.debouncedNext = function () {
        this.clearDebounce();
        if (this.hasValue) {
            this.destination.next(this.lastValue);
            this.lastValue = null;
            this.hasValue = false;
        }
    };
    DebounceTimeSubscriber.prototype.clearDebounce = function () {
        var debouncedSubscription = this.debouncedSubscription;
        if (debouncedSubscription !== null) {
            this.remove(debouncedSubscription);
            debouncedSubscription.unsubscribe();
            this.debouncedSubscription = null;
        }
    };
    return DebounceTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchNext(subscriber) {
    subscriber.debouncedNext();
}
//# sourceMappingURL=debounceTime.js.map

/***/ },
/* 1140 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
/**
 * Emits a given value if the source Observable completes without emitting any
 * `next` value, otherwise mirrors the source Observable.
 *
 * <span class="informal">If the source Observable turns out to be empty, then
 * this operator will emit a default value.</span>
 *
 * <img src="./img/defaultIfEmpty.png" width="100%">
 *
 * `defaultIfEmpty` emits the values emitted by the source Observable or a
 * specified default value if the source Observable is empty (completes without
 * having emitted any `next` value).
 *
 * @example <caption>If no clicks happen in 5 seconds, then emit "no clicks"</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));
 * var result = clicksBeforeFive.defaultIfEmpty('no clicks');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link empty}
 * @see {@link last}
 *
 * @param {any} [defaultValue=null] The default value used if the source
 * Observable is empty.
 * @return {Observable} An Observable that emits either the specified
 * `defaultValue` if the source Observable emits no items, or the values emitted
 * by the source Observable.
 * @method defaultIfEmpty
 * @owner Observable
 */
function defaultIfEmpty(defaultValue) {
    if (defaultValue === void 0) { defaultValue = null; }
    return this.lift(new DefaultIfEmptyOperator(defaultValue));
}
exports.defaultIfEmpty = defaultIfEmpty;
var DefaultIfEmptyOperator = (function () {
    function DefaultIfEmptyOperator(defaultValue) {
        this.defaultValue = defaultValue;
    }
    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));
    };
    return DefaultIfEmptyOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DefaultIfEmptySubscriber = (function (_super) {
    __extends(DefaultIfEmptySubscriber, _super);
    function DefaultIfEmptySubscriber(destination, defaultValue) {
        _super.call(this, destination);
        this.defaultValue = defaultValue;
        this.isEmpty = true;
    }
    DefaultIfEmptySubscriber.prototype._next = function (value) {
        this.isEmpty = false;
        this.destination.next(value);
    };
    DefaultIfEmptySubscriber.prototype._complete = function () {
        if (this.isEmpty) {
            this.destination.next(this.defaultValue);
        }
        this.destination.complete();
    };
    return DefaultIfEmptySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=defaultIfEmpty.js.map

/***/ },
/* 1141 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var async_1 = __webpack_require__(666);
var isDate_1 = __webpack_require__(700);
var Subscriber_1 = __webpack_require__(24);
var Notification_1 = __webpack_require__(373);
/**
 * Delays the emission of items from the source Observable by a given timeout or
 * until a given Date.
 *
 * <span class="informal">Time shifts each item by some specified amount of
 * milliseconds.</span>
 *
 * <img src="./img/delay.png" width="100%">
 *
 * If the delay argument is a Number, this operator time shifts the source
 * Observable by that amount of time expressed in milliseconds. The relative
 * time intervals between the values are preserved.
 *
 * If the delay argument is a Date, this operator time shifts the start of the
 * Observable execution until the given date occurs.
 *
 * @example <caption>Delay each click by one second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @example <caption>Delay all clicks until a future date happens</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var date = new Date('March 15, 2050 12:00:00'); // in the future
 * var delayedClicks = clicks.delay(date); // click emitted only after that date
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @see {@link debounceTime}
 * @see {@link delayWhen}
 *
 * @param {number|Date} delay The delay duration in milliseconds (a `number`) or
 * a `Date` until which the emission of the source items is delayed.
 * @param {Scheduler} [scheduler=async] The Scheduler to use for
 * managing the timers that handle the time-shift for each item.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified timeout or Date.
 * @method delay
 * @owner Observable
 */
function delay(delay, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    var absoluteDelay = isDate_1.isDate(delay);
    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);
    return this.lift(new DelayOperator(delayFor, scheduler));
}
exports.delay = delay;
var DelayOperator = (function () {
    function DelayOperator(delay, scheduler) {
        this.delay = delay;
        this.scheduler = scheduler;
    }
    DelayOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));
    };
    return DelayOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DelaySubscriber = (function (_super) {
    __extends(DelaySubscriber, _super);
    function DelaySubscriber(destination, delay, scheduler) {
        _super.call(this, destination);
        this.delay = delay;
        this.scheduler = scheduler;
        this.queue = [];
        this.active = false;
        this.errored = false;
    }
    DelaySubscriber.dispatch = function (state) {
        var source = state.source;
        var queue = source.queue;
        var scheduler = state.scheduler;
        var destination = state.destination;
        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {
            queue.shift().notification.observe(destination);
        }
        if (queue.length > 0) {
            var delay_1 = Math.max(0, queue[0].time - scheduler.now());
            this.schedule(state, delay_1);
        }
        else {
            source.active = false;
        }
    };
    DelaySubscriber.prototype._schedule = function (scheduler) {
        this.active = true;
        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {
            source: this, destination: this.destination, scheduler: scheduler
        }));
    };
    DelaySubscriber.prototype.scheduleNotification = function (notification) {
        if (this.errored === true) {
            return;
        }
        var scheduler = this.scheduler;
        var message = new DelayMessage(scheduler.now() + this.delay, notification);
        this.queue.push(message);
        if (this.active === false) {
            this._schedule(scheduler);
        }
    };
    DelaySubscriber.prototype._next = function (value) {
        this.scheduleNotification(Notification_1.Notification.createNext(value));
    };
    DelaySubscriber.prototype._error = function (err) {
        this.errored = true;
        this.queue = [];
        this.destination.error(err);
    };
    DelaySubscriber.prototype._complete = function () {
        this.scheduleNotification(Notification_1.Notification.createComplete());
    };
    return DelaySubscriber;
}(Subscriber_1.Subscriber));
var DelayMessage = (function () {
    function DelayMessage(time, notification) {
        this.time = time;
        this.notification = notification;
    }
    return DelayMessage;
}());
//# sourceMappingURL=delay.js.map

/***/ },
/* 1142 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
var Observable_1 = __webpack_require__(13);
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Delays the emission of items from the source Observable by a given time span
 * determined by the emissions of another Observable.
 *
 * <span class="informal">It's like {@link delay}, but the time span of the
 * delay duration is determined by a second Observable.</span>
 *
 * <img src="./img/delayWhen.png" width="100%">
 *
 * `delayWhen` time shifts each emitted value from the source Observable by a
 * time span determined by another Observable. When the source emits a value,
 * the `delayDurationSelector` function is called with the source value as
 * argument, and should return an Observable, called the "duration" Observable.
 * The source value is emitted on the output Observable only when the duration
 * Observable emits a value or completes.
 *
 * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which
 * is an Observable. When `subscriptionDelay` emits its first value or
 * completes, the source Observable is subscribed to and starts behaving like
 * described in the previous paragraph. If `subscriptionDelay` is not provided,
 * `delayWhen` will subscribe to the source Observable as soon as the output
 * Observable is subscribed.
 *
 * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var delayedClicks = clicks.delayWhen(event =>
 *   Rx.Observable.interval(Math.random() * 5000)
 * );
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @see {@link debounce}
 * @see {@link delay}
 *
 * @param {function(value: T): Observable} delayDurationSelector A function that
 * returns an Observable for each value emitted by the source Observable, which
 * is then used to delay the emission of that item on the output Observable
 * until the Observable returned from this function emits a value.
 * @param {Observable} subscriptionDelay An Observable that triggers the
 * subscription to the source Observable once it emits any value.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by an amount of time specified by the Observable returned by
 * `delayDurationSelector`.
 * @method delayWhen
 * @owner Observable
 */
function delayWhen(delayDurationSelector, subscriptionDelay) {
    if (subscriptionDelay) {
        return new SubscriptionDelayObservable(this, subscriptionDelay)
            .lift(new DelayWhenOperator(delayDurationSelector));
    }
    return this.lift(new DelayWhenOperator(delayDurationSelector));
}
exports.delayWhen = delayWhen;
var DelayWhenOperator = (function () {
    function DelayWhenOperator(delayDurationSelector) {
        this.delayDurationSelector = delayDurationSelector;
    }
    DelayWhenOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));
    };
    return DelayWhenOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DelayWhenSubscriber = (function (_super) {
    __extends(DelayWhenSubscriber, _super);
    function DelayWhenSubscriber(destination, delayDurationSelector) {
        _super.call(this, destination);
        this.delayDurationSelector = delayDurationSelector;
        this.completed = false;
        this.delayNotifierSubscriptions = [];
        this.values = [];
    }
    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(outerValue);
        this.removeSubscription(innerSub);
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {
        var value = this.removeSubscription(innerSub);
        if (value) {
            this.destination.next(value);
        }
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype._next = function (value) {
        try {
            var delayNotifier = this.delayDurationSelector(value);
            if (delayNotifier) {
                this.tryDelay(delayNotifier, value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    DelayWhenSubscriber.prototype._complete = function () {
        this.completed = true;
        this.tryComplete();
    };
    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {
        subscription.unsubscribe();
        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);
        var value = null;
        if (subscriptionIdx !== -1) {
            value = this.values[subscriptionIdx];
            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);
            this.values.splice(subscriptionIdx, 1);
        }
        return value;
    };
    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {
        var notifierSubscription = subscribeToResult_1.subscribeToResult(this, delayNotifier, value);
        this.add(notifierSubscription);
        this.delayNotifierSubscriptions.push(notifierSubscription);
        this.values.push(value);
    };
    DelayWhenSubscriber.prototype.tryComplete = function () {
        if (this.completed && this.delayNotifierSubscriptions.length === 0) {
            this.destination.complete();
        }
    };
    return DelayWhenSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SubscriptionDelayObservable = (function (_super) {
    __extends(SubscriptionDelayObservable, _super);
    function SubscriptionDelayObservable(source, subscriptionDelay) {
        _super.call(this);
        this.source = source;
        this.subscriptionDelay = subscriptionDelay;
    }
    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {
        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));
    };
    return SubscriptionDelayObservable;
}(Observable_1.Observable));
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SubscriptionDelaySubscriber = (function (_super) {
    __extends(SubscriptionDelaySubscriber, _super);
    function SubscriptionDelaySubscriber(parent, source) {
        _super.call(this);
        this.parent = parent;
        this.source = source;
        this.sourceSubscribed = false;
    }
    SubscriptionDelaySubscriber.prototype._next = function (unused) {
        this.subscribeToSource();
    };
    SubscriptionDelaySubscriber.prototype._error = function (err) {
        this.unsubscribe();
        this.parent.error(err);
    };
    SubscriptionDelaySubscriber.prototype._complete = function () {
        this.subscribeToSource();
    };
    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {
        if (!this.sourceSubscribed) {
            this.sourceSubscribed = true;
            this.unsubscribe();
            this.source.subscribe(this.parent);
        }
    };
    return SubscriptionDelaySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=delayWhen.js.map

/***/ },
/* 1143 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
/**
 * Converts an Observable of {@link Notification} objects into the emissions
 * that they represent.
 *
 * <span class="informal">Unwraps {@link Notification} objects as actual `next`,
 * `error` and `complete` emissions. The opposite of {@link materialize}.</span>
 *
 * <img src="./img/dematerialize.png" width="100%">
 *
 * `dematerialize` is assumed to operate an Observable that only emits
 * {@link Notification} objects as `next` emissions, and does not emit any
 * `error`. Such Observable is the output of a `materialize` operation. Those
 * notifications are then unwrapped using the metadata they contain, and emitted
 * as `next`, `error`, and `complete` on the output Observable.
 *
 * Use this operator in conjunction with {@link materialize}.
 *
 * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>
 * var notifA = new Rx.Notification('N', 'A');
 * var notifB = new Rx.Notification('N', 'B');
 * var notifE = new Rx.Notification('E', void 0,
 *   new TypeError('x.toUpperCase is not a function')
 * );
 * var materialized = Rx.Observable.of(notifA, notifB, notifE);
 * var upperCase = materialized.dematerialize();
 * upperCase.subscribe(x => console.log(x), e => console.error(e));
 *
 * @see {@link Notification}
 * @see {@link materialize}
 *
 * @return {Observable} An Observable that emits items and notifications
 * embedded in Notification objects emitted by the source Observable.
 * @method dematerialize
 * @owner Observable
 */
function dematerialize() {
    return this.lift(new DeMaterializeOperator());
}
exports.dematerialize = dematerialize;
var DeMaterializeOperator = (function () {
    function DeMaterializeOperator() {
    }
    DeMaterializeOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new DeMaterializeSubscriber(subscriber));
    };
    return DeMaterializeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DeMaterializeSubscriber = (function (_super) {
    __extends(DeMaterializeSubscriber, _super);
    function DeMaterializeSubscriber(destination) {
        _super.call(this, destination);
    }
    DeMaterializeSubscriber.prototype._next = function (value) {
        value.observe(this.destination);
    };
    return DeMaterializeSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=dematerialize.js.map

/***/ },
/* 1144 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var distinct_1 = __webpack_require__(787);
/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items,
 * using a property accessed by using the key provided to check if the two items are distinct.
 * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.
 * If a comparator function is not provided, an equality check is used by default.
 * As the internal HashSet of this operator grows larger and larger, care should be taken in the domain of inputs this operator may see.
 * An optional parameter is also provided such that an Observable can be provided to queue the internal HashSet to flush the values it holds.
 * @param {string} key string key for object property lookup on each item.
 * @param {function} [compare] optional comparison function called to test if an item is distinct from previous items in the source.
 * @param {Observable} [flushes] optional Observable for flushing the internal HashSet of the operator.
 * @return {Observable} an Observable that emits items from the source Observable with distinct values.
 * @method distinctKey
 * @owner Observable
 */
function distinctKey(key, compare, flushes) {
    return distinct_1.distinct.call(this, function (x, y) {
        if (compare) {
            return compare(x[key], y[key]);
        }
        return x[key] === y[key];
    }, flushes);
}
exports.distinctKey = distinctKey;
//# sourceMappingURL=distinctKey.js.map

/***/ },
/* 1145 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var distinctUntilChanged_1 = __webpack_require__(788);
/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,
 * using a property accessed by using the key provided to check if the two items are distinct.
 * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.
 * If a comparator function is not provided, an equality check is used by default.
 * @param {string} key string key for object property lookup on each item.
 * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.
 * @return {Observable} an Observable that emits items from the source Observable with distinct values based on the key specified.
 * @method distinctUntilKeyChanged
 * @owner Observable
 */
function distinctUntilKeyChanged(key, compare) {
    return distinctUntilChanged_1.distinctUntilChanged.call(this, function (x, y) {
        if (compare) {
            return compare(x[key], y[key]);
        }
        return x[key] === y[key];
    });
}
exports.distinctUntilKeyChanged = distinctUntilKeyChanged;
//# sourceMappingURL=distinctUntilKeyChanged.js.map

/***/ },
/* 1146 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
/**
 * Perform a side effect for every emission on the source Observable, but return
 * an Observable that is identical to the source.
 *
 * <span class="informal">Intercepts each emission on the source and runs a
 * function, but returns an output which is identical to the source.</span>
 *
 * <img src="./img/do.png" width="100%">
 *
 * Returns a mirrored Observable of the source Observable, but modified so that
 * the provided Observer is called to perform a side effect for every value,
 * error, and completion emitted by the source. Any errors that are thrown in
 * the aforementioned Observer or handlers are safely sent down the error path
 * of the output Observable.
 *
 * This operator is useful for debugging your Observables for the correct values
 * or performing other side effects.
 *
 * Note: this is different to a `subscribe` on the Observable. If the Observable
 * returned by `do` is not subscribed, the side effects specified by the
 * Observer will never happen. `do` therefore simply spies on existing
 * execution, it does not trigger an execution to happen like `subscribe` does.
 *
 * @example <caption>Map every every click to the clientX position of that click, while also logging the click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var positions = clicks
 *   .do(ev => console.log(ev))
 *   .map(ev => ev.clientX);
 * positions.subscribe(x => console.log(x));
 *
 * @see {@link map}
 * @see {@link subscribe}
 *
 * @param {Observer|function} [nextOrObserver] A normal Observer object or a
 * callback for `next`.
 * @param {function} [error] Callback for errors in the source.
 * @param {function} [complete] Callback for the completion of the source.
 * @return {Observable} An Observable identical to the source, but runs the
 * specified Observer or callback(s) for each item.
 * @method do
 * @name do
 * @owner Observable
 */
function _do(nextOrObserver, error, complete) {
    return this.lift(new DoOperator(nextOrObserver, error, complete));
}
exports._do = _do;
var DoOperator = (function () {
    function DoOperator(nextOrObserver, error, complete) {
        this.nextOrObserver = nextOrObserver;
        this.error = error;
        this.complete = complete;
    }
    DoOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));
    };
    return DoOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DoSubscriber = (function (_super) {
    __extends(DoSubscriber, _super);
    function DoSubscriber(destination, nextOrObserver, error, complete) {
        _super.call(this, destination);
        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);
        safeSubscriber.syncErrorThrowable = true;
        this.add(safeSubscriber);
        this.safeSubscriber = safeSubscriber;
    }
    DoSubscriber.prototype._next = function (value) {
        var safeSubscriber = this.safeSubscriber;
        safeSubscriber.next(value);
        if (safeSubscriber.syncErrorThrown) {
            this.destination.error(safeSubscriber.syncErrorValue);
        }
        else {
            this.destination.next(value);
        }
    };
    DoSubscriber.prototype._error = function (err) {
        var safeSubscriber = this.safeSubscriber;
        safeSubscriber.error(err);
        if (safeSubscriber.syncErrorThrown) {
            this.destination.error(safeSubscriber.syncErrorValue);
        }
        else {
            this.destination.error(err);
        }
    };
    DoSubscriber.prototype._complete = function () {
        var safeSubscriber = this.safeSubscriber;
        safeSubscriber.complete();
        if (safeSubscriber.syncErrorThrown) {
            this.destination.error(safeSubscriber.syncErrorValue);
        }
        else {
            this.destination.complete();
        }
    };
    return DoSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=do.js.map

/***/ },
/* 1147 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
var ArgumentOutOfRangeError_1 = __webpack_require__(699);
/**
 * Emits the single value at the specified `index` in a sequence of emissions
 * from the source Observable.
 *
 * <span class="informal">Emits only the i-th value, then completes.</span>
 *
 * <img src="./img/elementAt.png" width="100%">
 *
 * `elementAt` returns an Observable that emits the item at the specified
 * `index` in the source Observable, or a default value if that `index` is out
 * of range and the `default` argument is provided. If the `default` argument is
 * not given and the `index` is out of range, the output Observable will emit an
 * `ArgumentOutOfRangeError` error.
 *
 * @example <caption>Emit only the third click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.elementAt(2);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link first}
 * @see {@link last}
 * @see {@link skip}
 * @see {@link single}
 * @see {@link take}
 *
 * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the
 * Observable has completed before emitting the i-th `next` notification.
 *
 * @param {number} index Is the number `i` for the i-th source emission that has
 * happened since the subscription, starting from the number `0`.
 * @param {T} [defaultValue] The default value returned for missing indices.
 * @return {Observable} An Observable that emits a single item, if it is found.
 * Otherwise, will emit the default value if given. If not, then emits an error.
 * @method elementAt
 * @owner Observable
 */
function elementAt(index, defaultValue) {
    return this.lift(new ElementAtOperator(index, defaultValue));
}
exports.elementAt = elementAt;
var ElementAtOperator = (function () {
    function ElementAtOperator(index, defaultValue) {
        this.index = index;
        this.defaultValue = defaultValue;
        if (index < 0) {
            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
        }
    }
    ElementAtOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));
    };
    return ElementAtOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ElementAtSubscriber = (function (_super) {
    __extends(ElementAtSubscriber, _super);
    function ElementAtSubscriber(destination, index, defaultValue) {
        _super.call(this, destination);
        this.index = index;
        this.defaultValue = defaultValue;
    }
    ElementAtSubscriber.prototype._next = function (x) {
        if (this.index-- === 0) {
            this.destination.next(x);
            this.destination.complete();
        }
    };
    ElementAtSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (this.index >= 0) {
            if (typeof this.defaultValue !== 'undefined') {
                destination.next(this.defaultValue);
            }
            else {
                destination.error(new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError);
            }
        }
        destination.complete();
    };
    return ElementAtSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=elementAt.js.map

/***/ },
/* 1148 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Converts a higher-order Observable into a first-order Observable by dropping
 * inner Observables while the previous inner Observable has not yet completed.
 *
 * <span class="informal">Flattens an Observable-of-Observables by dropping the
 * next inner Observables while the current inner is still executing.</span>
 *
 * <img src="./img/exhaust.png" width="100%">
 *
 * `exhaust` subscribes to an Observable that emits Observables, also known as a
 * higher-order Observable. Each time it observes one of these emitted inner
 * Observables, the output Observable begins emitting the items emitted by that
 * inner Observable. So far, it behaves like {@link mergeAll}. However,
 * `exhaust` ignores every new inner Observable if the previous Observable has
 * not yet completed. Once that one completes, it will accept and flatten the
 * next inner Observable and repeat this process.
 *
 * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));
 * var result = higherOrder.exhaust();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link switch}
 * @see {@link mergeAll}
 * @see {@link exhaustMap}
 * @see {@link zipAll}
 *
 * @return {Observable} Returns an Observable that takes a source of Observables
 * and propagates the first observable exclusively until it completes before
 * subscribing to the next.
 * @method exhaust
 * @owner Observable
 */
function exhaust() {
    return this.lift(new SwitchFirstOperator());
}
exports.exhaust = exhaust;
var SwitchFirstOperator = (function () {
    function SwitchFirstOperator() {
    }
    SwitchFirstOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new SwitchFirstSubscriber(subscriber));
    };
    return SwitchFirstOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SwitchFirstSubscriber = (function (_super) {
    __extends(SwitchFirstSubscriber, _super);
    function SwitchFirstSubscriber(destination) {
        _super.call(this, destination);
        this.hasCompleted = false;
        this.hasSubscription = false;
    }
    SwitchFirstSubscriber.prototype._next = function (value) {
        if (!this.hasSubscription) {
            this.hasSubscription = true;
            this.add(subscribeToResult_1.subscribeToResult(this, value));
        }
    };
    SwitchFirstSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (!this.hasSubscription) {
            this.destination.complete();
        }
    };
    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.hasSubscription = false;
        if (this.hasCompleted) {
            this.destination.complete();
        }
    };
    return SwitchFirstSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=exhaust.js.map

/***/ },
/* 1149 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable only if the previous projected Observable has completed.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link exhaust}.</span>
 *
 * <img src="./img/exhaustMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. When it projects a source value to
 * an Observable, the output Observable begins emitting the items emitted by
 * that projected Observable. However, `exhaustMap` ignores every new projected
 * Observable if the previous projected Observable has not yet completed. Once
 * that one completes, it will accept and flatten the next projected Observable
 * and repeat this process.
 *
 * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMap}
 * @see {@link exhaust}
 * @see {@link mergeMap}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): Observable} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable containing projected Observables
 * of each item of the source, ignoring projected Observables that start before
 * their preceding Observable has completed.
 * @method exhaustMap
 * @owner Observable
 */
function exhaustMap(project, resultSelector) {
    return this.lift(new SwitchFirstMapOperator(project, resultSelector));
}
exports.exhaustMap = exhaustMap;
var SwitchFirstMapOperator = (function () {
    function SwitchFirstMapOperator(project, resultSelector) {
        this.project = project;
        this.resultSelector = resultSelector;
    }
    SwitchFirstMapOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));
    };
    return SwitchFirstMapOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SwitchFirstMapSubscriber = (function (_super) {
    __extends(SwitchFirstMapSubscriber, _super);
    function SwitchFirstMapSubscriber(destination, project, resultSelector) {
        _super.call(this, destination);
        this.project = project;
        this.resultSelector = resultSelector;
        this.hasSubscription = false;
        this.hasCompleted = false;
        this.index = 0;
    }
    SwitchFirstMapSubscriber.prototype._next = function (value) {
        if (!this.hasSubscription) {
            this.tryNext(value);
        }
    };
    SwitchFirstMapSubscriber.prototype.tryNext = function (value) {
        var index = this.index++;
        var destination = this.destination;
        try {
            var result = this.project(value, index);
            this.hasSubscription = true;
            this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));
        }
        catch (err) {
            destination.error(err);
        }
    };
    SwitchFirstMapSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (!this.hasSubscription) {
            this.destination.complete();
        }
    };
    SwitchFirstMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        if (resultSelector) {
            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            destination.next(innerValue);
        }
    };
    SwitchFirstMapSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        try {
            var result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);
            destination.next(result);
        }
        catch (err) {
            destination.error(err);
        }
    };
    SwitchFirstMapSubscriber.prototype.notifyError = function (err) {
        this.destination.error(err);
    };
    SwitchFirstMapSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.hasSubscription = false;
        if (this.hasCompleted) {
            this.destination.complete();
        }
    };
    return SwitchFirstMapSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=exhaustMap.js.map

/***/ },
/* 1150 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var tryCatch_1 = __webpack_require__(370);
var errorObject_1 = __webpack_require__(231);
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Recursively projects each source value to an Observable which is merged in
 * the output Observable.
 *
 * <span class="informal">It's similar to {@link mergeMap}, but applies the
 * projection function to every source value as well as every output value.
 * It's recursive.</span>
 *
 * <img src="./img/expand.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an Observable, and then merging those resulting Observables and
 * emitting the results of this merger. *Expand* will re-emit on the output
 * Observable every source value. Then, each output value is given to the
 * `project` function which returns an inner Observable to be merged on the
 * output Observable. Those output values resulting from the projection are also
 * given to the `project` function to produce new output values. This is how
 * *expand* behaves recursively.
 *
 * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var powersOfTwo = clicks
 *   .mapTo(1)
 *   .expand(x => Rx.Observable.of(2 * x).delay(1000))
 *   .take(10);
 * powersOfTwo.subscribe(x => console.log(x));
 *
 * @see {@link mergeMap}
 * @see {@link mergeScan}
 *
 * @param {function(value: T, index: number) => Observable} project A function
 * that, when applied to an item emitted by the source or the output Observable,
 * returns an Observable.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The Scheduler to use for subscribing to
 * each projected inner Observable.
 * @return {Observable} An Observable that emits the source values and also
 * result of applying the projection function to each value emitted on the
 * output Observable and and merging the results of the Observables obtained
 * from this transformation.
 * @method expand
 * @owner Observable
 */
function expand(project, concurrent, scheduler) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    if (scheduler === void 0) { scheduler = undefined; }
    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;
    return this.lift(new ExpandOperator(project, concurrent, scheduler));
}
exports.expand = expand;
var ExpandOperator = (function () {
    function ExpandOperator(project, concurrent, scheduler) {
        this.project = project;
        this.concurrent = concurrent;
        this.scheduler = scheduler;
    }
    ExpandOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));
    };
    return ExpandOperator;
}());
exports.ExpandOperator = ExpandOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ExpandSubscriber = (function (_super) {
    __extends(ExpandSubscriber, _super);
    function ExpandSubscriber(destination, project, concurrent, scheduler) {
        _super.call(this, destination);
        this.project = project;
        this.concurrent = concurrent;
        this.scheduler = scheduler;
        this.index = 0;
        this.active = 0;
        this.hasCompleted = false;
        if (concurrent < Number.POSITIVE_INFINITY) {
            this.buffer = [];
        }
    }
    ExpandSubscriber.dispatch = function (arg) {
        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;
        subscriber.subscribeToProjection(result, value, index);
    };
    ExpandSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        if (destination.closed) {
            this._complete();
            return;
        }
        var index = this.index++;
        if (this.active < this.concurrent) {
            destination.next(value);
            var result = tryCatch_1.tryCatch(this.project)(value, index);
            if (result === errorObject_1.errorObject) {
                destination.error(errorObject_1.errorObject.e);
            }
            else if (!this.scheduler) {
                this.subscribeToProjection(result, value, index);
            }
            else {
                var state = { subscriber: this, result: result, value: value, index: index };
                this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));
            }
        }
        else {
            this.buffer.push(value);
        }
    };
    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {
        this.active++;
        this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));
    };
    ExpandSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.hasCompleted && this.active === 0) {
            this.destination.complete();
        }
    };
    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this._next(innerValue);
    };
    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer && buffer.length > 0) {
            this._next(buffer.shift());
        }
        if (this.hasCompleted && this.active === 0) {
            this.destination.complete();
        }
    };
    return ExpandSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.ExpandSubscriber = ExpandSubscriber;
//# sourceMappingURL=expand.js.map

/***/ },
/* 1151 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
var Subscription_1 = __webpack_require__(145);
/**
 * Returns an Observable that mirrors the source Observable, but will call a specified function when
 * the source terminates on complete or error.
 * @param {function} callback function to be called when source terminates.
 * @return {Observable} an Observable that mirrors the source, but will call the specified function on termination.
 * @method finally
 * @owner Observable
 */
function _finally(callback) {
    return this.lift(new FinallyOperator(callback));
}
exports._finally = _finally;
var FinallyOperator = (function () {
    function FinallyOperator(callback) {
        this.callback = callback;
    }
    FinallyOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new FinallySubscriber(subscriber, this.callback));
    };
    return FinallyOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var FinallySubscriber = (function (_super) {
    __extends(FinallySubscriber, _super);
    function FinallySubscriber(destination, callback) {
        _super.call(this, destination);
        this.add(new Subscription_1.Subscription(callback));
    }
    return FinallySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=finally.js.map

/***/ },
/* 1152 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var find_1 = __webpack_require__(789);
/**
 * Emits only the index of the first value emitted by the source Observable that
 * meets some condition.
 *
 * <span class="informal">It's like {@link find}, but emits the index of the
 * found value, not the value itself.</span>
 *
 * <img src="./img/findIndex.png" width="100%">
 *
 * `findIndex` searches for the first item in the source Observable that matches
 * the specified condition embodied by the `predicate`, and returns the
 * (zero-based) index of the first occurrence in the source. Unlike
 * {@link first}, the `predicate` is required in `findIndex`, and does not emit
 * an error if a valid value is not found.
 *
 * @example <caption>Emit the index of first click that happens on a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link find}
 * @see {@link first}
 * @see {@link take}
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate
 * A function called with each item to test for condition matching.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable} An Observable of the index of the first item that
 * matches the condition.
 * @method find
 * @owner Observable
 */
function findIndex(predicate, thisArg) {
    return this.lift(new find_1.FindValueOperator(predicate, this, true, thisArg));
}
exports.findIndex = findIndex;
//# sourceMappingURL=findIndex.js.map

/***/ },
/* 1153 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
var Subscription_1 = __webpack_require__(145);
var Observable_1 = __webpack_require__(13);
var Subject_1 = __webpack_require__(64);
var Map_1 = __webpack_require__(1217);
var FastMap_1 = __webpack_require__(1215);
/**
 * Groups the items emitted by an Observable according to a specified criterion,
 * and emits these grouped items as `GroupedObservables`, one
 * {@link GroupedObservable} per group.
 *
 * <img src="./img/groupBy.png" width="100%">
 *
 * @param {function(value: T): K} keySelector a function that extracts the key
 * for each item.
 * @param {function(value: T): R} [elementSelector] a function that extracts the
 * return element for each item.
 * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]
 * a function that returns an Observable to determine how long each group should
 * exist.
 * @return {Observable<GroupedObservable<K,R>>} an Observable that emits
 * GroupedObservables, each of which corresponds to a unique key value and each
 * of which emits those items from the source Observable that share that key
 * value.
 * @method groupBy
 * @owner Observable
 */
function groupBy(keySelector, elementSelector, durationSelector) {
    return this.lift(new GroupByOperator(this, keySelector, elementSelector, durationSelector));
}
exports.groupBy = groupBy;
var GroupByOperator = (function () {
    function GroupByOperator(source, keySelector, elementSelector, durationSelector) {
        this.source = source;
        this.keySelector = keySelector;
        this.elementSelector = elementSelector;
        this.durationSelector = durationSelector;
    }
    GroupByOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector));
    };
    return GroupByOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var GroupBySubscriber = (function (_super) {
    __extends(GroupBySubscriber, _super);
    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector) {
        _super.call(this, destination);
        this.keySelector = keySelector;
        this.elementSelector = elementSelector;
        this.durationSelector = durationSelector;
        this.groups = null;
        this.attemptedToUnsubscribe = false;
        this.count = 0;
    }
    GroupBySubscriber.prototype._next = function (value) {
        var key;
        try {
            key = this.keySelector(value);
        }
        catch (err) {
            this.error(err);
            return;
        }
        this._group(value, key);
    };
    GroupBySubscriber.prototype._group = function (value, key) {
        var groups = this.groups;
        if (!groups) {
            groups = this.groups = typeof key === 'string' ? new FastMap_1.FastMap() : new Map_1.Map();
        }
        var group = groups.get(key);
        var element;
        if (this.elementSelector) {
            try {
                element = this.elementSelector(value);
            }
            catch (err) {
                this.error(err);
            }
        }
        else {
            element = value;
        }
        if (!group) {
            groups.set(key, group = new Subject_1.Subject());
            var groupedObservable = new GroupedObservable(key, group, this);
            this.destination.next(groupedObservable);
            if (this.durationSelector) {
                var duration = void 0;
                try {
                    duration = this.durationSelector(new GroupedObservable(key, group));
                }
                catch (err) {
                    this.error(err);
                    return;
                }
                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));
            }
        }
        if (!group.closed) {
            group.next(element);
        }
    };
    GroupBySubscriber.prototype._error = function (err) {
        var groups = this.groups;
        if (groups) {
            groups.forEach(function (group, key) {
                group.error(err);
            });
            groups.clear();
        }
        this.destination.error(err);
    };
    GroupBySubscriber.prototype._complete = function () {
        var groups = this.groups;
        if (groups) {
            groups.forEach(function (group, key) {
                group.complete();
            });
            groups.clear();
        }
        this.destination.complete();
    };
    GroupBySubscriber.prototype.removeGroup = function (key) {
        this.groups.delete(key);
    };
    GroupBySubscriber.prototype.unsubscribe = function () {
        if (!this.closed && !this.attemptedToUnsubscribe) {
            this.attemptedToUnsubscribe = true;
            if (this.count === 0) {
                _super.prototype.unsubscribe.call(this);
            }
        }
    };
    return GroupBySubscriber;
}(Subscriber_1.Subscriber));
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var GroupDurationSubscriber = (function (_super) {
    __extends(GroupDurationSubscriber, _super);
    function GroupDurationSubscriber(key, group, parent) {
        _super.call(this);
        this.key = key;
        this.group = group;
        this.parent = parent;
    }
    GroupDurationSubscriber.prototype._next = function (value) {
        this._complete();
    };
    GroupDurationSubscriber.prototype._error = function (err) {
        var group = this.group;
        if (!group.closed) {
            group.error(err);
        }
        this.parent.removeGroup(this.key);
    };
    GroupDurationSubscriber.prototype._complete = function () {
        var group = this.group;
        if (!group.closed) {
            group.complete();
        }
        this.parent.removeGroup(this.key);
    };
    return GroupDurationSubscriber;
}(Subscriber_1.Subscriber));
/**
 * An Observable representing values belonging to the same group represented by
 * a common key. The values emitted by a GroupedObservable come from the source
 * Observable. The common key is available as the field `key` on a
 * GroupedObservable instance.
 *
 * @class GroupedObservable<K, T>
 */
var GroupedObservable = (function (_super) {
    __extends(GroupedObservable, _super);
    function GroupedObservable(key, groupSubject, refCountSubscription) {
        _super.call(this);
        this.key = key;
        this.groupSubject = groupSubject;
        this.refCountSubscription = refCountSubscription;
    }
    GroupedObservable.prototype._subscribe = function (subscriber) {
        var subscription = new Subscription_1.Subscription();
        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;
        if (refCountSubscription && !refCountSubscription.closed) {
            subscription.add(new InnerRefCountSubscription(refCountSubscription));
        }
        subscription.add(groupSubject.subscribe(subscriber));
        return subscription;
    };
    return GroupedObservable;
}(Observable_1.Observable));
exports.GroupedObservable = GroupedObservable;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var InnerRefCountSubscription = (function (_super) {
    __extends(InnerRefCountSubscription, _super);
    function InnerRefCountSubscription(parent) {
        _super.call(this);
        this.parent = parent;
        parent.count++;
    }
    InnerRefCountSubscription.prototype.unsubscribe = function () {
        var parent = this.parent;
        if (!parent.closed && !this.closed) {
            _super.prototype.unsubscribe.call(this);
            parent.count -= 1;
            if (parent.count === 0 && parent.attemptedToUnsubscribe) {
                parent.unsubscribe();
            }
        }
    };
    return InnerRefCountSubscription;
}(Subscription_1.Subscription));
//# sourceMappingURL=groupBy.js.map

/***/ },
/* 1154 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
var noop_1 = __webpack_require__(802);
/**
 * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.
 *
 * <img src="./img/ignoreElements.png" width="100%">
 *
 * @return {Observable} an empty Observable that only calls `complete`
 * or `error`, based on which one is called by the source Observable.
 * @method ignoreElements
 * @owner Observable
 */
function ignoreElements() {
    return this.lift(new IgnoreElementsOperator());
}
exports.ignoreElements = ignoreElements;
;
var IgnoreElementsOperator = (function () {
    function IgnoreElementsOperator() {
    }
    IgnoreElementsOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new IgnoreElementsSubscriber(subscriber));
    };
    return IgnoreElementsOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var IgnoreElementsSubscriber = (function (_super) {
    __extends(IgnoreElementsSubscriber, _super);
    function IgnoreElementsSubscriber() {
        _super.apply(this, arguments);
    }
    IgnoreElementsSubscriber.prototype._next = function (unused) {
        noop_1.noop();
    };
    return IgnoreElementsSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=ignoreElements.js.map

/***/ },
/* 1155 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
/**
 * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.
 *
 * <img src="./img/isEmpty.png" width="100%">
 *
 * @return {Observable} an Observable that emits a Boolean.
 * @method isEmpty
 * @owner Observable
 */
function isEmpty() {
    return this.lift(new IsEmptyOperator());
}
exports.isEmpty = isEmpty;
var IsEmptyOperator = (function () {
    function IsEmptyOperator() {
    }
    IsEmptyOperator.prototype.call = function (observer, source) {
        return source._subscribe(new IsEmptySubscriber(observer));
    };
    return IsEmptyOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var IsEmptySubscriber = (function (_super) {
    __extends(IsEmptySubscriber, _super);
    function IsEmptySubscriber(destination) {
        _super.call(this, destination);
    }
    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {
        var destination = this.destination;
        destination.next(isEmpty);
        destination.complete();
    };
    IsEmptySubscriber.prototype._next = function (value) {
        this.notifyComplete(false);
    };
    IsEmptySubscriber.prototype._complete = function () {
        this.notifyComplete(true);
    };
    return IsEmptySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=isEmpty.js.map

/***/ },
/* 1156 */
/***/ function(module, exports) {

"use strict";
"use strict";
/**
 * @param func
 * @return {Observable<R>}
 * @method let
 * @owner Observable
 */
function letProto(func) {
    return func(this);
}
exports.letProto = letProto;
//# sourceMappingURL=let.js.map

/***/ },
/* 1157 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
/**
 * Emits the given constant value on the output Observable every time the source
 * Observable emits a value.
 *
 * <span class="informal">Like {@link map}, but it maps every source value to
 * the same output value every time.</span>
 *
 * <img src="./img/mapTo.png" width="100%">
 *
 * Takes a constant `value` as argument, and emits that whenever the source
 * Observable emits a value. In other words, ignores the actual source value,
 * and simply uses the emission moment to know when to emit the given `value`.
 *
 * @example <caption>Map every every click to the string 'Hi'</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var greetings = clicks.mapTo('Hi');
 * greetings.subscribe(x => console.log(x));
 *
 * @see {@link map}
 *
 * @param {any} value The value to map each source value to.
 * @return {Observable} An Observable that emits the given `value` every time
 * the source Observable emits something.
 * @method mapTo
 * @owner Observable
 */
function mapTo(value) {
    return this.lift(new MapToOperator(value));
}
exports.mapTo = mapTo;
var MapToOperator = (function () {
    function MapToOperator(value) {
        this.value = value;
    }
    MapToOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new MapToSubscriber(subscriber, this.value));
    };
    return MapToOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MapToSubscriber = (function (_super) {
    __extends(MapToSubscriber, _super);
    function MapToSubscriber(destination, value) {
        _super.call(this, destination);
        this.value = value;
    }
    MapToSubscriber.prototype._next = function (x) {
        this.destination.next(this.value);
    };
    return MapToSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=mapTo.js.map

/***/ },
/* 1158 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
var Notification_1 = __webpack_require__(373);
/**
 * Represents all of the notifications from the source Observable as `next`
 * emissions marked with their original types within {@link Notification}
 * objects.
 *
 * <span class="informal">Wraps `next`, `error` and `complete` emissions in
 * {@link Notification} objects, emitted as `next` on the output Observable.
 * </span>
 *
 * <img src="./img/materialize.png" width="100%">
 *
 * `materialize` returns an Observable that emits a `next` notification for each
 * `next`, `error`, or `complete` emission of the source Observable. When the
 * source Observable emits `complete`, the output Observable will emit `next` as
 * a Notification of type "complete", and then it will emit `complete` as well.
 * When the source Observable emits `error`, the output will emit `next` as a
 * Notification of type "error", and then `complete`.
 *
 * This operator is useful for producing metadata of the source Observable, to
 * be consumed as `next` emissions. Use it in conjunction with
 * {@link dematerialize}.
 *
 * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>
 * var letters = Rx.Observable.of('a', 'b', 13, 'd');
 * var upperCase = letters.map(x => x.toUpperCase());
 * var materialized = upperCase.materialize();
 * materialized.subscribe(x => console.log(x));
 *
 * @see {@link Notification}
 * @see {@link dematerialize}
 *
 * @return {Observable<Notification<T>>} An Observable that emits
 * {@link Notification} objects that wrap the original emissions from the source
 * Observable with metadata.
 * @method materialize
 * @owner Observable
 */
function materialize() {
    return this.lift(new MaterializeOperator());
}
exports.materialize = materialize;
var MaterializeOperator = (function () {
    function MaterializeOperator() {
    }
    MaterializeOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new MaterializeSubscriber(subscriber));
    };
    return MaterializeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MaterializeSubscriber = (function (_super) {
    __extends(MaterializeSubscriber, _super);
    function MaterializeSubscriber(destination) {
        _super.call(this, destination);
    }
    MaterializeSubscriber.prototype._next = function (value) {
        this.destination.next(Notification_1.Notification.createNext(value));
    };
    MaterializeSubscriber.prototype._error = function (err) {
        var destination = this.destination;
        destination.next(Notification_1.Notification.createError(err));
        destination.complete();
    };
    MaterializeSubscriber.prototype._complete = function () {
        var destination = this.destination;
        destination.next(Notification_1.Notification.createComplete());
        destination.complete();
    };
    return MaterializeSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=materialize.js.map

/***/ },
/* 1159 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var reduce_1 = __webpack_require__(374);
/**
 * The Max operator operates on an Observable that emits numbers (or items that can be evaluated as numbers),
 * and when source Observable completes it emits a single item: the item with the largest number.
 *
 * <img src="./img/max.png" width="100%">
 *
 * @param {Function} optional comparer function that it will use instead of its default to compare the value of two
 * items.
 * @return {Observable} an Observable that emits item with the largest number.
 * @method max
 * @owner Observable
 */
function max(comparer) {
    var max = (typeof comparer === 'function')
        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }
        : function (x, y) { return x > y ? x : y; };
    return this.lift(new reduce_1.ReduceOperator(max));
}
exports.max = max;
//# sourceMappingURL=max.js.map

/***/ },
/* 1160 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var tryCatch_1 = __webpack_require__(370);
var errorObject_1 = __webpack_require__(231);
var subscribeToResult_1 = __webpack_require__(144);
var OuterSubscriber_1 = __webpack_require__(143);
/**
 * @param project
 * @param seed
 * @param concurrent
 * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}
 * @method mergeScan
 * @owner Observable
 */
function mergeScan(project, seed, concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    return this.lift(new MergeScanOperator(project, seed, concurrent));
}
exports.mergeScan = mergeScan;
var MergeScanOperator = (function () {
    function MergeScanOperator(project, seed, concurrent) {
        this.project = project;
        this.seed = seed;
        this.concurrent = concurrent;
    }
    MergeScanOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new MergeScanSubscriber(subscriber, this.project, this.seed, this.concurrent));
    };
    return MergeScanOperator;
}());
exports.MergeScanOperator = MergeScanOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MergeScanSubscriber = (function (_super) {
    __extends(MergeScanSubscriber, _super);
    function MergeScanSubscriber(destination, project, acc, concurrent) {
        _super.call(this, destination);
        this.project = project;
        this.acc = acc;
        this.concurrent = concurrent;
        this.hasValue = false;
        this.hasCompleted = false;
        this.buffer = [];
        this.active = 0;
        this.index = 0;
    }
    MergeScanSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            var index = this.index++;
            var ish = tryCatch_1.tryCatch(this.project)(this.acc, value);
            var destination = this.destination;
            if (ish === errorObject_1.errorObject) {
                destination.error(errorObject_1.errorObject.e);
            }
            else {
                this.active++;
                this._innerSub(ish, value, index);
            }
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {
        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));
    };
    MergeScanSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            if (this.hasValue === false) {
                this.destination.next(this.acc);
            }
            this.destination.complete();
        }
    };
    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var destination = this.destination;
        this.acc = innerValue;
        this.hasValue = true;
        destination.next(innerValue);
    };
    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            if (this.hasValue === false) {
                this.destination.next(this.acc);
            }
            this.destination.complete();
        }
    };
    return MergeScanSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.MergeScanSubscriber = MergeScanSubscriber;
//# sourceMappingURL=mergeScan.js.map

/***/ },
/* 1161 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var reduce_1 = __webpack_require__(374);
/**
 * The Min operator operates on an Observable that emits numbers (or items that can be evaluated as numbers),
 * and when source Observable completes it emits a single item: the item with the smallest number.
 *
 * <img src="./img/min.png" width="100%">
 *
 * @param {Function} optional comparer function that it will use instead of its default to compare the value of two items.
 * @return {Observable<R>} an Observable that emits item with the smallest number.
 * @method min
 * @owner Observable
 */
function min(comparer) {
    var min = (typeof comparer === 'function')
        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }
        : function (x, y) { return x < y ? x : y; };
    return this.lift(new reduce_1.ReduceOperator(min));
}
exports.min = min;
//# sourceMappingURL=min.js.map

/***/ },
/* 1162 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
/**
 * Groups pairs of consecutive emissions together and emits them as an array of
 * two values.
 *
 * <span class="informal">Puts the current value and previous value together as
 * an array, and emits that.</span>
 *
 * <img src="./img/pairwise.png" width="100%">
 *
 * The Nth emission from the source Observable will cause the output Observable
 * to emit an array [(N-1)th, Nth] of the previous and the current value, as a
 * pair. For this reason, `pairwise` emits on the second and subsequent
 * emissions from the source Observable, but not on the first emission, because
 * there is no previous value in that case.
 *
 * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var pairs = clicks.pairwise();
 * var distance = pairs.map(pair => {
 *   var x0 = pair[0].clientX;
 *   var y0 = pair[0].clientY;
 *   var x1 = pair[1].clientX;
 *   var y1 = pair[1].clientY;
 *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));
 * });
 * distance.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 *
 * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of
 * consecutive values from the source Observable.
 * @method pairwise
 * @owner Observable
 */
function pairwise() {
    return this.lift(new PairwiseOperator());
}
exports.pairwise = pairwise;
var PairwiseOperator = (function () {
    function PairwiseOperator() {
    }
    PairwiseOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new PairwiseSubscriber(subscriber));
    };
    return PairwiseOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var PairwiseSubscriber = (function (_super) {
    __extends(PairwiseSubscriber, _super);
    function PairwiseSubscriber(destination) {
        _super.call(this, destination);
        this.hasPrev = false;
    }
    PairwiseSubscriber.prototype._next = function (value) {
        if (this.hasPrev) {
            this.destination.next([this.prev, value]);
        }
        else {
            this.hasPrev = true;
        }
        this.prev = value;
    };
    return PairwiseSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=pairwise.js.map

/***/ },
/* 1163 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var not_1 = __webpack_require__(1220);
var filter_1 = __webpack_require__(375);
/**
 * Splits the source Observable into two, one with values that satisfy a
 * predicate, and another with values that don't satisfy the predicate.
 *
 * <span class="informal">It's like {@link filter}, but returns two Observables:
 * one like the output of {@link filter}, and the other with values that did not
 * pass the condition.</span>
 *
 * <img src="./img/partition.png" width="100%">
 *
 * `partition` outputs an array with two Observables that partition the values
 * from the source Observable through the given `predicate` function. The first
 * Observable in that array emits source values for which the predicate argument
 * returns true. The second Observable emits source values for which the
 * predicate returns false. The first behaves like {@link filter} and the second
 * behaves like {@link filter} with the predicate negated.
 *
 * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');
 * var clicksOnDivs = parts[0];
 * var clicksElsewhere = parts[1];
 * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));
 * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));
 *
 * @see {@link filter}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates each value emitted by the source Observable. If it returns `true`,
 * the value is emitted on the first Observable in the returned array, if
 * `false` the value is emitted on the second Observable in the array. The
 * `index` parameter is the number `i` for the i-th source emission that has
 * happened since the subscription, starting from the number `0`.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {[Observable<T>, Observable<T>]} An array with two Observables: one
 * with values that passed the predicate, and another with values that did not
 * pass the predicate.
 * @method partition
 * @owner Observable
 */
function partition(predicate, thisArg) {
    return [
        filter_1.filter.call(this, predicate),
        filter_1.filter.call(this, not_1.not(predicate, thisArg))
    ];
}
exports.partition = partition;
//# sourceMappingURL=partition.js.map

/***/ },
/* 1164 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var map_1 = __webpack_require__(101);
/**
 * Maps each source value (an object) to its specified nested property.
 *
 * <span class="informal">Like {@link map}, but meant only for picking one of
 * the nested properties of every emitted object.</span>
 *
 * <img src="./img/pluck.png" width="100%">
 *
 * Given a list of strings describing a path to an object property, retrieves
 * the value of a specified nested property from all values in the source
 * Observable. If a property can't be resolved, it will return `undefined` for
 * that value.
 *
 * @example <caption>Map every every click to the tagName of the clicked target element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var tagNames = clicks.pluck('target', 'tagName');
 * tagNames.subscribe(x => console.log(x));
 *
 * @see {@link map}
 *
 * @param {...string} properties The nested properties to pluck from each source
 * value (an object).
 * @return {Observable} Returns a new Observable of property values from the
 * source values.
 * @method pluck
 * @owner Observable
 */
function pluck() {
    var properties = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        properties[_i - 0] = arguments[_i];
    }
    var length = properties.length;
    if (length === 0) {
        throw new Error('list of properties cannot be empty.');
    }
    return map_1.map.call(this, plucker(properties, length));
}
exports.pluck = pluck;
function plucker(props, length) {
    var mapper = function (x) {
        var currentProp = x;
        for (var i = 0; i < length; i++) {
            var p = currentProp[props[i]];
            if (typeof p !== 'undefined') {
                currentProp = p;
            }
            else {
                return undefined;
            }
        }
        return currentProp;
    };
    return mapper;
}
//# sourceMappingURL=pluck.js.map

/***/ },
/* 1165 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var Subject_1 = __webpack_require__(64);
var multicast_1 = __webpack_require__(682);
/**
 * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called
 * before it begins emitting items to those Observers that have subscribed to it.
 *
 * <img src="./img/publish.png" width="100%">
 *
 * @param {Function} Optional selector function which can use the multicasted source sequence as many times as needed,
 * without causing multiple subscriptions to the source sequence.
 * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.
 * @return a ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.
 * @method publish
 * @owner Observable
 */
function publish(selector) {
    return selector ? multicast_1.multicast.call(this, function () { return new Subject_1.Subject(); }, selector) :
        multicast_1.multicast.call(this, new Subject_1.Subject());
}
exports.publish = publish;
//# sourceMappingURL=publish.js.map

/***/ },
/* 1166 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var BehaviorSubject_1 = __webpack_require__(148);
var multicast_1 = __webpack_require__(682);
/**
 * @param value
 * @return {ConnectableObservable<T>}
 * @method publishBehavior
 * @owner Observable
 */
function publishBehavior(value) {
    return multicast_1.multicast.call(this, new BehaviorSubject_1.BehaviorSubject(value));
}
exports.publishBehavior = publishBehavior;
//# sourceMappingURL=publishBehavior.js.map

/***/ },
/* 1167 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var AsyncSubject_1 = __webpack_require__(697);
var multicast_1 = __webpack_require__(682);
/**
 * @return {ConnectableObservable<T>}
 * @method publishLast
 * @owner Observable
 */
function publishLast() {
    return multicast_1.multicast.call(this, new AsyncSubject_1.AsyncSubject());
}
exports.publishLast = publishLast;
//# sourceMappingURL=publishLast.js.map

/***/ },
/* 1168 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var ReplaySubject_1 = __webpack_require__(698);
var multicast_1 = __webpack_require__(682);
/**
 * @param bufferSize
 * @param windowTime
 * @param scheduler
 * @return {ConnectableObservable<T>}
 * @method publishReplay
 * @owner Observable
 */
function publishReplay(bufferSize, windowTime, scheduler) {
    if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }
    if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }
    return multicast_1.multicast.call(this, new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler));
}
exports.publishReplay = publishReplay;
//# sourceMappingURL=publishReplay.js.map

/***/ },
/* 1169 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
var EmptyObservable_1 = __webpack_require__(233);
/**
 * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times,
 * on a particular Scheduler.
 *
 * <img src="./img/repeat.png" width="100%">
 *
 * @param {Scheduler} [scheduler] the Scheduler to emit the items on.
 * @param {number} [count] the number of times the source Observable items are repeated, a count of 0 will yield
 * an empty Observable.
 * @return {Observable} an Observable that repeats the stream of items emitted by the source Observable at most
 * count times.
 * @method repeat
 * @owner Observable
 */
function repeat(count) {
    if (count === void 0) { count = -1; }
    if (count === 0) {
        return new EmptyObservable_1.EmptyObservable();
    }
    else if (count < 0) {
        return this.lift(new RepeatOperator(-1, this));
    }
    else {
        return this.lift(new RepeatOperator(count - 1, this));
    }
}
exports.repeat = repeat;
var RepeatOperator = (function () {
    function RepeatOperator(count, source) {
        this.count = count;
        this.source = source;
    }
    RepeatOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new RepeatSubscriber(subscriber, this.count, this.source));
    };
    return RepeatOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RepeatSubscriber = (function (_super) {
    __extends(RepeatSubscriber, _super);
    function RepeatSubscriber(destination, count, source) {
        _super.call(this, destination);
        this.count = count;
        this.source = source;
    }
    RepeatSubscriber.prototype.complete = function () {
        if (!this.isStopped) {
            var _a = this, source = _a.source, count = _a.count;
            if (count === 0) {
                return _super.prototype.complete.call(this);
            }
            else if (count > -1) {
                this.count = count - 1;
            }
            this.unsubscribe();
            this.isStopped = false;
            this.closed = false;
            source.subscribe(this);
        }
    };
    return RepeatSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=repeat.js.map

/***/ },
/* 1170 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(64);
var tryCatch_1 = __webpack_require__(370);
var errorObject_1 = __webpack_require__(231);
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Returns an Observable that emits the same values as the source observable with the exception of a `complete`.
 * A `complete` will cause the emission of the Throwable that cause the complete to the Observable returned from
 * notificationHandler. If that Observable calls onComplete or `complete` then retry will call `complete` or `error`
 * on the child subscription. Otherwise, this Observable will resubscribe to the source observable, on a particular
 * Scheduler.
 *
 * <img src="./img/repeatWhen.png" width="100%">
 *
 * @param {notificationHandler} receives an Observable of notifications with which a user can `complete` or `error`,
 * aborting the retry.
 * @param {scheduler} the Scheduler on which to subscribe to the source Observable.
 * @return {Observable} the source Observable modified with retry logic.
 * @method repeatWhen
 * @owner Observable
 */
function repeatWhen(notifier) {
    return this.lift(new RepeatWhenOperator(notifier, this));
}
exports.repeatWhen = repeatWhen;
var RepeatWhenOperator = (function () {
    function RepeatWhenOperator(notifier, source) {
        this.notifier = notifier;
        this.source = source;
    }
    RepeatWhenOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, this.source));
    };
    return RepeatWhenOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RepeatWhenSubscriber = (function (_super) {
    __extends(RepeatWhenSubscriber, _super);
    function RepeatWhenSubscriber(destination, notifier, source) {
        _super.call(this, destination);
        this.notifier = notifier;
        this.source = source;
    }
    RepeatWhenSubscriber.prototype.complete = function () {
        if (!this.isStopped) {
            var notifications = this.notifications;
            var retries = this.retries;
            var retriesSubscription = this.retriesSubscription;
            if (!retries) {
                notifications = new Subject_1.Subject();
                retries = tryCatch_1.tryCatch(this.notifier)(notifications);
                if (retries === errorObject_1.errorObject) {
                    return _super.prototype.complete.call(this);
                }
                retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);
            }
            else {
                this.notifications = null;
                this.retriesSubscription = null;
            }
            this.unsubscribe();
            this.closed = false;
            this.notifications = notifications;
            this.retries = retries;
            this.retriesSubscription = retriesSubscription;
            notifications.next();
        }
    };
    RepeatWhenSubscriber.prototype._unsubscribe = function () {
        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;
        if (notifications) {
            notifications.unsubscribe();
            this.notifications = null;
        }
        if (retriesSubscription) {
            retriesSubscription.unsubscribe();
            this.retriesSubscription = null;
        }
        this.retries = null;
    };
    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var _a = this, notifications = _a.notifications, retries = _a.retries, retriesSubscription = _a.retriesSubscription;
        this.notifications = null;
        this.retries = null;
        this.retriesSubscription = null;
        this.unsubscribe();
        this.isStopped = false;
        this.closed = false;
        this.notifications = notifications;
        this.retries = retries;
        this.retriesSubscription = retriesSubscription;
        this.source.subscribe(this);
    };
    return RepeatWhenSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=repeatWhen.js.map

/***/ },
/* 1171 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
/**
 * Returns an Observable that mirrors the source Observable, resubscribing to it if it calls `error` and the
 * predicate returns true for that specific exception and retry count.
 * If the source Observable calls `error`, this method will resubscribe to the source Observable for a maximum of
 * count resubscriptions (given as a number parameter) rather than propagating the `error` call.
 *
 * <img src="./img/retry.png" width="100%">
 *
 * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted
 * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second
 * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications
 * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].
 * @param {number} number of retry attempts before failing.
 * @return {Observable} the source Observable modified with the retry logic.
 * @method retry
 * @owner Observable
 */
function retry(count) {
    if (count === void 0) { count = -1; }
    return this.lift(new RetryOperator(count, this));
}
exports.retry = retry;
var RetryOperator = (function () {
    function RetryOperator(count, source) {
        this.count = count;
        this.source = source;
    }
    RetryOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new RetrySubscriber(subscriber, this.count, this.source));
    };
    return RetryOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RetrySubscriber = (function (_super) {
    __extends(RetrySubscriber, _super);
    function RetrySubscriber(destination, count, source) {
        _super.call(this, destination);
        this.count = count;
        this.source = source;
    }
    RetrySubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _a = this, source = _a.source, count = _a.count;
            if (count === 0) {
                return _super.prototype.error.call(this, err);
            }
            else if (count > -1) {
                this.count = count - 1;
            }
            this.unsubscribe();
            this.isStopped = false;
            this.closed = false;
            source.subscribe(this);
        }
    };
    return RetrySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=retry.js.map

/***/ },
/* 1172 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(64);
var tryCatch_1 = __webpack_require__(370);
var errorObject_1 = __webpack_require__(231);
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Returns an Observable that emits the same values as the source observable with the exception of an `error`.
 * An `error` will cause the emission of the Throwable that cause the error to the Observable returned from
 * notificationHandler. If that Observable calls onComplete or `error` then retry will call `complete` or `error`
 * on the child subscription. Otherwise, this Observable will resubscribe to the source observable, on a particular
 * Scheduler.
 *
 * <img src="./img/retryWhen.png" width="100%">
 *
 * @param {notificationHandler} receives an Observable of notifications with which a user can `complete` or `error`,
 * aborting the retry.
 * @param {scheduler} the Scheduler on which to subscribe to the source Observable.
 * @return {Observable} the source Observable modified with retry logic.
 * @method retryWhen
 * @owner Observable
 */
function retryWhen(notifier) {
    return this.lift(new RetryWhenOperator(notifier, this));
}
exports.retryWhen = retryWhen;
var RetryWhenOperator = (function () {
    function RetryWhenOperator(notifier, source) {
        this.notifier = notifier;
        this.source = source;
    }
    RetryWhenOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));
    };
    return RetryWhenOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RetryWhenSubscriber = (function (_super) {
    __extends(RetryWhenSubscriber, _super);
    function RetryWhenSubscriber(destination, notifier, source) {
        _super.call(this, destination);
        this.notifier = notifier;
        this.source = source;
    }
    RetryWhenSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var errors = this.errors;
            var retries = this.retries;
            var retriesSubscription = this.retriesSubscription;
            if (!retries) {
                errors = new Subject_1.Subject();
                retries = tryCatch_1.tryCatch(this.notifier)(errors);
                if (retries === errorObject_1.errorObject) {
                    return _super.prototype.error.call(this, errorObject_1.errorObject.e);
                }
                retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);
            }
            else {
                this.errors = null;
                this.retriesSubscription = null;
            }
            this.unsubscribe();
            this.closed = false;
            this.errors = errors;
            this.retries = retries;
            this.retriesSubscription = retriesSubscription;
            errors.next(err);
        }
    };
    RetryWhenSubscriber.prototype._unsubscribe = function () {
        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;
        if (errors) {
            errors.unsubscribe();
            this.errors = null;
        }
        if (retriesSubscription) {
            retriesSubscription.unsubscribe();
            this.retriesSubscription = null;
        }
        this.retries = null;
    };
    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var _a = this, errors = _a.errors, retries = _a.retries, retriesSubscription = _a.retriesSubscription;
        this.errors = null;
        this.retries = null;
        this.retriesSubscription = null;
        this.unsubscribe();
        this.isStopped = false;
        this.closed = false;
        this.errors = errors;
        this.retries = retries;
        this.retriesSubscription = retriesSubscription;
        this.source.subscribe(this);
    };
    return RetryWhenSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=retryWhen.js.map

/***/ },
/* 1173 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Emits the most recently emitted value from the source Observable whenever
 * another Observable, the `notifier`, emits.
 *
 * <span class="informal">It's like {@link sampleTime}, but samples whenever
 * the `notifier` Observable emits something.</span>
 *
 * <img src="./img/sample.png" width="100%">
 *
 * Whenever the `notifier` Observable emits a value or completes, `sample`
 * looks at the source Observable and emits whichever value it has most recently
 * emitted since the previous sampling, unless the source has not emitted
 * anything since the previous sampling. The `notifier` is subscribed to as soon
 * as the output Observable is subscribed.
 *
 * @example <caption>On every click, sample the most recent "seconds" timer</caption>
 * var seconds = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = seconds.sample(clicks);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounce}
 * @see {@link sampleTime}
 * @see {@link throttle}
 *
 * @param {Observable<any>} notifier The Observable to use for sampling the
 * source Observable.
 * @return {Observable<T>} An Observable that emits the results of sampling the
 * values emitted by the source Observable whenever the notifier Observable
 * emits value or completes.
 * @method sample
 * @owner Observable
 */
function sample(notifier) {
    return this.lift(new SampleOperator(notifier));
}
exports.sample = sample;
var SampleOperator = (function () {
    function SampleOperator(notifier) {
        this.notifier = notifier;
    }
    SampleOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new SampleSubscriber(subscriber, this.notifier));
    };
    return SampleOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SampleSubscriber = (function (_super) {
    __extends(SampleSubscriber, _super);
    function SampleSubscriber(destination, notifier) {
        _super.call(this, destination);
        this.hasValue = false;
        this.add(subscribeToResult_1.subscribeToResult(this, notifier));
    }
    SampleSubscriber.prototype._next = function (value) {
        this.value = value;
        this.hasValue = true;
    };
    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.emitValue();
    };
    SampleSubscriber.prototype.notifyComplete = function () {
        this.emitValue();
    };
    SampleSubscriber.prototype.emitValue = function () {
        if (this.hasValue) {
            this.hasValue = false;
            this.destination.next(this.value);
        }
    };
    return SampleSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=sample.js.map

/***/ },
/* 1174 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
var async_1 = __webpack_require__(666);
/**
 * Emits the most recently emitted value from the source Observable within
 * periodic time intervals.
 *
 * <span class="informal">Samples the source Observable at periodic time
 * intervals, emitting what it samples.</span>
 *
 * <img src="./img/sampleTime.png" width="100%">
 *
 * `sampleTime` periodically looks at the source Observable and emits whichever
 * value it has most recently emitted since the previous sampling, unless the
 * source has not emitted anything since the previous sampling. The sampling
 * happens periodically in time every `period` milliseconds (or the time unit
 * defined by the optional `scheduler` argument). The sampling starts as soon as
 * the output Observable is subscribed.
 *
 * @example <caption>Every second, emit the most recent click at most once</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.sampleTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sample}
 * @see {@link throttleTime}
 *
 * @param {number} period The sampling period expressed in milliseconds or the
 * time unit determined internally by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link Scheduler} to use for
 * managing the timers that handle the sampling.
 * @return {Observable<T>} An Observable that emits the results of sampling the
 * values emitted by the source Observable at the specified time interval.
 * @method sampleTime
 * @owner Observable
 */
function sampleTime(period, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return this.lift(new SampleTimeOperator(period, scheduler));
}
exports.sampleTime = sampleTime;
var SampleTimeOperator = (function () {
    function SampleTimeOperator(period, scheduler) {
        this.period = period;
        this.scheduler = scheduler;
    }
    SampleTimeOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));
    };
    return SampleTimeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SampleTimeSubscriber = (function (_super) {
    __extends(SampleTimeSubscriber, _super);
    function SampleTimeSubscriber(destination, period, scheduler) {
        _super.call(this, destination);
        this.period = period;
        this.scheduler = scheduler;
        this.hasValue = false;
        this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period: period }));
    }
    SampleTimeSubscriber.prototype._next = function (value) {
        this.lastValue = value;
        this.hasValue = true;
    };
    SampleTimeSubscriber.prototype.notifyNext = function () {
        if (this.hasValue) {
            this.hasValue = false;
            this.destination.next(this.lastValue);
        }
    };
    return SampleTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchNotification(state) {
    var subscriber = state.subscriber, period = state.period;
    subscriber.notifyNext();
    this.schedule(state, period);
}
//# sourceMappingURL=sampleTime.js.map

/***/ },
/* 1175 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
/**
 * Applies an accumulator function over the source Observable, and returns each
 * intermediate result, with an optional seed value.
 *
 * <span class="informal">It's like {@link reduce}, but emits the current
 * accumulation whenever the source emits a value.</span>
 *
 * <img src="./img/scan.png" width="100%">
 *
 * Combines together all values emitted on the source, using an accumulator
 * function that knows how to join a new source value into the accumulation from
 * the past. Is similar to {@link reduce}, but emits the intermediate
 * accumulations.
 *
 * Returns an Observable that applies a specified `accumulator` function to each
 * item emitted by the source Observable. If a `seed` value is specified, then
 * that value will be used as the initial value for the accumulator. If no seed
 * value is specified, the first item of the source is used as the seed.
 *
 * @example <caption>Count the number of click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var ones = clicks.mapTo(1);
 * var seed = 0;
 * var count = ones.scan((acc, one) => acc + one, seed);
 * count.subscribe(x => console.log(x));
 *
 * @see {@link expand}
 * @see {@link mergeScan}
 * @see {@link reduce}
 *
 * @param {function(acc: R, value: T, index: number): R} accumulator
 * The accumulator function called on each source value.
 * @param {T|R} [seed] The initial accumulation value.
 * @return {Observable<R>} An observable of the accumulated values.
 * @method scan
 * @owner Observable
 */
function scan(accumulator, seed) {
    return this.lift(new ScanOperator(accumulator, seed));
}
exports.scan = scan;
var ScanOperator = (function () {
    function ScanOperator(accumulator, seed) {
        this.accumulator = accumulator;
        this.seed = seed;
    }
    ScanOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed));
    };
    return ScanOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ScanSubscriber = (function (_super) {
    __extends(ScanSubscriber, _super);
    function ScanSubscriber(destination, accumulator, seed) {
        _super.call(this, destination);
        this.accumulator = accumulator;
        this.index = 0;
        this.accumulatorSet = false;
        this.seed = seed;
        this.accumulatorSet = typeof seed !== 'undefined';
    }
    Object.defineProperty(ScanSubscriber.prototype, "seed", {
        get: function () {
            return this._seed;
        },
        set: function (value) {
            this.accumulatorSet = true;
            this._seed = value;
        },
        enumerable: true,
        configurable: true
    });
    ScanSubscriber.prototype._next = function (value) {
        if (!this.accumulatorSet) {
            this.seed = value;
            this.destination.next(value);
        }
        else {
            return this._tryNext(value);
        }
    };
    ScanSubscriber.prototype._tryNext = function (value) {
        var index = this.index++;
        var result;
        try {
            result = this.accumulator(this.seed, value, index);
        }
        catch (err) {
            this.destination.error(err);
        }
        this.seed = result;
        this.destination.next(result);
    };
    return ScanSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=scan.js.map

/***/ },
/* 1176 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
var tryCatch_1 = __webpack_require__(370);
var errorObject_1 = __webpack_require__(231);
/**
 * Compares all values of two observables in sequence using an optional comparor function
 * and returns an observable of a single boolean value representing whether or not the two sequences
 * are equal.
 *
 * <span class="informal">Checks to see of all values emitted by both observables are equal, in order.</span>
 *
 * <img src="./img/sequenceEqual.png" width="100%">
 *
 * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either
 * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom
 * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the
 * observables completes, the operator will wait for the other observable to complete; If the other
 * observable emits before completing, the returned observable will emit `false` and complete. If one observable never
 * completes or emits after the other complets, the returned observable will never complete.
 *
 * @example <caption>figure out if the Konami code matches</caption>
 * var code = Observable.from([
 *  "ArrowUp",
 *  "ArrowUp",
 *  "ArrowDown",
 *  "ArrowDown",
 *  "ArrowLeft",
 *  "ArrowRight",
 *  "ArrowLeft",
 *  "ArrowRight",
 *  "KeyB",
 *  "KeyA",
 *  "Enter" // no start key, clearly.
 * ]);
 *
 * var keys = Rx.Observable.fromEvent(document, 'keyup')
 *  .map(e => e.code);
 * var matches = keys.bufferCount(11, 1)
 *  .mergeMap(
 *    last11 =>
 *      Rx.Observable.from(last11)
 *        .sequenceEqual(code)
 *   );
 * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));
 *
 * @see {@link combineLatest}
 * @see {@link zip}
 * @see {@link withLatestFrom}
 *
 * @param {Observable} compareTo the observable sequence to compare the source sequence to.
 * @param {function} [comparor] An optional function to compare each value pair
 * @return {Observable} An Observable of a single boolean value representing whether or not
 * the values emitted by both observables were equal in sequence
 * @method sequenceEqual
 * @owner Observable
 */
function sequenceEqual(compareTo, comparor) {
    return this.lift(new SequenceEqualOperator(compareTo, comparor));
}
exports.sequenceEqual = sequenceEqual;
var SequenceEqualOperator = (function () {
    function SequenceEqualOperator(compareTo, comparor) {
        this.compareTo = compareTo;
        this.comparor = comparor;
    }
    SequenceEqualOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));
    };
    return SequenceEqualOperator;
}());
exports.SequenceEqualOperator = SequenceEqualOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SequenceEqualSubscriber = (function (_super) {
    __extends(SequenceEqualSubscriber, _super);
    function SequenceEqualSubscriber(destination, compareTo, comparor) {
        _super.call(this, destination);
        this.compareTo = compareTo;
        this.comparor = comparor;
        this._a = [];
        this._b = [];
        this._oneComplete = false;
        this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));
    }
    SequenceEqualSubscriber.prototype._next = function (value) {
        if (this._oneComplete && this._b.length === 0) {
            this.emit(false);
        }
        else {
            this._a.push(value);
            this.checkValues();
        }
    };
    SequenceEqualSubscriber.prototype._complete = function () {
        if (this._oneComplete) {
            this.emit(this._a.length === 0 && this._b.length === 0);
        }
        else {
            this._oneComplete = true;
        }
    };
    SequenceEqualSubscriber.prototype.checkValues = function () {
        var _c = this, _a = _c._a, _b = _c._b, comparor = _c.comparor;
        while (_a.length > 0 && _b.length > 0) {
            var a = _a.shift();
            var b = _b.shift();
            var areEqual = false;
            if (comparor) {
                areEqual = tryCatch_1.tryCatch(comparor)(a, b);
                if (areEqual === errorObject_1.errorObject) {
                    this.destination.error(errorObject_1.errorObject.e);
                }
            }
            else {
                areEqual = a === b;
            }
            if (!areEqual) {
                this.emit(false);
            }
        }
    };
    SequenceEqualSubscriber.prototype.emit = function (value) {
        var destination = this.destination;
        destination.next(value);
        destination.complete();
    };
    SequenceEqualSubscriber.prototype.nextB = function (value) {
        if (this._oneComplete && this._a.length === 0) {
            this.emit(false);
        }
        else {
            this._b.push(value);
            this.checkValues();
        }
    };
    return SequenceEqualSubscriber;
}(Subscriber_1.Subscriber));
exports.SequenceEqualSubscriber = SequenceEqualSubscriber;
var SequenceEqualCompareToSubscriber = (function (_super) {
    __extends(SequenceEqualCompareToSubscriber, _super);
    function SequenceEqualCompareToSubscriber(destination, parent) {
        _super.call(this, destination);
        this.parent = parent;
    }
    SequenceEqualCompareToSubscriber.prototype._next = function (value) {
        this.parent.nextB(value);
    };
    SequenceEqualCompareToSubscriber.prototype._error = function (err) {
        this.parent.error(err);
    };
    SequenceEqualCompareToSubscriber.prototype._complete = function () {
        this.parent._complete();
    };
    return SequenceEqualCompareToSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=sequenceEqual.js.map

/***/ },
/* 1177 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var multicast_1 = __webpack_require__(682);
var Subject_1 = __webpack_require__(64);
function shareSubjectFactory() {
    return new Subject_1.Subject();
}
/**
 * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one
 * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will
 * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.
 * This is an alias for .publish().refCount().
 *
 * <img src="./img/share.png" width="100%">
 *
 * @return {Observable<T>} an Observable that upon connection causes the source Observable to emit items to its Observers
 * @method share
 * @owner Observable
 */
function share() {
    return multicast_1.multicast.call(this, shareSubjectFactory).refCount();
}
exports.share = share;
;
//# sourceMappingURL=share.js.map

/***/ },
/* 1178 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
var EmptyError_1 = __webpack_require__(150);
/**
 * Returns an Observable that emits the single item emitted by the source Observable that matches a specified
 * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no
 * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.
 *
 * <img src="./img/single.png" width="100%">
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 * @param {Function} a predicate function to evaluate items emitted by the source Observable.
 * @return {Observable<T>} an Observable that emits the single item emitted by the source Observable that matches
 * the predicate.
 .
 * @method single
 * @owner Observable
 */
function single(predicate) {
    return this.lift(new SingleOperator(predicate, this));
}
exports.single = single;
var SingleOperator = (function () {
    function SingleOperator(predicate, source) {
        this.predicate = predicate;
        this.source = source;
    }
    SingleOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));
    };
    return SingleOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SingleSubscriber = (function (_super) {
    __extends(SingleSubscriber, _super);
    function SingleSubscriber(destination, predicate, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.source = source;
        this.seenValue = false;
        this.index = 0;
    }
    SingleSubscriber.prototype.applySingleValue = function (value) {
        if (this.seenValue) {
            this.destination.error('Sequence contains more than one element');
        }
        else {
            this.seenValue = true;
            this.singleValue = value;
        }
    };
    SingleSubscriber.prototype._next = function (value) {
        var predicate = this.predicate;
        this.index++;
        if (predicate) {
            this.tryNext(value);
        }
        else {
            this.applySingleValue(value);
        }
    };
    SingleSubscriber.prototype.tryNext = function (value) {
        try {
            var result = this.predicate(value, this.index, this.source);
            if (result) {
                this.applySingleValue(value);
            }
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    SingleSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (this.index > 0) {
            destination.next(this.seenValue ? this.singleValue : undefined);
            destination.complete();
        }
        else {
            destination.error(new EmptyError_1.EmptyError);
        }
    };
    return SingleSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=single.js.map

/***/ },
/* 1179 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
/**
 * Returns an Observable that skips `n` items emitted by an Observable.
 *
 * <img src="./img/skip.png" width="100%">
 *
 * @param {Number} the `n` of times, items emitted by source Observable should be skipped.
 * @return {Observable} an Observable that skips values emitted by the source Observable.
 *
 * @method skip
 * @owner Observable
 */
function skip(total) {
    return this.lift(new SkipOperator(total));
}
exports.skip = skip;
var SkipOperator = (function () {
    function SkipOperator(total) {
        this.total = total;
    }
    SkipOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new SkipSubscriber(subscriber, this.total));
    };
    return SkipOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SkipSubscriber = (function (_super) {
    __extends(SkipSubscriber, _super);
    function SkipSubscriber(destination, total) {
        _super.call(this, destination);
        this.total = total;
        this.count = 0;
    }
    SkipSubscriber.prototype._next = function (x) {
        if (++this.count > this.total) {
            this.destination.next(x);
        }
    };
    return SkipSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=skip.js.map

/***/ },
/* 1180 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.
 *
 * <img src="./img/skipUntil.png" width="100%">
 *
 * @param {Observable} the second Observable that has to emit an item before the source Observable's elements begin to
 * be mirrored by the resulting Observable.
 * @return {Observable<T>} an Observable that skips items from the source Observable until the second Observable emits
 * an item, then emits the remaining items.
 * @method skipUntil
 * @owner Observable
 */
function skipUntil(notifier) {
    return this.lift(new SkipUntilOperator(notifier));
}
exports.skipUntil = skipUntil;
var SkipUntilOperator = (function () {
    function SkipUntilOperator(notifier) {
        this.notifier = notifier;
    }
    SkipUntilOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new SkipUntilSubscriber(subscriber, this.notifier));
    };
    return SkipUntilOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SkipUntilSubscriber = (function (_super) {
    __extends(SkipUntilSubscriber, _super);
    function SkipUntilSubscriber(destination, notifier) {
        _super.call(this, destination);
        this.hasValue = false;
        this.isInnerStopped = false;
        this.add(subscribeToResult_1.subscribeToResult(this, notifier));
    }
    SkipUntilSubscriber.prototype._next = function (value) {
        if (this.hasValue) {
            _super.prototype._next.call(this, value);
        }
    };
    SkipUntilSubscriber.prototype._complete = function () {
        if (this.isInnerStopped) {
            _super.prototype._complete.call(this);
        }
        else {
            this.unsubscribe();
        }
    };
    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.hasValue = true;
    };
    SkipUntilSubscriber.prototype.notifyComplete = function () {
        this.isInnerStopped = true;
        if (this.isStopped) {
            _super.prototype._complete.call(this);
        }
    };
    return SkipUntilSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=skipUntil.js.map

/***/ },
/* 1181 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
/**
 * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds
 * true, but emits all further source items as soon as the condition becomes false.
 *
 * <img src="./img/skipWhile.png" width="100%">
 *
 * @param {Function} predicate - a function to test each item emitted from the source Observable.
 * @return {Observable<T>} an Observable that begins emitting items emitted by the source Observable when the
 * specified predicate becomes false.
 * @method skipWhile
 * @owner Observable
 */
function skipWhile(predicate) {
    return this.lift(new SkipWhileOperator(predicate));
}
exports.skipWhile = skipWhile;
var SkipWhileOperator = (function () {
    function SkipWhileOperator(predicate) {
        this.predicate = predicate;
    }
    SkipWhileOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new SkipWhileSubscriber(subscriber, this.predicate));
    };
    return SkipWhileOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SkipWhileSubscriber = (function (_super) {
    __extends(SkipWhileSubscriber, _super);
    function SkipWhileSubscriber(destination, predicate) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.skipping = true;
        this.index = 0;
    }
    SkipWhileSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        if (this.skipping) {
            this.tryCallPredicate(value);
        }
        if (!this.skipping) {
            destination.next(value);
        }
    };
    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {
        try {
            var result = this.predicate(value, this.index++);
            this.skipping = Boolean(result);
        }
        catch (err) {
            this.destination.error(err);
        }
    };
    return SkipWhileSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=skipWhile.js.map

/***/ },
/* 1182 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var ArrayObservable_1 = __webpack_require__(232);
var ScalarObservable_1 = __webpack_require__(234);
var EmptyObservable_1 = __webpack_require__(233);
var concat_1 = __webpack_require__(721);
var isScheduler_1 = __webpack_require__(372);
/**
 * Returns an Observable that emits the items in a specified Iterable before it begins to emit items emitted by the
 * source Observable.
 *
 * <img src="./img/startWith.png" width="100%">
 *
 * @param {Values} an Iterable that contains the items you want the modified Observable to emit first.
 * @return {Observable} an Observable that emits the items in the specified Iterable and then emits the items
 * emitted by the source Observable.
 * @method startWith
 * @owner Observable
 */
function startWith() {
    var array = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        array[_i - 0] = arguments[_i];
    }
    var scheduler = array[array.length - 1];
    if (isScheduler_1.isScheduler(scheduler)) {
        array.pop();
    }
    else {
        scheduler = null;
    }
    var len = array.length;
    if (len === 1) {
        return concat_1.concatStatic(new ScalarObservable_1.ScalarObservable(array[0], scheduler), this);
    }
    else if (len > 1) {
        return concat_1.concatStatic(new ArrayObservable_1.ArrayObservable(array, scheduler), this);
    }
    else {
        return concat_1.concatStatic(new EmptyObservable_1.EmptyObservable(scheduler), this);
    }
}
exports.startWith = startWith;
//# sourceMappingURL=startWith.js.map

/***/ },
/* 1183 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var SubscribeOnObservable_1 = __webpack_require__(1102);
/**
 * Asynchronously subscribes Observers to this Observable on the specified Scheduler.
 *
 * <img src="./img/subscribeOn.png" width="100%">
 *
 * @param {Scheduler} the Scheduler to perform subscription actions on.
 * @return {Observable<T>} the source Observable modified so that its subscriptions happen on the specified Scheduler
 .
 * @method subscribeOn
 * @owner Observable
 */
function subscribeOn(scheduler, delay) {
    if (delay === void 0) { delay = 0; }
    return new SubscribeOnObservable_1.SubscribeOnObservable(this, delay, scheduler);
}
exports.subscribeOn = subscribeOn;
//# sourceMappingURL=subscribeOn.js.map

/***/ },
/* 1184 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Converts a higher-order Observable into a first-order Observable by
 * subscribing to only the most recently emitted of those inner Observables.
 *
 * <span class="informal">Flattens an Observable-of-Observables by dropping the
 * previous inner Observable once a new one appears.</span>
 *
 * <img src="./img/switch.png" width="100%">
 *
 * `switch` subscribes to an Observable that emits Observables, also known as a
 * higher-order Observable. Each time it observes one of these emitted inner
 * Observables, the output Observable subscribes to the inner Observable and
 * begins emitting the items emitted by that. So far, it behaves
 * like {@link mergeAll}. However, when a new inner Observable is emitted,
 * `switch` unsubscribes from the earlier-emitted inner Observable and
 * subscribes to the new inner Observable and begins emitting items from it. It
 * continues to behave like this for subsequent inner Observables.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * // Each click event is mapped to an Observable that ticks every second
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));
 * var switched = higherOrder.switch();
 * // The outcome is that `switched` is essentially a timer that restarts
 * // on every click. The interval Observables from older clicks do not merge
 * // with the current interval Observable.
 * switched.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link exhaust}
 * @see {@link mergeAll}
 * @see {@link switchMap}
 * @see {@link switchMapTo}
 * @see {@link zipAll}
 *
 * @return {Observable<T>} An Observable that emits the items emitted by the
 * Observable most recently emitted by the source Observable.
 * @method switch
 * @name switch
 * @owner Observable
 */
function _switch() {
    return this.lift(new SwitchOperator());
}
exports._switch = _switch;
var SwitchOperator = (function () {
    function SwitchOperator() {
    }
    SwitchOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new SwitchSubscriber(subscriber));
    };
    return SwitchOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SwitchSubscriber = (function (_super) {
    __extends(SwitchSubscriber, _super);
    function SwitchSubscriber(destination) {
        _super.call(this, destination);
        this.active = 0;
        this.hasCompleted = false;
    }
    SwitchSubscriber.prototype._next = function (value) {
        this.unsubscribeInner();
        this.active++;
        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, value));
    };
    SwitchSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0) {
            this.destination.complete();
        }
    };
    SwitchSubscriber.prototype.unsubscribeInner = function () {
        this.active = this.active > 0 ? this.active - 1 : 0;
        var innerSubscription = this.innerSubscription;
        if (innerSubscription) {
            innerSubscription.unsubscribe();
            this.remove(innerSubscription);
        }
    };
    SwitchSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    SwitchSubscriber.prototype.notifyError = function (err) {
        this.destination.error(err);
    };
    SwitchSubscriber.prototype.notifyComplete = function () {
        this.unsubscribeInner();
        if (this.hasCompleted && this.active === 0) {
            this.destination.complete();
        }
    };
    return SwitchSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=switch.js.map

/***/ },
/* 1185 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable, emitting values only from the most recently projected Observable.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link switch}.</span>
 *
 * <img src="./img/switchMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. Each time it observes one of these
 * inner Observables, the output Observable begins emitting the items emitted by
 * that inner Observable. When a new inner Observable is emitted, `switchMap`
 * stops emitting items from the earlier-emitted inner Observable and begins
 * emitting items from the new one. It continues to behave like this for
 * subsequent inner Observables.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMap}
 * @see {@link exhaustMap}
 * @see {@link mergeMap}
 * @see {@link switch}
 * @see {@link switchMapTo}
 *
 * @param {function(value: T, ?index: number): Observable} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and taking only the values from the most recently
 * projected inner Observable.
 * @method switchMap
 * @owner Observable
 */
function switchMap(project, resultSelector) {
    return this.lift(new SwitchMapOperator(project, resultSelector));
}
exports.switchMap = switchMap;
var SwitchMapOperator = (function () {
    function SwitchMapOperator(project, resultSelector) {
        this.project = project;
        this.resultSelector = resultSelector;
    }
    SwitchMapOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));
    };
    return SwitchMapOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SwitchMapSubscriber = (function (_super) {
    __extends(SwitchMapSubscriber, _super);
    function SwitchMapSubscriber(destination, project, resultSelector) {
        _super.call(this, destination);
        this.project = project;
        this.resultSelector = resultSelector;
        this.index = 0;
    }
    SwitchMapSubscriber.prototype._next = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (error) {
            this.destination.error(error);
            return;
        }
        this._innerSub(result, value, index);
    };
    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {
        var innerSubscription = this.innerSubscription;
        if (innerSubscription) {
            innerSubscription.unsubscribe();
        }
        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));
    };
    SwitchMapSubscriber.prototype._complete = function () {
        var innerSubscription = this.innerSubscription;
        if (!innerSubscription || innerSubscription.closed) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapSubscriber.prototype._unsubscribe = function () {
        this.innerSubscription = null;
    };
    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.innerSubscription = null;
        if (this.isStopped) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (this.resultSelector) {
            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            this.destination.next(innerValue);
        }
    };
    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {
        var result;
        try {
            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return SwitchMapSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=switchMap.js.map

/***/ },
/* 1186 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Projects each source value to the same Observable which is flattened multiple
 * times with {@link switch} in the output Observable.
 *
 * <span class="informal">It's like {@link switchMap}, but maps each value
 * always to the same inner Observable.</span>
 *
 * <img src="./img/switchMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then flattens those resulting Observables into one
 * single Observable, which is the output Observable. The output Observables
 * emits values only from the most recently emitted instance of
 * `innerObservable`.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.switchMapTo(Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMapTo}
 * @see {@link switch}
 * @see {@link switchMap}
 * @see {@link mergeMapTo}
 *
 * @param {Observable} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits items from the given
 * `innerObservable` every time a value is emitted on the source Observable.
 * @return {Observable} An Observable that emits items from the given
 * `innerObservable` (and optionally transformed through `resultSelector`) every
 * time a value is emitted on the source Observable, and taking only the values
 * from the most recently projected inner Observable.
 * @method switchMapTo
 * @owner Observable
 */
function switchMapTo(innerObservable, resultSelector) {
    return this.lift(new SwitchMapToOperator(innerObservable, resultSelector));
}
exports.switchMapTo = switchMapTo;
var SwitchMapToOperator = (function () {
    function SwitchMapToOperator(observable, resultSelector) {
        this.observable = observable;
        this.resultSelector = resultSelector;
    }
    SwitchMapToOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));
    };
    return SwitchMapToOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SwitchMapToSubscriber = (function (_super) {
    __extends(SwitchMapToSubscriber, _super);
    function SwitchMapToSubscriber(destination, inner, resultSelector) {
        _super.call(this, destination);
        this.inner = inner;
        this.resultSelector = resultSelector;
        this.index = 0;
    }
    SwitchMapToSubscriber.prototype._next = function (value) {
        var innerSubscription = this.innerSubscription;
        if (innerSubscription) {
            innerSubscription.unsubscribe();
        }
        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, this.inner, value, this.index++));
    };
    SwitchMapToSubscriber.prototype._complete = function () {
        var innerSubscription = this.innerSubscription;
        if (!innerSubscription || innerSubscription.closed) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapToSubscriber.prototype._unsubscribe = function () {
        this.innerSubscription = null;
    };
    SwitchMapToSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.innerSubscription = null;
        if (this.isStopped) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        if (resultSelector) {
            this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            destination.next(innerValue);
        }
    };
    SwitchMapToSubscriber.prototype.tryResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {
        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;
        var result;
        try {
            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        destination.next(result);
    };
    return SwitchMapToSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=switchMapTo.js.map

/***/ },
/* 1187 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
var ArgumentOutOfRangeError_1 = __webpack_require__(699);
var EmptyObservable_1 = __webpack_require__(233);
/**
 * Emits only the first `count` values emitted by the source Observable.
 *
 * <span class="informal">Takes the first `count` values from the source, then
 * completes.</span>
 *
 * <img src="./img/take.png" width="100%">
 *
 * `take` returns an Observable that emits only the first `count` values emitted
 * by the source Observable. If the source emits fewer than `count` values then
 * all of its values are emitted. After that, it completes, regardless if the
 * source completes.
 *
 * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>
 * var interval = Rx.Observable.interval(1000);
 * var five = interval.take(5);
 * five.subscribe(x => console.log(x));
 *
 * @see {@link takeLast}
 * @see {@link takeUntil}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.
 *
 * @param {number} count The maximum number of `next` values to emit.
 * @return {Observable<T>} An Observable that emits only the first `count`
 * values emitted by the source Observable, or all of the values from the source
 * if the source emits fewer than `count` values.
 * @method take
 * @owner Observable
 */
function take(count) {
    if (count === 0) {
        return new EmptyObservable_1.EmptyObservable();
    }
    else {
        return this.lift(new TakeOperator(count));
    }
}
exports.take = take;
var TakeOperator = (function () {
    function TakeOperator(total) {
        this.total = total;
        if (this.total < 0) {
            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
        }
    }
    TakeOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new TakeSubscriber(subscriber, this.total));
    };
    return TakeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TakeSubscriber = (function (_super) {
    __extends(TakeSubscriber, _super);
    function TakeSubscriber(destination, total) {
        _super.call(this, destination);
        this.total = total;
        this.count = 0;
    }
    TakeSubscriber.prototype._next = function (value) {
        var total = this.total;
        if (++this.count <= total) {
            this.destination.next(value);
            if (this.count === total) {
                this.destination.complete();
                this.unsubscribe();
            }
        }
    };
    return TakeSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=take.js.map

/***/ },
/* 1188 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
var ArgumentOutOfRangeError_1 = __webpack_require__(699);
var EmptyObservable_1 = __webpack_require__(233);
/**
 * Emits only the last `count` values emitted by the source Observable.
 *
 * <span class="informal">Remembers the latest `count` values, then emits those
 * only when the source completes.</span>
 *
 * <img src="./img/takeLast.png" width="100%">
 *
 * `takeLast` returns an Observable that emits at most the last `count` values
 * emitted by the source Observable. If the source emits fewer than `count`
 * values then all of its values are emitted. This operator must wait until the
 * `complete` notification emission from the source in order to emit the `next`
 * values on the output Observable, because otherwise it is impossible to know
 * whether or not more values will be emitted on the source. For this reason,
 * all values are emitted synchronously, followed by the complete notification.
 *
 * @example <caption>Take the last 3 values of an Observable with many values</caption>
 * var many = Rx.Observable.range(1, 100);
 * var lastThree = many.takeLast(3);
 * lastThree.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeUntil}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.
 *
 * @param {number} count The maximum number of values to emit from the end of
 * the sequence of values emitted by the source Observable.
 * @return {Observable<T>} An Observable that emits at most the last count
 * values emitted by the source Observable.
 * @method takeLast
 * @owner Observable
 */
function takeLast(count) {
    if (count === 0) {
        return new EmptyObservable_1.EmptyObservable();
    }
    else {
        return this.lift(new TakeLastOperator(count));
    }
}
exports.takeLast = takeLast;
var TakeLastOperator = (function () {
    function TakeLastOperator(total) {
        this.total = total;
        if (this.total < 0) {
            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
        }
    }
    TakeLastOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new TakeLastSubscriber(subscriber, this.total));
    };
    return TakeLastOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TakeLastSubscriber = (function (_super) {
    __extends(TakeLastSubscriber, _super);
    function TakeLastSubscriber(destination, total) {
        _super.call(this, destination);
        this.total = total;
        this.ring = new Array();
        this.count = 0;
    }
    TakeLastSubscriber.prototype._next = function (value) {
        var ring = this.ring;
        var total = this.total;
        var count = this.count++;
        if (ring.length < total) {
            ring.push(value);
        }
        else {
            var index = count % total;
            ring[index] = value;
        }
    };
    TakeLastSubscriber.prototype._complete = function () {
        var destination = this.destination;
        var count = this.count;
        if (count > 0) {
            var total = this.count >= this.total ? this.total : this.count;
            var ring = this.ring;
            for (var i = 0; i < total; i++) {
                var idx = (count++) % total;
                destination.next(ring[idx]);
            }
        }
        destination.complete();
    };
    return TakeLastSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=takeLast.js.map

/***/ },
/* 1189 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Emits the values emitted by the source Observable until a `notifier`
 * Observable emits a value.
 *
 * <span class="informal">Lets values pass until a second Observable,
 * `notifier`, emits something. Then, it completes.</span>
 *
 * <img src="./img/takeUntil.png" width="100%">
 *
 * `takeUntil` subscribes and begins mirroring the source Observable. It also
 * monitors a second Observable, `notifier` that you provide. If the `notifier`
 * emits a value or a complete notification, the output Observable stops
 * mirroring the source Observable and completes.
 *
 * @example <caption>Tick every second until the first click happens</caption>
 * var interval = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = interval.takeUntil(clicks);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeLast}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @param {Observable} notifier The Observable whose first emitted value will
 * cause the output Observable of `takeUntil` to stop emitting values from the
 * source Observable.
 * @return {Observable<T>} An Observable that emits the values from the source
 * Observable until such time as `notifier` emits its first value.
 * @method takeUntil
 * @owner Observable
 */
function takeUntil(notifier) {
    return this.lift(new TakeUntilOperator(notifier));
}
exports.takeUntil = takeUntil;
var TakeUntilOperator = (function () {
    function TakeUntilOperator(notifier) {
        this.notifier = notifier;
    }
    TakeUntilOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new TakeUntilSubscriber(subscriber, this.notifier));
    };
    return TakeUntilOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TakeUntilSubscriber = (function (_super) {
    __extends(TakeUntilSubscriber, _super);
    function TakeUntilSubscriber(destination, notifier) {
        _super.call(this, destination);
        this.notifier = notifier;
        this.add(subscribeToResult_1.subscribeToResult(this, notifier));
    }
    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.complete();
    };
    TakeUntilSubscriber.prototype.notifyComplete = function () {
        // noop
    };
    return TakeUntilSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=takeUntil.js.map

/***/ },
/* 1190 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
/**
 * Emits values emitted by the source Observable so long as each value satisfies
 * the given `predicate`, and then completes as soon as this `predicate` is not
 * satisfied.
 *
 * <span class="informal">Takes values from the source only while they pass the
 * condition given. When the first value does not satisfy, it completes.</span>
 *
 * <img src="./img/takeWhile.png" width="100%">
 *
 * `takeWhile` subscribes and begins mirroring the source Observable. Each value
 * emitted on the source is given to the `predicate` function which returns a
 * boolean, representing a condition to be satisfied by the source values. The
 * output Observable emits the source values until such time as the `predicate`
 * returns false, at which point `takeWhile` stops mirroring the source
 * Observable and completes the output Observable.
 *
 * @example <caption>Emit click events only while the clientX property is greater than 200</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.takeWhile(ev => ev.clientX > 200);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeLast}
 * @see {@link takeUntil}
 * @see {@link skip}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates a value emitted by the source Observable and returns a boolean.
 * Also takes the (zero-based) index as the second argument.
 * @return {Observable<T>} An Observable that emits the values from the source
 * Observable so long as each value satisfies the condition defined by the
 * `predicate`, then completes.
 * @method takeWhile
 * @owner Observable
 */
function takeWhile(predicate) {
    return this.lift(new TakeWhileOperator(predicate));
}
exports.takeWhile = takeWhile;
var TakeWhileOperator = (function () {
    function TakeWhileOperator(predicate) {
        this.predicate = predicate;
    }
    TakeWhileOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new TakeWhileSubscriber(subscriber, this.predicate));
    };
    return TakeWhileOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TakeWhileSubscriber = (function (_super) {
    __extends(TakeWhileSubscriber, _super);
    function TakeWhileSubscriber(destination, predicate) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.index = 0;
    }
    TakeWhileSubscriber.prototype._next = function (value) {
        var destination = this.destination;
        var result;
        try {
            result = this.predicate(value, this.index++);
        }
        catch (err) {
            destination.error(err);
            return;
        }
        this.nextOrComplete(value, result);
    };
    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {
        var destination = this.destination;
        if (Boolean(predicateResult)) {
            destination.next(value);
        }
        else {
            destination.complete();
        }
    };
    return TakeWhileSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=takeWhile.js.map

/***/ },
/* 1191 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Emits a value from the source Observable, then ignores subsequent source
 * values for a duration determined by another Observable, then repeats this
 * process.
 *
 * <span class="informal">It's like {@link throttleTime}, but the silencing
 * duration is determined by a second Observable.</span>
 *
 * <img src="./img/throttle.png" width="100%">
 *
 * `throttle` emits the source Observable values on the output Observable
 * when its internal timer is disabled, and ignores source values when the timer
 * is enabled. Initially, the timer is disabled. As soon as the first source
 * value arrives, it is forwarded to the output Observable, and then the timer
 * is enabled by calling the `durationSelector` function with the source value,
 * which returns the "duration" Observable. When the duration Observable emits a
 * value or completes, the timer is disabled, and this process repeats for the
 * next source value.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.throttle(ev => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounce}
 * @see {@link delayWhen}
 * @see {@link sample}
 * @see {@link throttleTime}
 *
 * @param {function(value: T): Observable|Promise} durationSelector A function
 * that receives a value from the source Observable, for computing the silencing
 * duration for each source value, returned as an Observable or a Promise.
 * @return {Observable<T>} An Observable that performs the throttle operation to
 * limit the rate of emissions from the source.
 * @method throttle
 * @owner Observable
 */
function throttle(durationSelector) {
    return this.lift(new ThrottleOperator(durationSelector));
}
exports.throttle = throttle;
var ThrottleOperator = (function () {
    function ThrottleOperator(durationSelector) {
        this.durationSelector = durationSelector;
    }
    ThrottleOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new ThrottleSubscriber(subscriber, this.durationSelector));
    };
    return ThrottleOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ThrottleSubscriber = (function (_super) {
    __extends(ThrottleSubscriber, _super);
    function ThrottleSubscriber(destination, durationSelector) {
        _super.call(this, destination);
        this.destination = destination;
        this.durationSelector = durationSelector;
    }
    ThrottleSubscriber.prototype._next = function (value) {
        if (!this.throttled) {
            this.tryDurationSelector(value);
        }
    };
    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {
        var duration = null;
        try {
            duration = this.durationSelector(value);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.emitAndThrottle(value, duration);
    };
    ThrottleSubscriber.prototype.emitAndThrottle = function (value, duration) {
        this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));
        this.destination.next(value);
    };
    ThrottleSubscriber.prototype._unsubscribe = function () {
        var throttled = this.throttled;
        if (throttled) {
            this.remove(throttled);
            this.throttled = null;
            throttled.unsubscribe();
        }
    };
    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this._unsubscribe();
    };
    ThrottleSubscriber.prototype.notifyComplete = function () {
        this._unsubscribe();
    };
    return ThrottleSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=throttle.js.map

/***/ },
/* 1192 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
var async_1 = __webpack_require__(666);
/**
 * Emits a value from the source Observable, then ignores subsequent source
 * values for `duration` milliseconds, then repeats this process.
 *
 * <span class="informal">Lets a value pass, then ignores source values for the
 * next `duration` milliseconds.</span>
 *
 * <img src="./img/throttleTime.png" width="100%">
 *
 * `throttleTime` emits the source Observable values on the output Observable
 * when its internal timer is disabled, and ignores source values when the timer
 * is enabled. Initially, the timer is disabled. As soon as the first source
 * value arrives, it is forwarded to the output Observable, and then the timer
 * is enabled. After `duration` milliseconds (or the time unit determined
 * internally by the optional `scheduler`) has passed, the timer is disabled,
 * and this process repeats for the next source value. Optionally takes a
 * {@link Scheduler} for managing timers.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.throttleTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttle}
 *
 * @param {number} duration Time to wait before emitting another value after
 * emitting the last value, measured in milliseconds or the time unit determined
 * internally by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link Scheduler} to use for
 * managing the timers that handle the sampling.
 * @return {Observable<T>} An Observable that performs the throttle operation to
 * limit the rate of emissions from the source.
 * @method throttleTime
 * @owner Observable
 */
function throttleTime(duration, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    return this.lift(new ThrottleTimeOperator(duration, scheduler));
}
exports.throttleTime = throttleTime;
var ThrottleTimeOperator = (function () {
    function ThrottleTimeOperator(duration, scheduler) {
        this.duration = duration;
        this.scheduler = scheduler;
    }
    ThrottleTimeOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler));
    };
    return ThrottleTimeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ThrottleTimeSubscriber = (function (_super) {
    __extends(ThrottleTimeSubscriber, _super);
    function ThrottleTimeSubscriber(destination, duration, scheduler) {
        _super.call(this, destination);
        this.duration = duration;
        this.scheduler = scheduler;
    }
    ThrottleTimeSubscriber.prototype._next = function (value) {
        if (!this.throttled) {
            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));
            this.destination.next(value);
        }
    };
    ThrottleTimeSubscriber.prototype.clearThrottle = function () {
        var throttled = this.throttled;
        if (throttled) {
            throttled.unsubscribe();
            this.remove(throttled);
            this.throttled = null;
        }
    };
    return ThrottleTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchNext(arg) {
    var subscriber = arg.subscriber;
    subscriber.clearThrottle();
}
//# sourceMappingURL=throttleTime.js.map

/***/ },
/* 1193 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var async_1 = __webpack_require__(666);
var isDate_1 = __webpack_require__(700);
var Subscriber_1 = __webpack_require__(24);
/**
 * @param due
 * @param errorToSend
 * @param scheduler
 * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}
 * @method timeout
 * @owner Observable
 */
function timeout(due, errorToSend, scheduler) {
    if (errorToSend === void 0) { errorToSend = null; }
    if (scheduler === void 0) { scheduler = async_1.async; }
    var absoluteTimeout = isDate_1.isDate(due);
    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);
    return this.lift(new TimeoutOperator(waitFor, absoluteTimeout, errorToSend, scheduler));
}
exports.timeout = timeout;
var TimeoutOperator = (function () {
    function TimeoutOperator(waitFor, absoluteTimeout, errorToSend, scheduler) {
        this.waitFor = waitFor;
        this.absoluteTimeout = absoluteTimeout;
        this.errorToSend = errorToSend;
        this.scheduler = scheduler;
    }
    TimeoutOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new TimeoutSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.errorToSend, this.scheduler));
    };
    return TimeoutOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TimeoutSubscriber = (function (_super) {
    __extends(TimeoutSubscriber, _super);
    function TimeoutSubscriber(destination, absoluteTimeout, waitFor, errorToSend, scheduler) {
        _super.call(this, destination);
        this.absoluteTimeout = absoluteTimeout;
        this.waitFor = waitFor;
        this.errorToSend = errorToSend;
        this.scheduler = scheduler;
        this.index = 0;
        this._previousIndex = 0;
        this._hasCompleted = false;
        this.scheduleTimeout();
    }
    Object.defineProperty(TimeoutSubscriber.prototype, "previousIndex", {
        get: function () {
            return this._previousIndex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeoutSubscriber.prototype, "hasCompleted", {
        get: function () {
            return this._hasCompleted;
        },
        enumerable: true,
        configurable: true
    });
    TimeoutSubscriber.dispatchTimeout = function (state) {
        var source = state.subscriber;
        var currentIndex = state.index;
        if (!source.hasCompleted && source.previousIndex === currentIndex) {
            source.notifyTimeout();
        }
    };
    TimeoutSubscriber.prototype.scheduleTimeout = function () {
        var currentIndex = this.index;
        this.scheduler.schedule(TimeoutSubscriber.dispatchTimeout, this.waitFor, { subscriber: this, index: currentIndex });
        this.index++;
        this._previousIndex = currentIndex;
    };
    TimeoutSubscriber.prototype._next = function (value) {
        this.destination.next(value);
        if (!this.absoluteTimeout) {
            this.scheduleTimeout();
        }
    };
    TimeoutSubscriber.prototype._error = function (err) {
        this.destination.error(err);
        this._hasCompleted = true;
    };
    TimeoutSubscriber.prototype._complete = function () {
        this.destination.complete();
        this._hasCompleted = true;
    };
    TimeoutSubscriber.prototype.notifyTimeout = function () {
        this.error(this.errorToSend || new Error('timeout'));
    };
    return TimeoutSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=timeout.js.map

/***/ },
/* 1194 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var async_1 = __webpack_require__(666);
var isDate_1 = __webpack_require__(700);
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * @param due
 * @param withObservable
 * @param scheduler
 * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}
 * @method timeoutWith
 * @owner Observable
 */
function timeoutWith(due, withObservable, scheduler) {
    if (scheduler === void 0) { scheduler = async_1.async; }
    var absoluteTimeout = isDate_1.isDate(due);
    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);
    return this.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));
}
exports.timeoutWith = timeoutWith;
var TimeoutWithOperator = (function () {
    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {
        this.waitFor = waitFor;
        this.absoluteTimeout = absoluteTimeout;
        this.withObservable = withObservable;
        this.scheduler = scheduler;
    }
    TimeoutWithOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));
    };
    return TimeoutWithOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TimeoutWithSubscriber = (function (_super) {
    __extends(TimeoutWithSubscriber, _super);
    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {
        _super.call(this);
        this.destination = destination;
        this.absoluteTimeout = absoluteTimeout;
        this.waitFor = waitFor;
        this.withObservable = withObservable;
        this.scheduler = scheduler;
        this.timeoutSubscription = undefined;
        this.index = 0;
        this._previousIndex = 0;
        this._hasCompleted = false;
        destination.add(this);
        this.scheduleTimeout();
    }
    Object.defineProperty(TimeoutWithSubscriber.prototype, "previousIndex", {
        get: function () {
            return this._previousIndex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimeoutWithSubscriber.prototype, "hasCompleted", {
        get: function () {
            return this._hasCompleted;
        },
        enumerable: true,
        configurable: true
    });
    TimeoutWithSubscriber.dispatchTimeout = function (state) {
        var source = state.subscriber;
        var currentIndex = state.index;
        if (!source.hasCompleted && source.previousIndex === currentIndex) {
            source.handleTimeout();
        }
    };
    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {
        var currentIndex = this.index;
        var timeoutState = { subscriber: this, index: currentIndex };
        this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, timeoutState);
        this.index++;
        this._previousIndex = currentIndex;
    };
    TimeoutWithSubscriber.prototype._next = function (value) {
        this.destination.next(value);
        if (!this.absoluteTimeout) {
            this.scheduleTimeout();
        }
    };
    TimeoutWithSubscriber.prototype._error = function (err) {
        this.destination.error(err);
        this._hasCompleted = true;
    };
    TimeoutWithSubscriber.prototype._complete = function () {
        this.destination.complete();
        this._hasCompleted = true;
    };
    TimeoutWithSubscriber.prototype.handleTimeout = function () {
        if (!this.closed) {
            var withObservable = this.withObservable;
            this.unsubscribe();
            this.destination.add(this.timeoutSubscription = subscribeToResult_1.subscribeToResult(this, withObservable));
        }
    };
    return TimeoutWithSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=timeoutWith.js.map

/***/ },
/* 1195 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
/**
 * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}
 * @method toArray
 * @owner Observable
 */
function toArray() {
    return this.lift(new ToArrayOperator());
}
exports.toArray = toArray;
var ToArrayOperator = (function () {
    function ToArrayOperator() {
    }
    ToArrayOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new ToArraySubscriber(subscriber));
    };
    return ToArrayOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ToArraySubscriber = (function (_super) {
    __extends(ToArraySubscriber, _super);
    function ToArraySubscriber(destination) {
        _super.call(this, destination);
        this.array = [];
    }
    ToArraySubscriber.prototype._next = function (x) {
        this.array.push(x);
    };
    ToArraySubscriber.prototype._complete = function () {
        this.destination.next(this.array);
        this.destination.complete();
    };
    return ToArraySubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=toArray.js.map

/***/ },
/* 1196 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(64);
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Branch out the source Observable values as a nested Observable whenever
 * `windowBoundaries` emits.
 *
 * <span class="informal">It's like {@link buffer}, but emits a nested Observable
 * instead of an array.</span>
 *
 * <img src="./img/window.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits connected, non-overlapping
 * windows. It emits the current window and opens a new one whenever the
 * Observable `windowBoundaries` emits an item. Because each window is an
 * Observable, the output is a higher-order Observable.
 *
 * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var interval = Rx.Observable.interval(1000);
 * var result = clicks.window(interval)
 *   .map(win => win.take(2)) // each window has at most 2 emissions
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link windowWhen}
 * @see {@link buffer}
 *
 * @param {Observable<any>} windowBoundaries An Observable that completes the
 * previous window and starts a new window.
 * @return {Observable<Observable<T>>} An Observable of windows, which are
 * Observables emitting values of the source Observable.
 * @method window
 * @owner Observable
 */
function window(windowBoundaries) {
    return this.lift(new WindowOperator(windowBoundaries));
}
exports.window = window;
var WindowOperator = (function () {
    function WindowOperator(windowBoundaries) {
        this.windowBoundaries = windowBoundaries;
    }
    WindowOperator.prototype.call = function (subscriber, source) {
        var windowSubscriber = new WindowSubscriber(subscriber);
        var sourceSubscription = source._subscribe(windowSubscriber);
        if (!sourceSubscription.closed) {
            windowSubscriber.add(subscribeToResult_1.subscribeToResult(windowSubscriber, this.windowBoundaries));
        }
        return sourceSubscription;
    };
    return WindowOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WindowSubscriber = (function (_super) {
    __extends(WindowSubscriber, _super);
    function WindowSubscriber(destination) {
        _super.call(this, destination);
        this.window = new Subject_1.Subject();
        destination.next(this.window);
    }
    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openWindow();
    };
    WindowSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    WindowSubscriber.prototype.notifyComplete = function (innerSub) {
        this._complete();
    };
    WindowSubscriber.prototype._next = function (value) {
        this.window.next(value);
    };
    WindowSubscriber.prototype._error = function (err) {
        this.window.error(err);
        this.destination.error(err);
    };
    WindowSubscriber.prototype._complete = function () {
        this.window.complete();
        this.destination.complete();
    };
    WindowSubscriber.prototype._unsubscribe = function () {
        this.window = null;
    };
    WindowSubscriber.prototype.openWindow = function () {
        var prevWindow = this.window;
        if (prevWindow) {
            prevWindow.complete();
        }
        var destination = this.destination;
        var newWindow = this.window = new Subject_1.Subject();
        destination.next(newWindow);
    };
    return WindowSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=window.js.map

/***/ },
/* 1197 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = __webpack_require__(24);
var Subject_1 = __webpack_require__(64);
/**
 * Branch out the source Observable values as a nested Observable with each
 * nested Observable emitting at most `windowSize` values.
 *
 * <span class="informal">It's like {@link bufferCount}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowCount.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits windows every `startWindowEvery`
 * items, each containing no more than `windowSize` items. When the source
 * Observable completes or encounters an error, the output Observable emits
 * the current window and propagates the notification from the source
 * Observable. If `startWindowEvery` is not provided, then new windows are
 * started immediately at the start of the source and when each window completes
 * with size `windowSize`.
 *
 * @example <caption>Ignore every 3rd click event, starting from the first one</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.windowCount(3)
 *   .map(win => win.skip(1)) // skip first of every 3 clicks
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Ignore every 3rd click event, starting from the third one</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.windowCount(2, 3)
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link windowWhen}
 * @see {@link bufferCount}
 *
 * @param {number} windowSize The maximum number of values emitted by each
 * window.
 * @param {number} [startWindowEvery] Interval at which to start a new window.
 * For example if `startWindowEvery` is `2`, then a new window will be started
 * on every other value from the source. A new window is started at the
 * beginning of the source by default.
 * @return {Observable<Observable<T>>} An Observable of windows, which in turn
 * are Observable of values.
 * @method windowCount
 * @owner Observable
 */
function windowCount(windowSize, startWindowEvery) {
    if (startWindowEvery === void 0) { startWindowEvery = 0; }
    return this.lift(new WindowCountOperator(windowSize, startWindowEvery));
}
exports.windowCount = windowCount;
var WindowCountOperator = (function () {
    function WindowCountOperator(windowSize, startWindowEvery) {
        this.windowSize = windowSize;
        this.startWindowEvery = startWindowEvery;
    }
    WindowCountOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));
    };
    return WindowCountOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WindowCountSubscriber = (function (_super) {
    __extends(WindowCountSubscriber, _super);
    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {
        _super.call(this, destination);
        this.destination = destination;
        this.windowSize = windowSize;
        this.startWindowEvery = startWindowEvery;
        this.windows = [new Subject_1.Subject()];
        this.count = 0;
        destination.next(this.windows[0]);
    }
    WindowCountSubscriber.prototype._next = function (value) {
        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;
        var destination = this.destination;
        var windowSize = this.windowSize;
        var windows = this.windows;
        var len = windows.length;
        for (var i = 0; i < len && !this.closed; i++) {
            windows[i].next(value);
        }
        var c = this.count - windowSize + 1;
        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {
            windows.shift().complete();
        }
        if (++this.count % startWindowEvery === 0 && !this.closed) {
            var window_1 = new Subject_1.Subject();
            windows.push(window_1);
            destination.next(window_1);
        }
    };
    WindowCountSubscriber.prototype._error = function (err) {
        var windows = this.windows;
        if (windows) {
            while (windows.length > 0 && !this.closed) {
                windows.shift().error(err);
            }
        }
        this.destination.error(err);
    };
    WindowCountSubscriber.prototype._complete = function () {
        var windows = this.windows;
        if (windows) {
            while (windows.length > 0 && !this.closed) {
                windows.shift().complete();
            }
        }
        this.destination.complete();
    };
    WindowCountSubscriber.prototype._unsubscribe = function () {
        this.count = 0;
        this.windows = null;
    };
    return WindowCountSubscriber;
}(Subscriber_1.Subscriber));
//# sourceMappingURL=windowCount.js.map

/***/ },
/* 1198 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(64);
var async_1 = __webpack_require__(666);
var Subscriber_1 = __webpack_require__(24);
/**
 * Branch out the source Observable values as a nested Observable periodically
 * in time.
 *
 * <span class="informal">It's like {@link bufferTime}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowTime.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable starts a new window periodically, as
 * determined by the `windowCreationInterval` argument. It emits each window
 * after a fixed timespan, specified by the `windowTimeSpan` argument. When the
 * source Observable completes or encounters an error, the output Observable
 * emits the current window and propagates the notification from the source
 * Observable. If `windowCreationInterval` is not provided, the output
 * Observable starts a new window when the previous window of duration
 * `windowTimeSpan` completes.
 *
 * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.windowTime(1000)
 *   .map(win => win.take(2)) // each window has at most 2 emissions
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.windowTime(1000, 5000)
 *   .map(win => win.take(2)) // each window has at most 2 emissions
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowCount}
 * @see {@link windowToggle}
 * @see {@link windowWhen}
 * @see {@link bufferTime}
 *
 * @param {number} windowTimeSpan The amount of time to fill each window.
 * @param {number} [windowCreationInterval] The interval at which to start new
 * windows.
 * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the
 * intervals that determine window boundaries.
 * @return {Observable<Observable<T>>} An observable of windows, which in turn
 * are Observables.
 * @method windowTime
 * @owner Observable
 */
function windowTime(windowTimeSpan, windowCreationInterval, scheduler) {
    if (windowCreationInterval === void 0) { windowCreationInterval = null; }
    if (scheduler === void 0) { scheduler = async_1.async; }
    return this.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, scheduler));
}
exports.windowTime = windowTime;
var WindowTimeOperator = (function () {
    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, scheduler) {
        this.windowTimeSpan = windowTimeSpan;
        this.windowCreationInterval = windowCreationInterval;
        this.scheduler = scheduler;
    }
    WindowTimeOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.scheduler));
    };
    return WindowTimeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WindowTimeSubscriber = (function (_super) {
    __extends(WindowTimeSubscriber, _super);
    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, scheduler) {
        _super.call(this, destination);
        this.destination = destination;
        this.windowTimeSpan = windowTimeSpan;
        this.windowCreationInterval = windowCreationInterval;
        this.scheduler = scheduler;
        this.windows = [];
        if (windowCreationInterval !== null && windowCreationInterval >= 0) {
            var window_1 = this.openWindow();
            var closeState = { subscriber: this, window: window_1, context: null };
            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: this, scheduler: scheduler };
            this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));
            this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));
        }
        else {
            var window_2 = this.openWindow();
            var timeSpanOnlyState = { subscriber: this, window: window_2, windowTimeSpan: windowTimeSpan };
            this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));
        }
    }
    WindowTimeSubscriber.prototype._next = function (value) {
        var windows = this.windows;
        var len = windows.length;
        for (var i = 0; i < len; i++) {
            var window_3 = windows[i];
            if (!window_3.closed) {
                window_3.next(value);
            }
        }
    };
    WindowTimeSubscriber.prototype._error = function (err) {
        var windows = this.windows;
        while (windows.length > 0) {
            windows.shift().error(err);
        }
        this.destination.error(err);
    };
    WindowTimeSubscriber.prototype._complete = function () {
        var windows = this.windows;
        while (windows.length > 0) {
            var window_4 = windows.shift();
            if (!window_4.closed) {
                window_4.complete();
            }
        }
        this.destination.complete();
    };
    WindowTimeSubscriber.prototype.openWindow = function () {
        var window = new Subject_1.Subject();
        this.windows.push(window);
        var destination = this.destination;
        destination.next(window);
        return window;
    };
    WindowTimeSubscriber.prototype.closeWindow = function (window) {
        window.complete();
        var windows = this.windows;
        windows.splice(windows.indexOf(window), 1);
    };
    return WindowTimeSubscriber;
}(Subscriber_1.Subscriber));
function dispatchWindowTimeSpanOnly(state) {
    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;
    if (window) {
        window.complete();
    }
    state.window = subscriber.openWindow();
    this.schedule(state, windowTimeSpan);
}
function dispatchWindowCreation(state) {
    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;
    var window = subscriber.openWindow();
    var action = this;
    var context = { action: action, subscription: null };
    var timeSpanState = { subscriber: subscriber, window: window, context: context };
    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);
    action.add(context.subscription);
    action.schedule(state, windowCreationInterval);
}
function dispatchWindowClose(arg) {
    var subscriber = arg.subscriber, window = arg.window, context = arg.context;
    if (context && context.action && context.subscription) {
        context.action.remove(context.subscription);
    }
    subscriber.closeWindow(window);
}
//# sourceMappingURL=windowTime.js.map

/***/ },
/* 1199 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(64);
var Subscription_1 = __webpack_require__(145);
var tryCatch_1 = __webpack_require__(370);
var errorObject_1 = __webpack_require__(231);
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Branch out the source Observable values as a nested Observable starting from
 * an emission from `openings` and ending when the output of `closingSelector`
 * emits.
 *
 * <span class="informal">It's like {@link bufferToggle}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowToggle.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits windows that contain those items
 * emitted by the source Observable between the time when the `openings`
 * Observable emits an item and when the Observable returned by
 * `closingSelector` emits an item.
 *
 * @example <caption>Every other second, emit the click events from the next 500ms</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var openings = Rx.Observable.interval(1000);
 * var result = clicks.windowToggle(openings, i =>
 *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()
 * ).mergeAll();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowWhen}
 * @see {@link bufferToggle}
 *
 * @param {Observable<O>} openings An observable of notifications to start new
 * windows.
 * @param {function(value: O): Observable} closingSelector A function that takes
 * the value emitted by the `openings` observable and returns an Observable,
 * which, when it emits (either `next` or `complete`), signals that the
 * associated window should complete.
 * @return {Observable<Observable<T>>} An observable of windows, which in turn
 * are Observables.
 * @method windowToggle
 * @owner Observable
 */
function windowToggle(openings, closingSelector) {
    return this.lift(new WindowToggleOperator(openings, closingSelector));
}
exports.windowToggle = windowToggle;
var WindowToggleOperator = (function () {
    function WindowToggleOperator(openings, closingSelector) {
        this.openings = openings;
        this.closingSelector = closingSelector;
    }
    WindowToggleOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));
    };
    return WindowToggleOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WindowToggleSubscriber = (function (_super) {
    __extends(WindowToggleSubscriber, _super);
    function WindowToggleSubscriber(destination, openings, closingSelector) {
        _super.call(this, destination);
        this.openings = openings;
        this.closingSelector = closingSelector;
        this.contexts = [];
        this.add(this.openSubscription = subscribeToResult_1.subscribeToResult(this, openings, openings));
    }
    WindowToggleSubscriber.prototype._next = function (value) {
        var contexts = this.contexts;
        if (contexts) {
            var len = contexts.length;
            for (var i = 0; i < len; i++) {
                contexts[i].window.next(value);
            }
        }
    };
    WindowToggleSubscriber.prototype._error = function (err) {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context = contexts[index];
                context.window.error(err);
                context.subscription.unsubscribe();
            }
        }
        _super.prototype._error.call(this, err);
    };
    WindowToggleSubscriber.prototype._complete = function () {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context = contexts[index];
                context.window.complete();
                context.subscription.unsubscribe();
            }
        }
        _super.prototype._complete.call(this);
    };
    WindowToggleSubscriber.prototype._unsubscribe = function () {
        var contexts = this.contexts;
        this.contexts = null;
        if (contexts) {
            var len = contexts.length;
            var index = -1;
            while (++index < len) {
                var context = contexts[index];
                context.window.unsubscribe();
                context.subscription.unsubscribe();
            }
        }
    };
    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (outerValue === this.openings) {
            var closingSelector = this.closingSelector;
            var closingNotifier = tryCatch_1.tryCatch(closingSelector)(innerValue);
            if (closingNotifier === errorObject_1.errorObject) {
                return this.error(errorObject_1.errorObject.e);
            }
            else {
                var window_1 = new Subject_1.Subject();
                var subscription = new Subscription_1.Subscription();
                var context = { window: window_1, subscription: subscription };
                this.contexts.push(context);
                var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);
                if (innerSubscription.closed) {
                    this.closeWindow(this.contexts.length - 1);
                }
                else {
                    innerSubscription.context = context;
                    subscription.add(innerSubscription);
                }
                this.destination.next(window_1);
            }
        }
        else {
            this.closeWindow(this.contexts.indexOf(outerValue));
        }
    };
    WindowToggleSubscriber.prototype.notifyError = function (err) {
        this.error(err);
    };
    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {
        if (inner !== this.openSubscription) {
            this.closeWindow(this.contexts.indexOf(inner.context));
        }
    };
    WindowToggleSubscriber.prototype.closeWindow = function (index) {
        if (index === -1) {
            return;
        }
        var contexts = this.contexts;
        var context = contexts[index];
        var window = context.window, subscription = context.subscription;
        contexts.splice(index, 1);
        window.complete();
        subscription.unsubscribe();
    };
    return WindowToggleSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=windowToggle.js.map

/***/ },
/* 1200 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(64);
var tryCatch_1 = __webpack_require__(370);
var errorObject_1 = __webpack_require__(231);
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Branch out the source Observable values as a nested Observable using a
 * factory function of closing Observables to determine when to start a new
 * window.
 *
 * <span class="informal">It's like {@link bufferWhen}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowWhen.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits connected, non-overlapping windows.
 * It emits the current window and opens a new one whenever the Observable
 * produced by the specified `closingSelector` function emits an item. The first
 * window is opened immediately when subscribing to the output Observable.
 *
 * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks
 *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))
 *   .map(win => win.take(2)) // each window has at most 2 emissions
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link bufferWhen}
 *
 * @param {function(): Observable} closingSelector A function that takes no
 * arguments and returns an Observable that signals (on either `next` or
 * `complete`) when to close the previous window and start a new one.
 * @return {Observable<Observable<T>>} An observable of windows, which in turn
 * are Observables.
 * @method windowWhen
 * @owner Observable
 */
function windowWhen(closingSelector) {
    return this.lift(new WindowOperator(closingSelector));
}
exports.windowWhen = windowWhen;
var WindowOperator = (function () {
    function WindowOperator(closingSelector) {
        this.closingSelector = closingSelector;
    }
    WindowOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new WindowSubscriber(subscriber, this.closingSelector));
    };
    return WindowOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WindowSubscriber = (function (_super) {
    __extends(WindowSubscriber, _super);
    function WindowSubscriber(destination, closingSelector) {
        _super.call(this, destination);
        this.destination = destination;
        this.closingSelector = closingSelector;
        this.openWindow();
    }
    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.openWindow(innerSub);
    };
    WindowSubscriber.prototype.notifyError = function (error, innerSub) {
        this._error(error);
    };
    WindowSubscriber.prototype.notifyComplete = function (innerSub) {
        this.openWindow(innerSub);
    };
    WindowSubscriber.prototype._next = function (value) {
        this.window.next(value);
    };
    WindowSubscriber.prototype._error = function (err) {
        this.window.error(err);
        this.destination.error(err);
        this.unsubscribeClosingNotification();
    };
    WindowSubscriber.prototype._complete = function () {
        this.window.complete();
        this.destination.complete();
        this.unsubscribeClosingNotification();
    };
    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {
        if (this.closingNotification) {
            this.closingNotification.unsubscribe();
        }
    };
    WindowSubscriber.prototype.openWindow = function (innerSub) {
        if (innerSub === void 0) { innerSub = null; }
        if (innerSub) {
            this.remove(innerSub);
            innerSub.unsubscribe();
        }
        var prevWindow = this.window;
        if (prevWindow) {
            prevWindow.complete();
        }
        var window = this.window = new Subject_1.Subject();
        this.destination.next(window);
        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();
        if (closingNotifier === errorObject_1.errorObject) {
            var err = errorObject_1.errorObject.e;
            this.destination.error(err);
            this.window.error(err);
        }
        else {
            this.add(this.closingNotification = subscribeToResult_1.subscribeToResult(this, closingNotifier));
        }
    };
    return WindowSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=windowWhen.js.map

/***/ },
/* 1201 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = __webpack_require__(143);
var subscribeToResult_1 = __webpack_require__(144);
/**
 * Combines the source Observable with other Observables to create an Observable
 * whose values are calculated from the latest values of each, only when the
 * source emits.
 *
 * <span class="informal">Whenever the source Observable emits a value, it
 * computes a formula using that value plus the latest values from other input
 * Observables, then emits the output of that formula.</span>
 *
 * <img src="./img/withLatestFrom.png" width="100%">
 *
 * `withLatestFrom` combines each value from the source Observable (the
 * instance) with the latest values from the other input Observables only when
 * the source emits a value, optionally using a `project` function to determine
 * the value to be emitted on the output Observable. All input Observables must
 * emit at least one value before the output Observable will emit a value.
 *
 * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var result = clicks.withLatestFrom(timer);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineLatest}
 *
 * @param {Observable} other An input Observable to combine with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {Function} [project] Projection function for combining values
 * together. Receives all values in order of the Observables passed, where the
 * first parameter is a value from the source Observable. (e.g.
 * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not
 * passed, arrays will be emitted on the output Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 * @method withLatestFrom
 * @owner Observable
 */
function withLatestFrom() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i - 0] = arguments[_i];
    }
    var project;
    if (typeof args[args.length - 1] === 'function') {
        project = args.pop();
    }
    var observables = args;
    return this.lift(new WithLatestFromOperator(observables, project));
}
exports.withLatestFrom = withLatestFrom;
/* tslint:enable:max-line-length */
var WithLatestFromOperator = (function () {
    function WithLatestFromOperator(observables, project) {
        this.observables = observables;
        this.project = project;
    }
    WithLatestFromOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));
    };
    return WithLatestFromOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var WithLatestFromSubscriber = (function (_super) {
    __extends(WithLatestFromSubscriber, _super);
    function WithLatestFromSubscriber(destination, observables, project) {
        _super.call(this, destination);
        this.observables = observables;
        this.project = project;
        this.toRespond = [];
        var len = observables.length;
        this.values = new Array(len);
        for (var i = 0; i < len; i++) {
            this.toRespond.push(i);
        }
        for (var i = 0; i < len; i++) {
            var observable = observables[i];
            this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));
        }
    }
    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.values[outerIndex] = innerValue;
        var toRespond = this.toRespond;
        if (toRespond.length > 0) {
            var found = toRespond.indexOf(outerIndex);
            if (found !== -1) {
                toRespond.splice(found, 1);
            }
        }
    };
    WithLatestFromSubscriber.prototype.notifyComplete = function () {
        // noop
    };
    WithLatestFromSubscriber.prototype._next = function (value) {
        if (this.toRespond.length === 0) {
            var args = [value].concat(this.values);
            if (this.project) {
                this._tryProject(args);
            }
            else {
                this.destination.next(args);
            }
        }
    };
    WithLatestFromSubscriber.prototype._tryProject = function (args) {
        var result;
        try {
            result = this.project.apply(this, args);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return WithLatestFromSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=withLatestFrom.js.map

/***/ },
/* 1202 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var zip_1 = __webpack_require__(722);
/**
 * @param project
 * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}
 * @method zipAll
 * @owner Observable
 */
function zipAll(project) {
    return this.lift(new zip_1.ZipOperator(project));
}
exports.zipAll = zipAll;
//# sourceMappingURL=zipAll.js.map

/***/ },
/* 1203 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscription_1 = __webpack_require__(145);
/**
 * A unit of work to be executed in a {@link Scheduler}. An action is typically
 * created from within a Scheduler and an RxJS user does not need to concern
 * themselves about creating and manipulating an Action.
 *
 * ```ts
 * class Action<T> extends Subscription {
 *   new (scheduler: Scheduler, work: (state?: T) => void);
 *   schedule(state?: T, delay: number = 0): Subscription;
 * }
 * ```
 *
 * @class Action<T>
 */
var Action = (function (_super) {
    __extends(Action, _super);
    function Action(scheduler, work) {
        _super.call(this);
    }
    /**
     * Schedules this action on its parent Scheduler for execution. May be passed
     * some context object, `state`. May happen at some point in the future,
     * according to the `delay` parameter, if specified.
     * @param {T} [state] Some contextual data that the `work` function uses when
     * called by the Scheduler.
     * @param {number} [delay] Time to wait before executing the work, where the
     * time unit is implicit and defined by the Scheduler.
     * @return {void}
     */
    Action.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        return this;
    };
    return Action;
}(Subscription_1.Subscription));
exports.Action = Action;
//# sourceMappingURL=Action.js.map

/***/ },
/* 1204 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncAction_1 = __webpack_require__(689);
var AnimationFrame_1 = __webpack_require__(1214);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AnimationFrameAction = (function (_super) {
    __extends(AnimationFrameAction, _super);
    function AnimationFrameAction(scheduler, work) {
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
    }
    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay is greater than 0, request as an async action.
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        // Push the action to the end of the scheduler queue.
        scheduler.actions.push(this);
        // If an animation frame has already been requested, don't request another
        // one. If an animation frame hasn't been requested yet, request one. Return
        // the current animation frame request id.
        return scheduler.scheduled || (scheduler.scheduled = AnimationFrame_1.AnimationFrame.requestAnimationFrame(scheduler.flush.bind(scheduler, null)));
    };
    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay exists and is greater than 0, recycle as an async action.
        if (delay !== null && delay > 0) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        // If the scheduler queue is empty, cancel the requested animation frame and
        // set the scheduled flag to undefined so the next AnimationFrameAction will
        // request its own.
        if (scheduler.actions.length === 0) {
            AnimationFrame_1.AnimationFrame.cancelAnimationFrame(id);
            scheduler.scheduled = undefined;
        }
        // Return undefined so the action knows to request a new async id if it's rescheduled.
        return undefined;
    };
    return AnimationFrameAction;
}(AsyncAction_1.AsyncAction));
exports.AnimationFrameAction = AnimationFrameAction;
//# sourceMappingURL=AnimationFrameAction.js.map

/***/ },
/* 1205 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncScheduler_1 = __webpack_require__(690);
var AnimationFrameScheduler = (function (_super) {
    __extends(AnimationFrameScheduler, _super);
    function AnimationFrameScheduler() {
        _super.apply(this, arguments);
    }
    AnimationFrameScheduler.prototype.flush = function () {
        this.active = true;
        this.scheduled = undefined;
        var actions = this.actions;
        var error;
        var index = -1;
        var count = actions.length;
        var action = actions.shift();
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (++index < count && (action = actions.shift()));
        this.active = false;
        if (error) {
            while (++index < count && (action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AnimationFrameScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.AnimationFrameScheduler = AnimationFrameScheduler;
//# sourceMappingURL=AnimationFrameScheduler.js.map

/***/ },
/* 1206 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Immediate_1 = __webpack_require__(1216);
var AsyncAction_1 = __webpack_require__(689);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AsapAction = (function (_super) {
    __extends(AsapAction, _super);
    function AsapAction(scheduler, work) {
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
    }
    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay is greater than 0, request as an async action.
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        // Push the action to the end of the scheduler queue.
        scheduler.actions.push(this);
        // If a microtask has already been scheduled, don't schedule another
        // one. If a microtask hasn't been scheduled yet, schedule one now. Return
        // the current scheduled microtask id.
        return scheduler.scheduled || (scheduler.scheduled = Immediate_1.Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));
    };
    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay exists and is greater than 0, recycle as an async action.
        if (delay !== null && delay > 0) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        // If the scheduler queue is empty, cancel the requested microtask and
        // set the scheduled flag to undefined so the next AsapAction will schedule
        // its own.
        if (scheduler.actions.length === 0) {
            Immediate_1.Immediate.clearImmediate(id);
            scheduler.scheduled = undefined;
        }
        // Return undefined so the action knows to request a new async id if it's rescheduled.
        return undefined;
    };
    return AsapAction;
}(AsyncAction_1.AsyncAction));
exports.AsapAction = AsapAction;
//# sourceMappingURL=AsapAction.js.map

/***/ },
/* 1207 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncScheduler_1 = __webpack_require__(690);
var AsapScheduler = (function (_super) {
    __extends(AsapScheduler, _super);
    function AsapScheduler() {
        _super.apply(this, arguments);
    }
    AsapScheduler.prototype.flush = function () {
        this.active = true;
        this.scheduled = undefined;
        var actions = this.actions;
        var error;
        var index = -1;
        var count = actions.length;
        var action = actions.shift();
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (++index < count && (action = actions.shift()));
        this.active = false;
        if (error) {
            while (++index < count && (action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsapScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.AsapScheduler = AsapScheduler;
//# sourceMappingURL=AsapScheduler.js.map

/***/ },
/* 1208 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncAction_1 = __webpack_require__(689);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var QueueAction = (function (_super) {
    __extends(QueueAction, _super);
    function QueueAction(scheduler, work) {
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
    }
    QueueAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        if (delay > 0) {
            return _super.prototype.schedule.call(this, state, delay);
        }
        this.delay = delay;
        this.state = state;
        this.scheduler.flush(this);
        return this;
    };
    QueueAction.prototype.execute = function (state, delay) {
        return (delay > 0 || this.closed) ?
            _super.prototype.execute.call(this, state, delay) :
            this._execute(state, delay);
    };
    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay is greater than 0, enqueue as an async action.
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        // Otherwise flush the scheduler starting with this action.
        return scheduler.flush(this);
    };
    return QueueAction;
}(AsyncAction_1.AsyncAction));
exports.QueueAction = QueueAction;
//# sourceMappingURL=QueueAction.js.map

/***/ },
/* 1209 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncScheduler_1 = __webpack_require__(690);
var QueueScheduler = (function (_super) {
    __extends(QueueScheduler, _super);
    function QueueScheduler() {
        _super.apply(this, arguments);
    }
    return QueueScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.QueueScheduler = QueueScheduler;
//# sourceMappingURL=QueueScheduler.js.map

/***/ },
/* 1210 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var AnimationFrameAction_1 = __webpack_require__(1204);
var AnimationFrameScheduler_1 = __webpack_require__(1205);
exports.animationFrame = new AnimationFrameScheduler_1.AnimationFrameScheduler(AnimationFrameAction_1.AnimationFrameAction);
//# sourceMappingURL=animationFrame.js.map

/***/ },
/* 1211 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(13);
var Subscription_1 = __webpack_require__(145);
var SubscriptionLoggable_1 = __webpack_require__(800);
var applyMixins_1 = __webpack_require__(801);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ColdObservable = (function (_super) {
    __extends(ColdObservable, _super);
    function ColdObservable(messages, scheduler) {
        _super.call(this, function (subscriber) {
            var observable = this;
            var index = observable.logSubscribedFrame();
            subscriber.add(new Subscription_1.Subscription(function () {
                observable.logUnsubscribedFrame(index);
            }));
            observable.scheduleMessages(subscriber);
            return subscriber;
        });
        this.messages = messages;
        this.subscriptions = [];
        this.scheduler = scheduler;
    }
    ColdObservable.prototype.scheduleMessages = function (subscriber) {
        var messagesLength = this.messages.length;
        for (var i = 0; i < messagesLength; i++) {
            var message = this.messages[i];
            subscriber.add(this.scheduler.schedule(function (_a) {
                var message = _a.message, subscriber = _a.subscriber;
                message.notification.observe(subscriber);
            }, message.frame, { message: message, subscriber: subscriber }));
        }
    };
    return ColdObservable;
}(Observable_1.Observable));
exports.ColdObservable = ColdObservable;
applyMixins_1.applyMixins(ColdObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);
//# sourceMappingURL=ColdObservable.js.map

/***/ },
/* 1212 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = __webpack_require__(64);
var Subscription_1 = __webpack_require__(145);
var SubscriptionLoggable_1 = __webpack_require__(800);
var applyMixins_1 = __webpack_require__(801);
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var HotObservable = (function (_super) {
    __extends(HotObservable, _super);
    function HotObservable(messages, scheduler) {
        _super.call(this);
        this.messages = messages;
        this.subscriptions = [];
        this.scheduler = scheduler;
    }
    HotObservable.prototype._subscribe = function (subscriber) {
        var subject = this;
        var index = subject.logSubscribedFrame();
        subscriber.add(new Subscription_1.Subscription(function () {
            subject.logUnsubscribedFrame(index);
        }));
        return _super.prototype._subscribe.call(this, subscriber);
    };
    HotObservable.prototype.setup = function () {
        var subject = this;
        var messagesLength = subject.messages.length;
        /* tslint:disable:no-var-keyword */
        for (var i = 0; i < messagesLength; i++) {
            (function () {
                var message = subject.messages[i];
                /* tslint:enable */
                subject.scheduler.schedule(function () { message.notification.observe(subject); }, message.frame);
            })();
        }
    };
    return HotObservable;
}(Subject_1.Subject));
exports.HotObservable = HotObservable;
applyMixins_1.applyMixins(HotObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);
//# sourceMappingURL=HotObservable.js.map

/***/ },
/* 1213 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = __webpack_require__(13);
var Notification_1 = __webpack_require__(373);
var ColdObservable_1 = __webpack_require__(1211);
var HotObservable_1 = __webpack_require__(1212);
var SubscriptionLog_1 = __webpack_require__(799);
var VirtualTimeScheduler_1 = __webpack_require__(796);
var defaultMaxFrame = 750;
var TestScheduler = (function (_super) {
    __extends(TestScheduler, _super);
    function TestScheduler(assertDeepEqual) {
        _super.call(this, VirtualTimeScheduler_1.VirtualAction, defaultMaxFrame);
        this.assertDeepEqual = assertDeepEqual;
        this.hotObservables = [];
        this.coldObservables = [];
        this.flushTests = [];
    }
    TestScheduler.prototype.createTime = function (marbles) {
        var indexOf = marbles.indexOf('|');
        if (indexOf === -1) {
            throw new Error('marble diagram for time should have a completion marker "|"');
        }
        return indexOf * TestScheduler.frameTimeFactor;
    };
    TestScheduler.prototype.createColdObservable = function (marbles, values, error) {
        if (marbles.indexOf('^') !== -1) {
            throw new Error('cold observable cannot have subscription offset "^"');
        }
        if (marbles.indexOf('!') !== -1) {
            throw new Error('cold observable cannot have unsubscription marker "!"');
        }
        var messages = TestScheduler.parseMarbles(marbles, values, error);
        var cold = new ColdObservable_1.ColdObservable(messages, this);
        this.coldObservables.push(cold);
        return cold;
    };
    TestScheduler.prototype.createHotObservable = function (marbles, values, error) {
        if (marbles.indexOf('!') !== -1) {
            throw new Error('hot observable cannot have unsubscription marker "!"');
        }
        var messages = TestScheduler.parseMarbles(marbles, values, error);
        var subject = new HotObservable_1.HotObservable(messages, this);
        this.hotObservables.push(subject);
        return subject;
    };
    TestScheduler.prototype.materializeInnerObservable = function (observable, outerFrame) {
        var _this = this;
        var messages = [];
        observable.subscribe(function (value) {
            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createNext(value) });
        }, function (err) {
            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createError(err) });
        }, function () {
            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createComplete() });
        });
        return messages;
    };
    TestScheduler.prototype.expectObservable = function (observable, unsubscriptionMarbles) {
        var _this = this;
        if (unsubscriptionMarbles === void 0) { unsubscriptionMarbles = null; }
        var actual = [];
        var flushTest = { actual: actual, ready: false };
        var unsubscriptionFrame = TestScheduler
            .parseMarblesAsSubscriptions(unsubscriptionMarbles).unsubscribedFrame;
        var subscription;
        this.schedule(function () {
            subscription = observable.subscribe(function (x) {
                var value = x;
                // Support Observable-of-Observables
                if (x instanceof Observable_1.Observable) {
                    value = _this.materializeInnerObservable(value, _this.frame);
                }
                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createNext(value) });
            }, function (err) {
                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createError(err) });
            }, function () {
                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createComplete() });
            });
        }, 0);
        if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {
            this.schedule(function () { return subscription.unsubscribe(); }, unsubscriptionFrame);
        }
        this.flushTests.push(flushTest);
        return {
            toBe: function (marbles, values, errorValue) {
                flushTest.ready = true;
                flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true);
            }
        };
    };
    TestScheduler.prototype.expectSubscriptions = function (actualSubscriptionLogs) {
        var flushTest = { actual: actualSubscriptionLogs, ready: false };
        this.flushTests.push(flushTest);
        return {
            toBe: function (marbles) {
                var marblesArray = (typeof marbles === 'string') ? [marbles] : marbles;
                flushTest.ready = true;
                flushTest.expected = marblesArray.map(function (marbles) {
                    return TestScheduler.parseMarblesAsSubscriptions(marbles);
                });
            }
        };
    };
    TestScheduler.prototype.flush = function () {
        var hotObservables = this.hotObservables;
        while (hotObservables.length > 0) {
            hotObservables.shift().setup();
        }
        _super.prototype.flush.call(this);
        var readyFlushTests = this.flushTests.filter(function (test) { return test.ready; });
        while (readyFlushTests.length > 0) {
            var test = readyFlushTests.shift();
            this.assertDeepEqual(test.actual, test.expected);
        }
    };
    TestScheduler.parseMarblesAsSubscriptions = function (marbles) {
        if (typeof marbles !== 'string') {
            return new SubscriptionLog_1.SubscriptionLog(Number.POSITIVE_INFINITY);
        }
        var len = marbles.length;
        var groupStart = -1;
        var subscriptionFrame = Number.POSITIVE_INFINITY;
        var unsubscriptionFrame = Number.POSITIVE_INFINITY;
        for (var i = 0; i < len; i++) {
            var frame = i * this.frameTimeFactor;
            var c = marbles[i];
            switch (c) {
                case '-':
                case ' ':
                    break;
                case '(':
                    groupStart = frame;
                    break;
                case ')':
                    groupStart = -1;
                    break;
                case '^':
                    if (subscriptionFrame !== Number.POSITIVE_INFINITY) {
                        throw new Error('found a second subscription point \'^\' in a ' +
                            'subscription marble diagram. There can only be one.');
                    }
                    subscriptionFrame = groupStart > -1 ? groupStart : frame;
                    break;
                case '!':
                    if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {
                        throw new Error('found a second subscription point \'^\' in a ' +
                            'subscription marble diagram. There can only be one.');
                    }
                    unsubscriptionFrame = groupStart > -1 ? groupStart : frame;
                    break;
                default:
                    throw new Error('there can only be \'^\' and \'!\' markers in a ' +
                        'subscription marble diagram. Found instead \'' + c + '\'.');
            }
        }
        if (unsubscriptionFrame < 0) {
            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame);
        }
        else {
            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame, unsubscriptionFrame);
        }
    };
    TestScheduler.parseMarbles = function (marbles, values, errorValue, materializeInnerObservables) {
        if (materializeInnerObservables === void 0) { materializeInnerObservables = false; }
        if (marbles.indexOf('!') !== -1) {
            throw new Error('conventional marble diagrams cannot have the ' +
                'unsubscription marker "!"');
        }
        var len = marbles.length;
        var testMessages = [];
        var subIndex = marbles.indexOf('^');
        var frameOffset = subIndex === -1 ? 0 : (subIndex * -this.frameTimeFactor);
        var getValue = typeof values !== 'object' ?
            function (x) { return x; } :
            function (x) {
                // Support Observable-of-Observables
                if (materializeInnerObservables && values[x] instanceof ColdObservable_1.ColdObservable) {
                    return values[x].messages;
                }
                return values[x];
            };
        var groupStart = -1;
        for (var i = 0; i < len; i++) {
            var frame = i * this.frameTimeFactor + frameOffset;
            var notification = void 0;
            var c = marbles[i];
            switch (c) {
                case '-':
                case ' ':
                    break;
                case '(':
                    groupStart = frame;
                    break;
                case ')':
                    groupStart = -1;
                    break;
                case '|':
                    notification = Notification_1.Notification.createComplete();
                    break;
                case '^':
                    break;
                case '#':
                    notification = Notification_1.Notification.createError(errorValue || 'error');
                    break;
                default:
                    notification = Notification_1.Notification.createNext(getValue(c));
                    break;
            }
            if (notification) {
                testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification: notification });
            }
        }
        return testMessages;
    };
    return TestScheduler;
}(VirtualTimeScheduler_1.VirtualTimeScheduler));
exports.TestScheduler = TestScheduler;
//# sourceMappingURL=TestScheduler.js.map

/***/ },
/* 1214 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var root_1 = __webpack_require__(46);
var RequestAnimationFrameDefinition = (function () {
    function RequestAnimationFrameDefinition(root) {
        if (root.requestAnimationFrame) {
            this.cancelAnimationFrame = root.cancelAnimationFrame.bind(root);
            this.requestAnimationFrame = root.requestAnimationFrame.bind(root);
        }
        else if (root.mozRequestAnimationFrame) {
            this.cancelAnimationFrame = root.mozCancelAnimationFrame.bind(root);
            this.requestAnimationFrame = root.mozRequestAnimationFrame.bind(root);
        }
        else if (root.webkitRequestAnimationFrame) {
            this.cancelAnimationFrame = root.webkitCancelAnimationFrame.bind(root);
            this.requestAnimationFrame = root.webkitRequestAnimationFrame.bind(root);
        }
        else if (root.msRequestAnimationFrame) {
            this.cancelAnimationFrame = root.msCancelAnimationFrame.bind(root);
            this.requestAnimationFrame = root.msRequestAnimationFrame.bind(root);
        }
        else if (root.oRequestAnimationFrame) {
            this.cancelAnimationFrame = root.oCancelAnimationFrame.bind(root);
            this.requestAnimationFrame = root.oRequestAnimationFrame.bind(root);
        }
        else {
            this.cancelAnimationFrame = root.clearTimeout.bind(root);
            this.requestAnimationFrame = function (cb) { return root.setTimeout(cb, 1000 / 60); };
        }
    }
    return RequestAnimationFrameDefinition;
}());
exports.RequestAnimationFrameDefinition = RequestAnimationFrameDefinition;
exports.AnimationFrame = new RequestAnimationFrameDefinition(root_1.root);
//# sourceMappingURL=AnimationFrame.js.map

/***/ },
/* 1215 */
/***/ function(module, exports) {

"use strict";
"use strict";
var FastMap = (function () {
    function FastMap() {
        this.values = {};
    }
    FastMap.prototype.delete = function (key) {
        this.values[key] = null;
        return true;
    };
    FastMap.prototype.set = function (key, value) {
        this.values[key] = value;
        return this;
    };
    FastMap.prototype.get = function (key) {
        return this.values[key];
    };
    FastMap.prototype.forEach = function (cb, thisArg) {
        var values = this.values;
        for (var key in values) {
            if (values.hasOwnProperty(key) && values[key] !== null) {
                cb.call(thisArg, values[key], key);
            }
        }
    };
    FastMap.prototype.clear = function () {
        this.values = {};
    };
    return FastMap;
}());
exports.FastMap = FastMap;
//# sourceMappingURL=FastMap.js.map

/***/ },
/* 1216 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
Some credit for this helper goes to http://github.com/YuzuJS/setImmediate
*/
"use strict";
var root_1 = __webpack_require__(46);
var ImmediateDefinition = (function () {
    function ImmediateDefinition(root) {
        this.root = root;
        if (root.setImmediate && typeof root.setImmediate === 'function') {
            this.setImmediate = root.setImmediate.bind(root);
            this.clearImmediate = root.clearImmediate.bind(root);
        }
        else {
            this.nextHandle = 1;
            this.tasksByHandle = {};
            this.currentlyRunningATask = false;
            // Don't get fooled by e.g. browserify environments.
            if (this.canUseProcessNextTick()) {
                // For Node.js before 0.9
                this.setImmediate = this.createProcessNextTickSetImmediate();
            }
            else if (this.canUsePostMessage()) {
                // For non-IE10 modern browsers
                this.setImmediate = this.createPostMessageSetImmediate();
            }
            else if (this.canUseMessageChannel()) {
                // For web workers, where supported
                this.setImmediate = this.createMessageChannelSetImmediate();
            }
            else if (this.canUseReadyStateChange()) {
                // For IE 6–8
                this.setImmediate = this.createReadyStateChangeSetImmediate();
            }
            else {
                // For older browsers
                this.setImmediate = this.createSetTimeoutSetImmediate();
            }
            var ci = function clearImmediate(handle) {
                delete clearImmediate.instance.tasksByHandle[handle];
            };
            ci.instance = this;
            this.clearImmediate = ci;
        }
    }
    ImmediateDefinition.prototype.identify = function (o) {
        return this.root.Object.prototype.toString.call(o);
    };
    ImmediateDefinition.prototype.canUseProcessNextTick = function () {
        return this.identify(this.root.process) === '[object process]';
    };
    ImmediateDefinition.prototype.canUseMessageChannel = function () {
        return Boolean(this.root.MessageChannel);
    };
    ImmediateDefinition.prototype.canUseReadyStateChange = function () {
        var document = this.root.document;
        return Boolean(document && 'onreadystatechange' in document.createElement('script'));
    };
    ImmediateDefinition.prototype.canUsePostMessage = function () {
        var root = this.root;
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `root.postMessage` means something completely different and can't be used for this purpose.
        if (root.postMessage && !root.importScripts) {
            var postMessageIsAsynchronous_1 = true;
            var oldOnMessage = root.onmessage;
            root.onmessage = function () {
                postMessageIsAsynchronous_1 = false;
            };
            root.postMessage('', '*');
            root.onmessage = oldOnMessage;
            return postMessageIsAsynchronous_1;
        }
        return false;
    };
    // This function accepts the same arguments as setImmediate, but
    // returns a function that requires no arguments.
    ImmediateDefinition.prototype.partiallyApplied = function (handler) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var fn = function result() {
            var _a = result, handler = _a.handler, args = _a.args;
            if (typeof handler === 'function') {
                handler.apply(undefined, args);
            }
            else {
                (new Function('' + handler))();
            }
        };
        fn.handler = handler;
        fn.args = args;
        return fn;
    };
    ImmediateDefinition.prototype.addFromSetImmediateArguments = function (args) {
        this.tasksByHandle[this.nextHandle] = this.partiallyApplied.apply(undefined, args);
        return this.nextHandle++;
    };
    ImmediateDefinition.prototype.createProcessNextTickSetImmediate = function () {
        var fn = function setImmediate() {
            var instance = setImmediate.instance;
            var handle = instance.addFromSetImmediateArguments(arguments);
            instance.root.process.nextTick(instance.partiallyApplied(instance.runIfPresent, handle));
            return handle;
        };
        fn.instance = this;
        return fn;
    };
    ImmediateDefinition.prototype.createPostMessageSetImmediate = function () {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages
        var root = this.root;
        var messagePrefix = 'setImmediate$' + root.Math.random() + '$';
        var onGlobalMessage = function globalMessageHandler(event) {
            var instance = globalMessageHandler.instance;
            if (event.source === root &&
                typeof event.data === 'string' &&
                event.data.indexOf(messagePrefix) === 0) {
                instance.runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };
        onGlobalMessage.instance = this;
        root.addEventListener('message', onGlobalMessage, false);
        var fn = function setImmediate() {
            var _a = setImmediate, messagePrefix = _a.messagePrefix, instance = _a.instance;
            var handle = instance.addFromSetImmediateArguments(arguments);
            instance.root.postMessage(messagePrefix + handle, '*');
            return handle;
        };
        fn.instance = this;
        fn.messagePrefix = messagePrefix;
        return fn;
    };
    ImmediateDefinition.prototype.runIfPresent = function (handle) {
        // From the spec: 'Wait until any invocations of this algorithm started before this one have completed.'
        // So if we're currently running a task, we'll need to delay this invocation.
        if (this.currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // 'too much recursion' error.
            this.root.setTimeout(this.partiallyApplied(this.runIfPresent, handle), 0);
        }
        else {
            var task = this.tasksByHandle[handle];
            if (task) {
                this.currentlyRunningATask = true;
                try {
                    task();
                }
                finally {
                    this.clearImmediate(handle);
                    this.currentlyRunningATask = false;
                }
            }
        }
    };
    ImmediateDefinition.prototype.createMessageChannelSetImmediate = function () {
        var _this = this;
        var channel = new this.root.MessageChannel();
        channel.port1.onmessage = function (event) {
            var handle = event.data;
            _this.runIfPresent(handle);
        };
        var fn = function setImmediate() {
            var _a = setImmediate, channel = _a.channel, instance = _a.instance;
            var handle = instance.addFromSetImmediateArguments(arguments);
            channel.port2.postMessage(handle);
            return handle;
        };
        fn.channel = channel;
        fn.instance = this;
        return fn;
    };
    ImmediateDefinition.prototype.createReadyStateChangeSetImmediate = function () {
        var fn = function setImmediate() {
            var instance = setImmediate.instance;
            var root = instance.root;
            var doc = root.document;
            var html = doc.documentElement;
            var handle = instance.addFromSetImmediateArguments(arguments);
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement('script');
            script.onreadystatechange = function () {
                instance.runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
            return handle;
        };
        fn.instance = this;
        return fn;
    };
    ImmediateDefinition.prototype.createSetTimeoutSetImmediate = function () {
        var fn = function setImmediate() {
            var instance = setImmediate.instance;
            var handle = instance.addFromSetImmediateArguments(arguments);
            instance.root.setTimeout(instance.partiallyApplied(instance.runIfPresent, handle), 0);
            return handle;
        };
        fn.instance = this;
        return fn;
    };
    return ImmediateDefinition;
}());
exports.ImmediateDefinition = ImmediateDefinition;
exports.Immediate = new ImmediateDefinition(root_1.root);
//# sourceMappingURL=Immediate.js.map

/***/ },
/* 1217 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var root_1 = __webpack_require__(46);
var MapPolyfill_1 = __webpack_require__(1218);
exports.Map = root_1.root.Map || (function () { return MapPolyfill_1.MapPolyfill; })();
//# sourceMappingURL=Map.js.map

/***/ },
/* 1218 */
/***/ function(module, exports) {

"use strict";
"use strict";
var MapPolyfill = (function () {
    function MapPolyfill() {
        this.size = 0;
        this._values = [];
        this._keys = [];
    }
    MapPolyfill.prototype.get = function (key) {
        var i = this._keys.indexOf(key);
        return i === -1 ? undefined : this._values[i];
    };
    MapPolyfill.prototype.set = function (key, value) {
        var i = this._keys.indexOf(key);
        if (i === -1) {
            this._keys.push(key);
            this._values.push(value);
            this.size++;
        }
        else {
            this._values[i] = value;
        }
        return this;
    };
    MapPolyfill.prototype.delete = function (key) {
        var i = this._keys.indexOf(key);
        if (i === -1) {
            return false;
        }
        this._values.splice(i, 1);
        this._keys.splice(i, 1);
        this.size--;
        return true;
    };
    MapPolyfill.prototype.clear = function () {
        this._keys.length = 0;
        this._values.length = 0;
        this.size = 0;
    };
    MapPolyfill.prototype.forEach = function (cb, thisArg) {
        for (var i = 0; i < this.size; i++) {
            cb.call(thisArg, this._values[i], this._keys[i]);
        }
    };
    return MapPolyfill;
}());
exports.MapPolyfill = MapPolyfill;
//# sourceMappingURL=MapPolyfill.js.map

/***/ },
/* 1219 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var root_1 = __webpack_require__(46);
var Object = root_1.root.Object;
if (typeof Object.assign != 'function') {
    (function () {
        Object.assign = function assignPolyfill(target) {
            var sources = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                sources[_i - 1] = arguments[_i];
            }
            if (target === undefined || target === null) {
                throw new TypeError('cannot convert undefined or null to object');
            }
            var output = Object(target);
            var len = sources.length;
            for (var index = 0; index < len; index++) {
                var source = sources[index];
                if (source !== undefined && source !== null) {
                    for (var key in source) {
                        if (source.hasOwnProperty(key)) {
                            output[key] = source[key];
                        }
                    }
                }
            }
            return output;
        };
    })();
}
exports.assign = Object.assign;
//# sourceMappingURL=assign.js.map

/***/ },
/* 1220 */
/***/ function(module, exports) {

"use strict";
"use strict";
function not(pred, thisArg) {
    function notPred() {
        return !(notPred.pred.apply(notPred.thisArg, arguments));
    }
    notPred.pred = pred;
    notPred.thisArg = thisArg;
    return notPred;
}
exports.not = not;
//# sourceMappingURL=not.js.map

/***/ },
/* 1221 */
/***/ function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			configurable: false,
			get: function() { return module.l; }
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			configurable: false,
			get: function() { return module.i; }
		});
		module.webpackPolyfill = 1;
	}
	return module;
}


/***/ },
/* 1222 */
/***/ function(module, exports, __webpack_require__) {

var map = {
	"app/attendance/attendance.module": 656,
	"app/dashboard-info/dashboard-info.module": 657,
	"app/dashboard/dashboard.module": 658,
	"app/easy-fees/easy-fees.module": 659,
	"app/landing-page/landing-page.module": 660,
	"app/occupancy/occupancy.module": 661,
	"app/reports/reports.module": 662,
	"app/settings/settings.module": 663,
	"app/subventions/subventions.module": 664,
	"app/verify/verify.module": 665
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 1222;


/***/ }
]));
//# sourceMappingURL=0.bundle.map